{"version":3,"file":"index.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/boxengine.ts","../src/title.ts","../src/widget.ts","../src/layout.ts","../src/panellayout.ts","../src/utils.ts","../src/splitlayout.ts","../src/accordionlayout.ts","../src/panel.ts","../src/splitpanel.ts","../src/accordionpanel.ts","../src/boxlayout.ts","../src/boxpanel.ts","../src/commandpalette.ts","../src/menu.ts","../src/contextmenu.ts","../src/tabbar.ts","../src/docklayout.ts","../src/dockpanel.ts","../src/focustracker.ts","../src/gridlayout.ts","../src/menubar.ts","../src/scrollbar.ts","../src/singletonlayout.ts","../src/stackedlayout.ts","../src/stackedpanel.ts","../src/tabpanel.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n\n/**\n * A sizer object for use with the box engine layout functions.\n *\n * #### Notes\n * A box sizer holds the geometry information for an object along an\n * arbitrary layout orientation.\n *\n * For best performance, this class should be treated as a raw data\n * struct. It should not typically be subclassed.\n */\nexport\nclass BoxSizer {\n  /**\n   * The preferred size for the sizer.\n   *\n   * #### Notes\n   * The sizer will be given this initial size subject to its size\n   * bounds. The sizer will not deviate from this size unless such\n   * deviation is required to fit into the available layout space.\n   *\n   * There is no limit to this value, but it will be clamped to the\n   * bounds defined by [[minSize]] and [[maxSize]].\n   *\n   * The default value is `0`.\n   */\n  sizeHint = 0;\n\n  /**\n   * The minimum size of the sizer.\n   *\n   * #### Notes\n   * The sizer will never be sized less than this value, even if\n   * it means the sizer will overflow the available layout space.\n   *\n   * It is assumed that this value lies in the range `[0, Infinity)`\n   * and that it is `<=` to [[maxSize]]. Failure to adhere to this\n   * constraint will yield undefined results.\n   *\n   * The default value is `0`.\n   */\n  minSize = 0;\n\n  /**\n   * The maximum size of the sizer.\n   *\n   * #### Notes\n   * The sizer will never be sized greater than this value, even if\n   * it means the sizer will underflow the available layout space.\n   *\n   * It is assumed that this value lies in the range `[0, Infinity]`\n   * and that it is `>=` to [[minSize]]. Failure to adhere to this\n   * constraint will yield undefined results.\n   *\n   * The default value is `Infinity`.\n   */\n  maxSize = Infinity;\n\n  /**\n   * The stretch factor for the sizer.\n   *\n   * #### Notes\n   * This controls how much the sizer stretches relative to its sibling\n   * sizers when layout space is distributed. A stretch factor of zero\n   * is special and will cause the sizer to only be resized after all\n   * other sizers with a stretch factor greater than zero have been\n   * resized to their limits.\n   *\n   * It is assumed that this value is an integer that lies in the range\n   * `[0, Infinity)`. Failure to adhere to this constraint will yield\n   * undefined results.\n   *\n   * The default value is `1`.\n   */\n  stretch = 1;\n\n  /**\n   * The computed size of the sizer.\n   *\n   * #### Notes\n   * This value is the output of a call to [[boxCalc]]. It represents\n   * the computed size for the object along the layout orientation,\n   * and will always lie in the range `[minSize, maxSize]`.\n   *\n   * This value is output only.\n   *\n   * Changing this value will have no effect.\n   */\n  size = 0;\n\n  /**\n   * An internal storage property for the layout algorithm.\n   *\n   * #### Notes\n   * This value is used as temporary storage by the layout algorithm.\n   *\n   * Changing this value will have no effect.\n   */\n  done = false;\n}\n\n\n/**\n * The namespace for the box engine layout functions.\n */\nexport\nnamespace BoxEngine {\n  /**\n   * Calculate the optimal layout sizes for a sequence of box sizers.\n   *\n   * This distributes the available layout space among the box sizers\n   * according to the following algorithm:\n   *\n   * 1. Initialize the sizers's size to its size hint and compute the\n   *    sums for each of size hint, min size, and max size.\n   *\n   * 2. If the total size hint equals the available space, return.\n   *\n   * 3. If the available space is less than the total min size, set all\n   *    sizers to their min size and return.\n   *\n   * 4. If the available space is greater than the total max size, set\n   *    all sizers to their max size and return.\n   *\n   * 5. If the layout space is less than the total size hint, distribute\n   *    the negative delta as follows:\n   *\n   *    a. Shrink each sizer with a stretch factor greater than zero by\n   *       an amount proportional to the negative space and the sum of\n   *       stretch factors. If the sizer reaches its min size, remove\n   *       it and its stretch factor from the computation.\n   *\n   *    b. If after adjusting all stretch sizers there remains negative\n   *       space, distribute the space equally among the sizers with a\n   *       stretch factor of zero. If a sizer reaches its min size,\n   *       remove it from the computation.\n   *\n   * 6. If the layout space is greater than the total size hint,\n   *    distribute the positive delta as follows:\n   *\n   *    a. Expand each sizer with a stretch factor greater than zero by\n   *       an amount proportional to the postive space and the sum of\n   *       stretch factors. If the sizer reaches its max size, remove\n   *       it and its stretch factor from the computation.\n   *\n   *    b. If after adjusting all stretch sizers there remains positive\n   *       space, distribute the space equally among the sizers with a\n   *       stretch factor of zero. If a sizer reaches its max size,\n   *       remove it from the computation.\n   *\n   * 7. return\n   *\n   * @param sizers - The sizers for a particular layout line.\n   *\n   * @param space - The available layout space for the sizers.\n   *\n   * @returns The delta between the provided available space and the\n   *   actual consumed space. This value will be zero if the sizers\n   *   can be adjusted to fit, negative if the available space is too\n   *   small, and positive if the available space is too large.\n   *\n   * #### Notes\n   * The [[size]] of each sizer is updated with the computed size.\n   *\n   * This function can be called at any time to recompute the layout for\n   * an existing sequence of sizers. The previously computed results will\n   * have no effect on the new output. It is therefore not necessary to\n   * create new sizer objects on each resize event.\n   */\n  export\n  function calc(sizers: ArrayLike<BoxSizer>, space: number): number {\n    // Bail early if there is nothing to do.\n    let count = sizers.length;\n    if (count === 0) {\n      return space;\n    }\n\n    // Setup the size and stretch counters.\n    let totalMin = 0;\n    let totalMax = 0;\n    let totalSize = 0;\n    let totalStretch = 0;\n    let stretchCount = 0;\n\n    // Setup the sizers and compute the totals.\n    for (let i = 0; i < count; ++i) {\n      let sizer = sizers[i];\n      let min = sizer.minSize;\n      let max = sizer.maxSize;\n      let hint = sizer.sizeHint;\n      sizer.done = false;\n      sizer.size = Math.max(min, Math.min(hint, max));\n      totalSize += sizer.size;\n      totalMin += min;\n      totalMax += max;\n      if (sizer.stretch > 0) {\n        totalStretch += sizer.stretch;\n        stretchCount++;\n      }\n    }\n\n    // If the space is equal to the total size, return early.\n    if (space === totalSize) {\n      return 0;\n    }\n\n    // If the space is less than the total min, minimize each sizer.\n    if (space <= totalMin) {\n      for (let i = 0; i < count; ++i) {\n        let sizer = sizers[i];\n        sizer.size = sizer.minSize;\n      }\n      return space - totalMin;\n    }\n\n    // If the space is greater than the total max, maximize each sizer.\n    if (space >= totalMax) {\n      for (let i = 0; i < count; ++i) {\n        let sizer = sizers[i];\n        sizer.size = sizer.maxSize;\n      }\n      return space - totalMax;\n    }\n\n    // The loops below perform sub-pixel precision sizing. A near zero\n    // value is used for compares instead of zero to ensure that the\n    // loop terminates when the subdivided space is reasonably small.\n    let nearZero = 0.01;\n\n    // A counter which is decremented each time a sizer is resized to\n    // its limit. This ensures the loops terminate even if there is\n    // space remaining to distribute.\n    let notDoneCount = count;\n\n    // Distribute negative delta space.\n    if (space < totalSize) {\n      // Shrink each stretchable sizer by an amount proportional to its\n      // stretch factor. If a sizer reaches its min size it's marked as\n      // done. The loop progresses in phases where each sizer is given\n      // a chance to consume its fair share for the pass, regardless of\n      // whether a sizer before it reached its limit. This continues\n      // until the stretchable sizers or the free space is exhausted.\n      let freeSpace = totalSize - space;\n      while (stretchCount > 0 && freeSpace > nearZero) {\n        let distSpace = freeSpace;\n        let distStretch = totalStretch;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done || sizer.stretch === 0) {\n            continue;\n          }\n          let amt = sizer.stretch * distSpace / distStretch;\n          if (sizer.size - amt <= sizer.minSize) {\n            freeSpace -= sizer.size - sizer.minSize;\n            totalStretch -= sizer.stretch;\n            sizer.size = sizer.minSize;\n            sizer.done = true;\n            notDoneCount--;\n            stretchCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size -= amt;\n          }\n        }\n      }\n      // Distribute any remaining space evenly among the non-stretchable\n      // sizers. This progresses in phases in the same manner as above.\n      while (notDoneCount > 0 && freeSpace > nearZero) {\n        let amt = freeSpace / notDoneCount;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done) {\n            continue;\n          }\n          if (sizer.size - amt <= sizer.minSize) {\n            freeSpace -= sizer.size - sizer.minSize;\n            sizer.size = sizer.minSize;\n            sizer.done = true;\n            notDoneCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size -= amt;\n          }\n        }\n      }\n    }\n    // Distribute positive delta space.\n    else {\n      // Expand each stretchable sizer by an amount proportional to its\n      // stretch factor. If a sizer reaches its max size it's marked as\n      // done. The loop progresses in phases where each sizer is given\n      // a chance to consume its fair share for the pass, regardless of\n      // whether a sizer before it reached its limit. This continues\n      // until the stretchable sizers or the free space is exhausted.\n      let freeSpace = space - totalSize;\n      while (stretchCount > 0 && freeSpace > nearZero) {\n        let distSpace = freeSpace;\n        let distStretch = totalStretch;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done || sizer.stretch === 0) {\n            continue;\n          }\n          let amt = sizer.stretch * distSpace / distStretch;\n          if (sizer.size + amt >= sizer.maxSize) {\n            freeSpace -= sizer.maxSize - sizer.size;\n            totalStretch -= sizer.stretch;\n            sizer.size = sizer.maxSize;\n            sizer.done = true;\n            notDoneCount--;\n            stretchCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size += amt;\n          }\n        }\n      }\n      // Distribute any remaining space evenly among the non-stretchable\n      // sizers. This progresses in phases in the same manner as above.\n      while (notDoneCount > 0 && freeSpace > nearZero) {\n        let amt = freeSpace / notDoneCount;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done) {\n            continue;\n          }\n          if (sizer.size + amt >= sizer.maxSize) {\n            freeSpace -= sizer.maxSize - sizer.size;\n            sizer.size = sizer.maxSize;\n            sizer.done = true;\n            notDoneCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size += amt;\n          }\n        }\n      }\n    }\n\n    // Indicate that the consumed space equals the available space.\n    return 0;\n  }\n\n  /**\n   * Adjust a sizer by a delta and update its neighbors accordingly.\n   *\n   * @param sizers - The sizers which should be adjusted.\n   *\n   * @param index - The index of the sizer to grow.\n   *\n   * @param delta - The amount to adjust the sizer, positive or negative.\n   *\n   * #### Notes\n   * This will adjust the indicated sizer by the specified amount, along\n   * with the sizes of the appropriate neighbors, subject to the limits\n   * specified by each of the sizers.\n   *\n   * This is useful when implementing box layouts where the boundaries\n   * between the sizers are interactively adjustable by the user.\n   */\n  export\n  function adjust(sizers: ArrayLike<BoxSizer>, index: number, delta: number): void {\n    // Bail early when there is nothing to do.\n    if (sizers.length === 0 || delta === 0) {\n      return;\n    }\n\n    // Dispatch to the proper implementation.\n    if (delta > 0) {\n      growSizer(sizers, index, delta);\n    } else {\n      shrinkSizer(sizers, index, -delta);\n    }\n  }\n\n  /**\n   * Grow a sizer by a positive delta and adjust neighbors.\n   */\n  function growSizer(sizers: ArrayLike<BoxSizer>, index: number, delta: number): void {\n    // Compute how much the items to the left can expand.\n    let growLimit = 0;\n    for (let i = 0; i <= index; ++i) {\n      let sizer = sizers[i];\n      growLimit += sizer.maxSize - sizer.size;\n    }\n\n    // Compute how much the items to the right can shrink.\n    let shrinkLimit = 0;\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\n      let sizer = sizers[i];\n      shrinkLimit += sizer.size - sizer.minSize;\n    }\n\n    // Clamp the delta adjustment to the limits.\n    delta = Math.min(delta, growLimit, shrinkLimit);\n\n    // Grow the sizers to the left by the delta.\n    let grow = delta;\n    for (let i = index; i >= 0 && grow > 0; --i) {\n      let sizer = sizers[i];\n      let limit = sizer.maxSize - sizer.size;\n      if (limit >= grow) {\n        sizer.sizeHint = sizer.size + grow;\n        grow = 0;\n      } else {\n        sizer.sizeHint = sizer.size + limit;\n        grow -= limit;\n      }\n    }\n\n    // Shrink the sizers to the right by the delta.\n    let shrink = delta;\n    for (let i = index + 1, n = sizers.length; i < n && shrink > 0; ++i) {\n      let sizer = sizers[i];\n      let limit = sizer.size - sizer.minSize;\n      if (limit >= shrink) {\n        sizer.sizeHint = sizer.size - shrink;\n        shrink = 0;\n      } else {\n        sizer.sizeHint = sizer.size - limit;\n        shrink -= limit;\n      }\n    }\n  }\n\n  /**\n   * Shrink a sizer by a positive delta and adjust neighbors.\n   */\n  function shrinkSizer(sizers: ArrayLike<BoxSizer>, index: number, delta: number): void {\n    // Compute how much the items to the right can expand.\n    let growLimit = 0;\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\n      let sizer = sizers[i];\n      growLimit += sizer.maxSize - sizer.size;\n    }\n\n    // Compute how much the items to the left can shrink.\n    let shrinkLimit = 0;\n    for (let i = 0; i <= index; ++i) {\n      let sizer = sizers[i];\n      shrinkLimit += sizer.size - sizer.minSize;\n    }\n\n    // Clamp the delta adjustment to the limits.\n    delta = Math.min(delta, growLimit, shrinkLimit);\n\n    // Grow the sizers to the right by the delta.\n    let grow = delta;\n    for (let i = index + 1, n = sizers.length; i < n && grow > 0; ++i) {\n      let sizer = sizers[i];\n      let limit = sizer.maxSize - sizer.size;\n      if (limit >= grow) {\n        sizer.sizeHint = sizer.size + grow;\n        grow = 0;\n      } else {\n        sizer.sizeHint = sizer.size + limit;\n        grow -= limit;\n      }\n    }\n\n    // Shrink the sizers to the left by the delta.\n    let shrink = delta;\n    for (let i = index; i >= 0 && shrink > 0; --i) {\n      let sizer = sizers[i];\n      let limit = sizer.size - sizer.minSize;\n      if (limit >= shrink) {\n        sizer.sizeHint = sizer.size - shrink;\n        shrink = 0;\n      } else {\n        sizer.sizeHint = sizer.size - limit;\n        shrink -= limit;\n      }\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport { VirtualElement } from \"@lumino/virtualdom\";\n\n\n/**\n * An object which holds data related to an object's title.\n *\n * #### Notes\n * A title object is intended to hold the data necessary to display a\n * header for a particular object. A common example is the `TabPanel`,\n * which uses the widget title to populate the tab for a child widget.\n */\nexport\nclass Title<T> {\n  /**\n   * Construct a new title.\n   *\n   * @param options - The options for initializing the title.\n   */\n  constructor(options: Title.IOptions<T>) {\n    this.owner = options.owner;\n    if (options.label !== undefined) {\n      this._label = options.label;\n    }\n    if (options.mnemonic !== undefined) {\n      this._mnemonic = options.mnemonic;\n    }\n    if (options.icon !== undefined) {\n      /* <DEPRECATED> */\n      if (typeof options.icon === \"string\") {\n        // when ._icon is null, the .icon getter will alias .iconClass\n        this._icon = null;\n        this._iconClass = options.icon;\n      } else {\n      /* </DEPRECATED> */\n\n      this._icon = options.icon;\n\n      /* <DEPRECATED> */\n      }\n      /* </DEPRECATED> */\n    }\n\n    /* <DEPRECATED> */\n    else {\n      // if unset, default to aliasing .iconClass\n      this._icon = null;\n    }\n    /* </DEPRECATED> */\n\n    if (options.iconClass !== undefined) {\n      this._iconClass = options.iconClass;\n    }\n    if (options.iconLabel !== undefined) {\n      this._iconLabel = options.iconLabel;\n    }\n    if (options.iconRenderer !== undefined) {\n      this._icon = options.iconRenderer;\n    }\n    if (options.caption !== undefined) {\n      this._caption = options.caption;\n    }\n    if (options.className !== undefined) {\n      this._className = options.className;\n    }\n    if (options.closable !== undefined) {\n      this._closable = options.closable;\n    }\n    this._dataset = options.dataset || {};\n  }\n\n  /**\n   * A signal emitted when the state of the title changes.\n   */\n  get changed(): ISignal<this, void> {\n    return this._changed;\n  }\n\n  /**\n   * The object which owns the title.\n   */\n  readonly owner: T;\n\n  /**\n   * Get the label for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get label(): string {\n    return this._label;\n  }\n\n  /**\n   * Set the label for the title.\n   */\n  set label(value: string) {\n    if (this._label === value) {\n      return;\n    }\n    this._label = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the mnemonic index for the title.\n   *\n   * #### Notes\n   * The default value is `-1`.\n   */\n  get mnemonic(): number {\n    return this._mnemonic;\n  }\n\n  /**\n   * Set the mnemonic index for the title.\n   */\n  set mnemonic(value: number) {\n    if (this._mnemonic === value) {\n      return;\n    }\n    this._mnemonic = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the icon renderer for the title.\n   *\n   * #### Notes\n   * The default value is undefined.\n   *\n   * DEPRECATED: if set to a string value, the .icon field will function as\n   * an alias for the .iconClass field, for backwards compatibility\n   */\n  get icon(): VirtualElement.IRenderer| undefined\n  /* <DEPRECATED> */ | string /* </DEPRECATED> */\n  {\n    /* <DEPRECATED> */\n    if (this._icon === null) {\n      // only alias .iconClass if ._icon has been explicitly nulled\n      return this.iconClass\n    }\n    /* </DEPRECATED> */\n\n    return this._icon;\n  }\n\n  /**\n   * Set the icon renderer for the title.\n   *\n   * #### Notes\n   * A renderer is an object that supplies a render and unrender function.\n   *\n   * DEPRECATED: if set to a string value, the .icon field will function as\n   * an alias for the .iconClass field, for backwards compatibility\n   */\n  set icon(value: VirtualElement.IRenderer | undefined\n  /* <DEPRECATED> */ | string /* </DEPRECATED> */\n  ) {\n    /* <DEPRECATED> */\n    if (typeof value === \"string\") {\n      // when ._icon is null, the .icon getter will alias .iconClass\n      this._icon = null;\n      this.iconClass = value;\n    } else {\n    /* </DEPRECATED> */\n\n    if (this._icon === value) {\n      return;\n    }\n    this._icon = value;\n    this._changed.emit(undefined);\n\n    /* <DEPRECATED> */\n    }\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Get the icon class name for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get iconClass(): string {\n    return this._iconClass;\n  }\n\n  /**\n   * Set the icon class name for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set iconClass(value: string) {\n    if (this._iconClass === value) {\n      return;\n    }\n    this._iconClass = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the icon label for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get iconLabel(): string {\n    return this._iconLabel;\n  }\n\n  /**\n   * Set the icon label for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set iconLabel(value: string) {\n    if (this._iconLabel === value) {\n      return;\n    }\n    this._iconLabel = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * @deprecated Use `icon` instead.\n   */\n  get iconRenderer(): VirtualElement.IRenderer | undefined {\n    return this._icon || undefined;\n  }\n\n  /**\n   * @deprecated Use `icon` instead.\n   */\n  set iconRenderer(value: VirtualElement.IRenderer | undefined) {\n    this.icon = value;\n  }\n\n  /**\n   * Get the caption for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get caption(): string {\n    return this._caption;\n  }\n\n  /**\n   * Set the caption for the title.\n   */\n  set caption(value: string) {\n    if (this._caption === value) {\n      return;\n    }\n    this._caption = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the extra class name for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get className(): string {\n    return this._className;\n  }\n\n  /**\n   * Set the extra class name for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set className(value: string) {\n    if (this._className === value) {\n      return;\n    }\n    this._className = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the closable state for the title.\n   *\n   * #### Notes\n   * The default value is `false`.\n   */\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  /**\n   * Set the closable state for the title.\n   *\n   * #### Notes\n   * This controls the presence of a close icon when applicable.\n   */\n  set closable(value: boolean) {\n    if (this._closable === value) {\n      return;\n    }\n    this._closable = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the dataset for the title.\n   *\n   * #### Notes\n   * The default value is an empty dataset.\n   */\n  get dataset(): Title.Dataset {\n    return this._dataset;\n  }\n\n  /**\n   * Set the dataset for the title.\n   *\n   * #### Notes\n   * This controls the data attributes when applicable.\n   */\n  set dataset(value: Title.Dataset) {\n    if (this._dataset === value) {\n      return;\n    }\n    this._dataset = value;\n    this._changed.emit(undefined);\n  }\n\n  private _label = '';\n  private _caption = '';\n  private _mnemonic = -1;\n\n  private _icon: VirtualElement.IRenderer | undefined\n  /* <DEPRECATED> */ | null /* </DEPRECATED> */;\n\n  private _iconClass = '';\n  private _iconLabel = '';\n  private _className = '';\n  private _closable = false;\n  private _dataset: Title.Dataset;\n  private _changed = new Signal<this, void>(this);\n}\n\n\n/**\n * The namespace for the `Title` class statics.\n */\nexport\nnamespace Title {\n  /**\n   * A type alias for a simple immutable string dataset.\n   */\n  export\n  type Dataset = { readonly [key: string]: string };\n\n  /**\n   * An options object for initializing a title.\n   */\n  export\n  interface IOptions<T> {\n    /**\n     * The object which owns the title.\n     */\n    owner: T;\n\n    /**\n     * The label for the title.\n     */\n    label?: string;\n\n    /**\n     * The mnemonic index for the title.\n     */\n    mnemonic?: number;\n\n    /**\n     * The icon renderer for the title.\n     *\n     * DEPRECATED: if set to a string value, the .icon field will function as\n     * an alias for the .iconClass field, for backwards compatibility\n     */\n    icon?: VirtualElement.IRenderer | string;\n\n    /**\n     * The icon class name for the title.\n     */\n    iconClass?: string;\n\n    /**\n     * The icon label for the title.\n     */\n    iconLabel?: string;\n\n    /**\n     * @deprecated Use `icon` instead.\n     */\n    iconRenderer?: VirtualElement.IRenderer;\n\n    /**\n     * The caption for the title.\n     */\n    caption?: string;\n\n    /**\n     * The extra class name for the title.\n     */\n    className?: string;\n\n    /**\n     * The closable state for the title.\n     */\n    closable?: boolean;\n\n    /**\n     * The dataset for the title.\n     */\n    dataset?: Dataset;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterator, empty\n} from '@lumino/algorithm';\n\nimport {\n  IObservableDisposable\n} from '@lumino/disposable';\n\nimport {\n  ConflatableMessage, IMessageHandler, Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  AttachedProperty\n} from '@lumino/properties';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  Layout\n} from './layout';\n\nimport {\n  Title\n} from './title';\n\n\n/**\n * The base class of the lumino widget hierarchy.\n *\n * #### Notes\n * This class will typically be subclassed in order to create a useful\n * widget. However, it can be used directly to host externally created\n * content.\n */\nexport\nclass Widget implements IMessageHandler, IObservableDisposable {\n  /**\n   * Construct a new widget.\n   *\n   * @param options - The options for initializing the widget.\n   */\n  constructor(options: Widget.IOptions = {}) {\n    this.node = Private.createNode(options);\n    this.addClass('lm-Widget');\n    /* <DEPRECATED> */\n    this.addClass('p-Widget');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Dispose of the widget and its descendant widgets.\n   *\n   * #### Notes\n   * It is unsafe to use the widget after it has been disposed.\n   *\n   * All calls made to this method after the first are a no-op.\n   */\n  dispose(): void {\n    // Do nothing if the widget is already disposed.\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Set the disposed flag and emit the disposed signal.\n    this.setFlag(Widget.Flag.IsDisposed);\n    this._disposed.emit(undefined);\n\n    // Remove or detach the widget if necessary.\n    if (this.parent) {\n      this.parent = null;\n    } else if (this.isAttached) {\n      Widget.detach(this);\n    }\n\n    // Dispose of the widget layout.\n    if (this._layout) {\n      this._layout.dispose();\n      this._layout = null;\n    }\n\n    // Clear the extra data associated with the widget.\n    Signal.clearData(this);\n    MessageLoop.clearData(this);\n    AttachedProperty.clearData(this);\n  }\n\n  /**\n   * A signal emitted when the widget is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Get the DOM node owned by the widget.\n   */\n  readonly node: HTMLElement;\n\n  /**\n   * Test whether the widget has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this.testFlag(Widget.Flag.IsDisposed);\n  }\n\n  /**\n   * Test whether the widget's node is attached to the DOM.\n   */\n  get isAttached(): boolean {\n    return this.testFlag(Widget.Flag.IsAttached);\n  }\n\n  /**\n   * Test whether the widget is explicitly hidden.\n   */\n  get isHidden(): boolean {\n    return this.testFlag(Widget.Flag.IsHidden);\n  }\n\n  /**\n   * Test whether the widget is visible.\n   *\n   * #### Notes\n   * A widget is visible when it is attached to the DOM, is not\n   * explicitly hidden, and has no explicitly hidden ancestors.\n   */\n  get isVisible(): boolean {\n    return this.testFlag(Widget.Flag.IsVisible);\n  }\n\n  /**\n   * The title object for the widget.\n   *\n   * #### Notes\n   * The title object is used by some container widgets when displaying\n   * the widget alongside some title, such as a tab panel or side bar.\n   *\n   * Since not all widgets will use the title, it is created on demand.\n   *\n   * The `owner` property of the title is set to this widget.\n   */\n  get title(): Title<Widget> {\n    return Private.titleProperty.get(this);\n  }\n\n  /**\n   * Get the id of the widget's DOM node.\n   */\n  get id(): string {\n    return this.node.id;\n  }\n\n  /**\n   * Set the id of the widget's DOM node.\n   */\n  set id(value: string) {\n    this.node.id = value;\n  }\n\n  /**\n   * The dataset for the widget's DOM node.\n   */\n  get dataset(): DOMStringMap {\n    return this.node.dataset;\n  }\n\n  /**\n   * Get the parent of the widget.\n   */\n  get parent(): Widget | null {\n    return this._parent;\n  }\n\n  /**\n   * Set the parent of the widget.\n   *\n   * #### Notes\n   * Children are typically added to a widget by using a layout, which\n   * means user code will not normally set the parent widget directly.\n   *\n   * The widget will be automatically removed from its old parent.\n   *\n   * This is a no-op if there is no effective parent change.\n   */\n  set parent(value: Widget | null) {\n    if (this._parent === value) {\n      return;\n    }\n    if (value && this.contains(value)) {\n      throw new Error('Invalid parent widget.');\n    }\n    if (this._parent && !this._parent.isDisposed) {\n      let msg = new Widget.ChildMessage('child-removed', this);\n      MessageLoop.sendMessage(this._parent, msg);\n    }\n    this._parent = value;\n    if (this._parent && !this._parent.isDisposed) {\n      let msg = new Widget.ChildMessage('child-added', this);\n      MessageLoop.sendMessage(this._parent, msg);\n    }\n    if (!this.isDisposed) {\n      MessageLoop.sendMessage(this, Widget.Msg.ParentChanged);\n    }\n  }\n\n  /**\n   * Get the layout for the widget.\n   */\n  get layout(): Layout | null {\n    return this._layout;\n  }\n\n  /**\n   * Set the layout for the widget.\n   *\n   * #### Notes\n   * The layout is single-use only. It cannot be changed after the\n   * first assignment.\n   *\n   * The layout is disposed automatically when the widget is disposed.\n   */\n  set layout(value: Layout | null) {\n    if (this._layout === value) {\n      return;\n    }\n    if (this.testFlag(Widget.Flag.DisallowLayout)) {\n      throw new Error('Cannot set widget layout.');\n    }\n    if (this._layout) {\n      throw new Error('Cannot change widget layout.');\n    }\n    if (value!.parent) {\n      throw new Error('Cannot change layout parent.');\n    }\n    this._layout = value;\n    value!.parent = this;\n  }\n\n  /**\n   * Create an iterator over the widget's children.\n   *\n   * @returns A new iterator over the children of the widget.\n   *\n   * #### Notes\n   * The widget must have a populated layout in order to have children.\n   *\n   * If a layout is not installed, the returned iterator will be empty.\n   */\n  children(): IIterator<Widget> {\n    return this._layout ? this._layout.iter() : empty<Widget>();\n  }\n\n  /**\n   * Test whether a widget is a descendant of this widget.\n   *\n   * @param widget - The descendant widget of interest.\n   *\n   * @returns `true` if the widget is a descendant, `false` otherwise.\n   */\n  contains(widget: Widget): boolean {\n    for (let value: Widget | null = widget; value; value = value._parent) {\n      if (value === this) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Test whether the widget's DOM node has the given class name.\n   *\n   * @param name - The class name of interest.\n   *\n   * @returns `true` if the node has the class, `false` otherwise.\n   */\n  hasClass(name: string): boolean {\n    return this.node.classList.contains(name);\n  }\n\n  /**\n   * Add a class name to the widget's DOM node.\n   *\n   * @param name - The class name to add to the node.\n   *\n   * #### Notes\n   * If the class name is already added to the node, this is a no-op.\n   *\n   * The class name must not contain whitespace.\n   */\n  addClass(name: string): void {\n    this.node.classList.add(name);\n  }\n\n  /**\n   * Remove a class name from the widget's DOM node.\n   *\n   * @param name - The class name to remove from the node.\n   *\n   * #### Notes\n   * If the class name is not yet added to the node, this is a no-op.\n   *\n   * The class name must not contain whitespace.\n   */\n  removeClass(name: string): void {\n    this.node.classList.remove(name);\n  }\n\n  /**\n   * Toggle a class name on the widget's DOM node.\n   *\n   * @param name - The class name to toggle on the node.\n   *\n   * @param force - Whether to force add the class (`true`) or force\n   *   remove the class (`false`). If not provided, the presence of\n   *   the class will be toggled from its current state.\n   *\n   * @returns `true` if the class is now present, `false` otherwise.\n   *\n   * #### Notes\n   * The class name must not contain whitespace.\n   */\n  toggleClass(name: string, force?: boolean): boolean {\n    if (force === true) {\n      this.node.classList.add(name);\n      return true;\n    }\n    if (force === false) {\n      this.node.classList.remove(name);\n      return false;\n    }\n    return this.node.classList.toggle(name);\n  }\n\n  /**\n   * Post an `'update-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  update(): void {\n    MessageLoop.postMessage(this, Widget.Msg.UpdateRequest);\n  }\n\n  /**\n   * Post a `'fit-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  fit(): void {\n    MessageLoop.postMessage(this, Widget.Msg.FitRequest);\n  }\n\n  /**\n   * Post an `'activate-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  activate(): void {\n    MessageLoop.postMessage(this, Widget.Msg.ActivateRequest);\n  }\n\n  /**\n   * Send a `'close-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for sending the message.\n   */\n  close(): void {\n    MessageLoop.sendMessage(this, Widget.Msg.CloseRequest);\n  }\n\n  /**\n   * Show the widget and make it visible to its parent widget.\n   *\n   * #### Notes\n   * This causes the [[isHidden]] property to be `false`.\n   *\n   * If the widget is not explicitly hidden, this is a no-op.\n   */\n  show(): void {\n    if (!this.testFlag(Widget.Flag.IsHidden)) {\n      return;\n    }\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeShow);\n    }\n    this.clearFlag(Widget.Flag.IsHidden);\n    this.removeClass('lm-mod-hidden');\n    /* <DEPRECATED> */\n    this.removeClass('p-mod-hidden');\n    /* </DEPRECATED> */\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.AfterShow);\n    }\n    if (this.parent) {\n      let msg = new Widget.ChildMessage('child-shown', this);\n      MessageLoop.sendMessage(this.parent, msg);\n    }\n  }\n\n  /**\n   * Hide the widget and make it hidden to its parent widget.\n   *\n   * #### Notes\n   * This causes the [[isHidden]] property to be `true`.\n   *\n   * If the widget is explicitly hidden, this is a no-op.\n   */\n  hide(): void {\n    if (this.testFlag(Widget.Flag.IsHidden)) {\n      return;\n    }\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeHide);\n    }\n    this.setFlag(Widget.Flag.IsHidden);\n    this.addClass('lm-mod-hidden');\n    /* <DEPRECATED> */\n    this.addClass('p-mod-hidden');\n    /* </DEPRECATED> */\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.AfterHide);\n    }\n    if (this.parent) {\n      let msg = new Widget.ChildMessage('child-hidden', this);\n      MessageLoop.sendMessage(this.parent, msg);\n    }\n  }\n\n  /**\n   * Show or hide the widget according to a boolean value.\n   *\n   * @param hidden - `true` to hide the widget, or `false` to show it.\n   *\n   * #### Notes\n   * This is a convenience method for `hide()` and `show()`.\n   */\n  setHidden(hidden: boolean): void {\n    if (hidden) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Test whether the given widget flag is set.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  testFlag(flag: Widget.Flag): boolean {\n    return (this._flags & flag) !== 0;\n  }\n\n  /**\n   * Set the given widget flag.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  setFlag(flag: Widget.Flag): void {\n    this._flags |= flag;\n  }\n\n  /**\n   * Clear the given widget flag.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  clearFlag(flag: Widget.Flag): void {\n    this._flags &= ~flag;\n  }\n\n  /**\n   * Process a message sent to the widget.\n   *\n   * @param msg - The message sent to the widget.\n   *\n   * #### Notes\n   * Subclasses may reimplement this method as needed.\n   */\n  processMessage(msg: Message): void {\n    switch (msg.type) {\n    case 'resize':\n      this.notifyLayout(msg);\n      this.onResize(msg as Widget.ResizeMessage);\n      break;\n    case 'update-request':\n      this.notifyLayout(msg);\n      this.onUpdateRequest(msg);\n      break;\n    case 'fit-request':\n      this.notifyLayout(msg);\n      this.onFitRequest(msg);\n      break;\n    case 'before-show':\n      this.notifyLayout(msg);\n      this.onBeforeShow(msg);\n      break;\n    case 'after-show':\n      this.setFlag(Widget.Flag.IsVisible);\n      this.notifyLayout(msg);\n      this.onAfterShow(msg);\n      break;\n    case 'before-hide':\n      this.notifyLayout(msg);\n      this.onBeforeHide(msg);\n      break;\n    case 'after-hide':\n      this.clearFlag(Widget.Flag.IsVisible);\n      this.notifyLayout(msg);\n      this.onAfterHide(msg);\n      break;\n    case 'before-attach':\n      this.notifyLayout(msg);\n      this.onBeforeAttach(msg);\n      break;\n    case 'after-attach':\n      if (!this.isHidden && (!this.parent || this.parent.isVisible)) {\n        this.setFlag(Widget.Flag.IsVisible);\n      }\n      this.setFlag(Widget.Flag.IsAttached);\n      this.notifyLayout(msg);\n      this.onAfterAttach(msg);\n      break;\n    case 'before-detach':\n      this.notifyLayout(msg);\n      this.onBeforeDetach(msg);\n      break;\n    case 'after-detach':\n      this.clearFlag(Widget.Flag.IsVisible);\n      this.clearFlag(Widget.Flag.IsAttached);\n      this.notifyLayout(msg);\n      this.onAfterDetach(msg);\n      break;\n    case 'activate-request':\n      this.notifyLayout(msg);\n      this.onActivateRequest(msg);\n      break;\n    case 'close-request':\n      this.notifyLayout(msg);\n      this.onCloseRequest(msg);\n      break;\n    case 'child-added':\n      this.notifyLayout(msg);\n      this.onChildAdded(msg as Widget.ChildMessage);\n      break;\n    case 'child-removed':\n      this.notifyLayout(msg);\n      this.onChildRemoved(msg as Widget.ChildMessage);\n      break;\n    default:\n      this.notifyLayout(msg);\n      break;\n    }\n  }\n\n  /**\n   * Invoke the message processing routine of the widget's layout.\n   *\n   * @param msg - The message to dispatch to the layout.\n   *\n   * #### Notes\n   * This is a no-op if the widget does not have a layout.\n   *\n   * This will not typically be called directly by user code.\n   */\n  protected notifyLayout(msg: Message): void {\n    if (this._layout) {\n      this._layout.processParentMessage(msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'close-request'` message.\n   *\n   * #### Notes\n   * The default implementation unparents or detaches the widget.\n   */\n  protected onCloseRequest(msg: Message): void {\n    if (this.parent) {\n      this.parent = null;\n    } else if (this.isAttached) {\n      Widget.detach(this);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void { }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onUpdateRequest(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onFitRequest(msg: Message): void { }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onActivateRequest(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeShow(msg: Message): void { }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterShow(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'before-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeHide(msg: Message): void { }\n\n  /**\n   * A message handler invoked on an `'after-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterHide(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeAttach(msg: Message): void { }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterAttach(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeDetach(msg: Message): void { }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterDetach(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void { }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void { }\n\n  private _flags = 0;\n  private _layout: Layout | null = null;\n  private _parent: Widget | null = null;\n  private _disposed = new Signal<this, void>(this);\n}\n\n\n/**\n * The namespace for the `Widget` class statics.\n */\nexport\nnamespace Widget {\n  /**\n   * An options object for initializing a widget.\n   */\n  export\n  interface IOptions {\n    /**\n     * The optional node to use for the widget.\n     *\n     * If a node is provided, the widget will assume full ownership\n     * and control of the node, as if it had created the node itself.\n     *\n     * The default is a new `<div>`.\n     */\n    node?: HTMLElement;\n\n    /**\n     * The optional element tag, used for constructing the widget's node.\n     *\n     * If a pre-constructed node is provided via the `node` arg, this\n     * value is ignored.\n     */\n    tag?: keyof HTMLElementTagNameMap;\n  }\n\n  /**\n   * An enum of widget bit flags.\n   */\n  export\n  enum Flag {\n    /**\n     * The widget has been disposed.\n     */\n    IsDisposed = 0x1,\n\n    /**\n     * The widget is attached to the DOM.\n     */\n    IsAttached = 0x2,\n\n    /**\n     * The widget is hidden.\n     */\n    IsHidden = 0x4,\n\n    /**\n     * The widget is visible.\n     */\n    IsVisible = 0x8,\n\n    /**\n     * A layout cannot be set on the widget.\n     */\n    DisallowLayout = 0x10\n  }\n\n  /**\n   * A collection of stateless messages related to widgets.\n   */\n  export\n  namespace Msg {\n    /**\n     * A singleton `'before-show'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it becomes visible.\n     *\n     * This message is **not** sent when the widget is being attached.\n     */\n    export\n    const BeforeShow = new Message('before-show');\n\n    /**\n     * A singleton `'after-show'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it becomes visible.\n     *\n     * This message is **not** sent when the widget is being attached.\n     */\n    export\n    const AfterShow = new Message('after-show');\n\n    /**\n     * A singleton `'before-hide'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it becomes not-visible.\n     *\n     * This message is **not** sent when the widget is being detached.\n     */\n    export\n    const BeforeHide = new Message('before-hide');\n\n    /**\n     * A singleton `'after-hide'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it becomes not-visible.\n     *\n     * This message is **not** sent when the widget is being detached.\n     */\n    export\n    const AfterHide = new Message('after-hide');\n\n    /**\n     * A singleton `'before-attach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it is attached.\n     */\n    export\n    const BeforeAttach = new Message('before-attach');\n\n    /**\n     * A singleton `'after-attach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it is attached.\n     */\n    export\n    const AfterAttach = new Message('after-attach');\n\n    /**\n     * A singleton `'before-detach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it is detached.\n     */\n    export\n    const BeforeDetach = new Message('before-detach');\n\n    /**\n     * A singleton `'after-detach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it is detached.\n     */\n    export\n    const AfterDetach = new Message('after-detach');\n\n    /**\n     * A singleton `'parent-changed'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget when its parent has changed.\n     */\n    export\n    const ParentChanged = new Message('parent-changed');\n\n    /**\n     * A singleton conflatable `'update-request'` message.\n     *\n     * #### Notes\n     * This message can be dispatched to supporting widgets in order to\n     * update their content based on the current widget state. Not all\n     * widgets will respond to messages of this type.\n     *\n     * For widgets with a layout, this message will inform the layout to\n     * update the position and size of its child widgets.\n     */\n    export\n    const UpdateRequest = new ConflatableMessage('update-request');\n\n    /**\n     * A singleton conflatable `'fit-request'` message.\n     *\n     * #### Notes\n     * For widgets with a layout, this message will inform the layout to\n     * recalculate its size constraints to fit the space requirements of\n     * its child widgets, and to update their position and size. Not all\n     * layouts will respond to messages of this type.\n     */\n    export\n    const FitRequest = new ConflatableMessage('fit-request');\n\n    /**\n     * A singleton conflatable `'activate-request'` message.\n     *\n     * #### Notes\n     * This message should be dispatched to a widget when it should\n     * perform the actions necessary to activate the widget, which\n     * may include focusing its node or descendant node.\n     */\n    export\n    const ActivateRequest = new ConflatableMessage('activate-request');\n\n    /**\n     * A singleton conflatable `'close-request'` message.\n     *\n     * #### Notes\n     * This message should be dispatched to a widget when it should close\n     * and remove itself from the widget hierarchy.\n     */\n    export\n    const CloseRequest = new ConflatableMessage('close-request');\n  }\n\n  /**\n   * A message class for child related messages.\n   */\n  export\n  class ChildMessage extends Message {\n    /**\n     * Construct a new child message.\n     *\n     * @param type - The message type.\n     *\n     * @param child - The child widget for the message.\n     */\n    constructor(type: string, child: Widget) {\n      super(type);\n      this.child = child;\n    }\n\n    /**\n     * The child widget for the message.\n     */\n    readonly child: Widget;\n  }\n\n  /**\n   * A message class for `'resize'` messages.\n   */\n  export\n  class ResizeMessage extends Message {\n    /**\n     * Construct a new resize message.\n     *\n     * @param width - The **offset width** of the widget, or `-1` if\n     *   the width is not known.\n     *\n     * @param height - The **offset height** of the widget, or `-1` if\n     *   the height is not known.\n     */\n    constructor(width: number, height: number) {\n      super('resize');\n      this.width = width;\n      this.height = height;\n    }\n\n    /**\n     * The offset width of the widget.\n     *\n     * #### Notes\n     * This will be `-1` if the width is unknown.\n     */\n    readonly width: number;\n\n    /**\n     * The offset height of the widget.\n     *\n     * #### Notes\n     * This will be `-1` if the height is unknown.\n     */\n    readonly height: number;\n  }\n\n  /**\n   * The namespace for the `ResizeMessage` class statics.\n   */\n  export\n  namespace ResizeMessage {\n    /**\n     * A singleton `'resize'` message with an unknown size.\n     */\n    export\n    const UnknownSize = new ResizeMessage(-1, -1);\n  }\n\n  /**\n   * Attach a widget to a host DOM node.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param host - The DOM node to use as the widget's host.\n   *\n   * @param ref - The child of `host` to use as the reference element.\n   *   If this is provided, the widget will be inserted before this\n   *   node in the host. The default is `null`, which will cause the\n   *   widget to be added as the last child of the host.\n   *\n   * #### Notes\n   * This will throw an error if the widget is not a root widget, if\n   * the widget is already attached, or if the host is not attached\n   * to the DOM.\n   */\n  export\n  function attach(widget: Widget, host: HTMLElement, ref: HTMLElement | null = null): void {\n    if (widget.parent) {\n      throw new Error('Cannot attach a child widget.');\n    }\n    if (widget.isAttached || document.body.contains(widget.node)) {\n      throw new Error('Widget is already attached.');\n    }\n    if (!document.body.contains(host)) {\n      throw new Error('Host is not attached.');\n    }\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    host.insertBefore(widget.node, ref);\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n  }\n\n  /**\n   * Detach the widget from its host DOM node.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will throw an error if the widget is not a root widget,\n   * or if the widget is not attached to the DOM.\n   */\n  export\n  function detach(widget: Widget): void {\n    if (widget.parent) {\n      throw new Error('Cannot detach a child widget.');\n    }\n    if (!widget.isAttached || !document.body.contains(widget.node)) {\n      throw new Error('Widget is not attached.');\n    }\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    widget.node.parentNode!.removeChild(widget.node);\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An attached property for the widget title object.\n   */\n  export\n  const titleProperty = new AttachedProperty<Widget, Title<Widget>>({\n    name: 'title',\n    create: owner => new Title<Widget>({ owner }),\n  });\n\n  /**\n   * Create a DOM node for the given widget options.\n   */\n  export\n  function createNode(options: Widget.IOptions): HTMLElement {\n    return options.node || document.createElement(options.tag || 'div');\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterable, IIterator, each\n} from '@lumino/algorithm';\n\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  AttachedProperty\n} from '@lumino/properties';\n\nimport {\n  Signal\n} from '@lumino/signaling';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * An abstract base class for creating lumino layouts.\n *\n * #### Notes\n * A layout is used to add widgets to a parent and to arrange those\n * widgets within the parent's DOM node.\n *\n * This class implements the base functionality which is required of\n * nearly all layouts. It must be subclassed in order to be useful.\n *\n * Notably, this class does not define a uniform interface for adding\n * widgets to the layout. A subclass should define that API in a way\n * which is meaningful for its intended use.\n */\nexport\nabstract class Layout implements IIterable<Widget>, IDisposable {\n  /**\n   * Construct a new layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: Layout.IOptions = {}) {\n    this._fitPolicy = options.fitPolicy || 'set-min-size';\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This should be reimplemented to clear and dispose of the widgets.\n   *\n   * All reimplementations should call the superclass method.\n   *\n   * This method is called automatically when the parent is disposed.\n   */\n  dispose(): void {\n    this._parent = null;\n    this._disposed = true;\n    Signal.clearData(this);\n    AttachedProperty.clearData(this);\n  }\n\n  /**\n   * Test whether the layout is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Get the parent widget of the layout.\n   */\n  get parent(): Widget | null {\n    return this._parent;\n  }\n\n  /**\n   * Set the parent widget of the layout.\n   *\n   * #### Notes\n   * This is set automatically when installing the layout on the parent\n   * widget. The parent widget should not be set directly by user code.\n   */\n  set parent(value: Widget | null) {\n    if (this._parent === value) {\n      return;\n    }\n    if (this._parent) {\n      throw new Error('Cannot change parent widget.');\n    }\n    if (value!.layout !== this) {\n      throw new Error('Invalid parent widget.');\n    }\n    this._parent = value;\n    this.init();\n  }\n\n  /**\n   * Get the fit policy for the layout.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   */\n  get fitPolicy(): Layout.FitPolicy {\n    return this._fitPolicy;\n  }\n\n  /**\n   * Set the fit policy for the layout.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   *\n   * Changing the fit policy will clear the current size constraint\n   * for the parent widget and then re-fit the parent.\n   */\n  set fitPolicy(value: Layout.FitPolicy) {\n    // Bail if the policy does not change\n    if (this._fitPolicy === value) {\n      return;\n    }\n\n    // Update the internal policy.\n    this._fitPolicy = value;\n\n    // Clear the size constraints and schedule a fit of the parent.\n    if (this._parent) {\n      let style = this._parent.node.style;\n      style.minWidth = '';\n      style.minHeight = '';\n      style.maxWidth = '';\n      style.maxHeight = '';\n      this._parent.fit();\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   *\n   * #### Notes\n   * This abstract method must be implemented by a subclass.\n   */\n  abstract iter(): IIterator<Widget>;\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method should *not* modify the widget's `parent`.\n   */\n  abstract removeWidget(widget: Widget): void;\n\n  /**\n   * Process a message sent to the parent widget.\n   *\n   * @param msg - The message sent to the parent widget.\n   *\n   * #### Notes\n   * This method is called by the parent widget to process a message.\n   *\n   * Subclasses may reimplement this method as needed.\n   */\n  processParentMessage(msg: Message): void {\n    switch (msg.type) {\n    case 'resize':\n      this.onResize(msg as Widget.ResizeMessage);\n      break;\n    case 'update-request':\n      this.onUpdateRequest(msg);\n      break;\n    case 'fit-request':\n      this.onFitRequest(msg);\n      break;\n    case 'before-show':\n      this.onBeforeShow(msg);\n      break;\n    case 'after-show':\n      this.onAfterShow(msg);\n      break;\n    case 'before-hide':\n      this.onBeforeHide(msg);\n      break;\n    case 'after-hide':\n      this.onAfterHide(msg);\n      break;\n    case 'before-attach':\n      this.onBeforeAttach(msg);\n      break;\n    case 'after-attach':\n      this.onAfterAttach(msg);\n      break;\n    case 'before-detach':\n      this.onBeforeDetach(msg);\n      break;\n    case 'after-detach':\n      this.onAfterDetach(msg);\n      break;\n    case 'child-removed':\n      this.onChildRemoved(msg as Widget.ChildMessage);\n      break;\n    case 'child-shown':\n      this.onChildShown(msg as Widget.ChildMessage);\n      break;\n    case 'child-hidden':\n      this.onChildHidden(msg as Widget.ChildMessage);\n      break;\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   *\n   * #### Notes\n   * This method is invoked immediately after the layout is installed\n   * on the parent widget.\n   *\n   * The default implementation reparents all of the widgets to the\n   * layout parent widget.\n   *\n   * Subclasses should reimplement this method and attach the child\n   * widget nodes to the parent widget's node.\n   */\n  protected init(): void {\n    each(this, widget => {\n      widget.parent = this.parent;\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   *\n   * #### Notes\n   * The layout should ensure that its widgets are resized according\n   * to the specified layout space, and that they are sent a `'resize'`\n   * message if appropriate.\n   *\n   * The default implementation of this method sends an `UnknownSize`\n   * resize message to all widgets.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n    });\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * The layout should ensure that its widgets are resized according\n   * to the available layout space, and that they are sent a `'resize'`\n   * message if appropriate.\n   *\n   * The default implementation of this method sends an `UnknownSize`\n   * resize message to all widgets.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, msg);\n    });\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterAttach(msg: Message): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, msg);\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, msg);\n    });\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterDetach(msg: Message): void {\n    each(this, widget => {\n      MessageLoop.sendMessage(widget, msg);\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeShow(msg: Message): void {\n    each(this, widget => {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    });\n  }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterShow(msg: Message): void {\n    each(this, widget => {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'before-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeHide(msg: Message): void {\n    each(this, widget => {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    });\n  }\n\n  /**\n   * A message handler invoked on an `'after-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterHide(msg: Message): void {\n    each(this, widget => {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    });\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   *\n   * #### Notes\n   * This will remove the child widget from the layout.\n   *\n   * Subclasses should **not** typically reimplement this method.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    this.removeWidget(msg.child);\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onFitRequest(msg: Message): void { }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void { }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void { }\n\n  private _disposed = false;\n  private _fitPolicy: Layout.FitPolicy;\n  private _parent: Widget | null = null;\n}\n\n\n/**\n * The namespace for the `Layout` class statics.\n */\nexport\nnamespace Layout {\n  /**\n   * A type alias for the layout fit policy.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   */\n  export\n  type FitPolicy = (\n    /**\n     * No size constraint will be applied to the parent widget.\n     */\n    'set-no-constraint' |\n\n    /**\n     * The computed min size will be applied to the parent widget.\n     */\n    'set-min-size'\n  );\n\n  /**\n   * An options object for initializing a layout.\n   */\n  export\n  interface IOptions {\n    /**\n     * The fit policy for the layout.\n     *\n     * The default is `'set-min-size'`.\n     */\n    fitPolicy?: FitPolicy;\n  }\n\n  /**\n   * A type alias for the horizontal alignment of a widget.\n   */\n  export\n  type HorizontalAlignment = 'left' | 'center' | 'right';\n\n  /**\n   * A type alias for the vertical alignment of a widget.\n   */\n  export\n  type VerticalAlignment = 'top' | 'center' | 'bottom';\n\n  /**\n   * Get the horizontal alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The horizontal alignment for the widget.\n   *\n   * #### Notes\n   * If the layout width allocated to a widget is larger than its max\n   * width, the horizontal alignment controls how the widget is placed\n   * within the extra horizontal space.\n   *\n   * If the allocated width is less than the widget's max width, the\n   * horizontal alignment has no effect.\n   *\n   * Some layout implementations may ignore horizontal alignment.\n   */\n  export\n  function getHorizontalAlignment(widget: Widget): HorizontalAlignment {\n    return Private.horizontalAlignmentProperty.get(widget);\n  }\n\n  /**\n   * Set the horizontal alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the horizontal alignment.\n   *\n   * #### Notes\n   * If the layout width allocated to a widget is larger than its max\n   * width, the horizontal alignment controls how the widget is placed\n   * within the extra horizontal space.\n   *\n   * If the allocated width is less than the widget's max width, the\n   * horizontal alignment has no effect.\n   *\n   * Some layout implementations may ignore horizontal alignment.\n   *\n   * Changing the horizontal alignment will post an `update-request`\n   * message to widget's parent, provided the parent has a layout\n   * installed.\n   */\n  export\n  function setHorizontalAlignment(widget: Widget, value: HorizontalAlignment): void {\n    Private.horizontalAlignmentProperty.set(widget, value);\n  }\n\n  /**\n   * Get the vertical alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The vertical alignment for the widget.\n   *\n   * #### Notes\n   * If the layout height allocated to a widget is larger than its max\n   * height, the vertical alignment controls how the widget is placed\n   * within the extra vertical space.\n   *\n   * If the allocated height is less than the widget's max height, the\n   * vertical alignment has no effect.\n   *\n   * Some layout implementations may ignore vertical alignment.\n   */\n  export\n  function getVerticalAlignment(widget: Widget): VerticalAlignment {\n    return Private.verticalAlignmentProperty.get(widget);\n  }\n\n  /**\n   * Set the vertical alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the vertical alignment.\n   *\n   * #### Notes\n   * If the layout height allocated to a widget is larger than its max\n   * height, the vertical alignment controls how the widget is placed\n   * within the extra vertical space.\n   *\n   * If the allocated height is less than the widget's max height, the\n   * vertical alignment has no effect.\n   *\n   * Some layout implementations may ignore vertical alignment.\n   *\n   * Changing the horizontal alignment will post an `update-request`\n   * message to widget's parent, provided the parent has a layout\n   * installed.\n   */\n  export\n  function setVerticalAlignment(widget: Widget, value: VerticalAlignment): void {\n    Private.verticalAlignmentProperty.set(widget, value);\n  }\n}\n\n\n/**\n * An object which assists in the absolute layout of widgets.\n *\n * #### Notes\n * This class is useful when implementing a layout which arranges its\n * widgets using absolute positioning.\n *\n * This class is used by nearly all of the built-in lumino layouts.\n */\nexport\nclass LayoutItem implements IDisposable {\n  /**\n   * Construct a new layout item.\n   *\n   * @param widget - The widget to be managed by the item.\n   *\n   * #### Notes\n   * The widget will be set to absolute positioning.\n   */\n  constructor(widget: Widget) {\n    this.widget = widget;\n    this.widget.node.style.position = 'absolute';\n  }\n\n  /**\n   * Dispose of the the layout item.\n   *\n   * #### Notes\n   * This will reset the positioning of the widget.\n   */\n  dispose(): void {\n    // Do nothing if the item is already disposed.\n    if (this._disposed) {\n      return;\n    }\n\n    // Mark the item as disposed.\n    this._disposed = true;\n\n    // Reset the widget style.\n    let style = this.widget.node.style;\n    style.position = '';\n    style.top = '';\n    style.left = '';\n    style.width = '';\n    style.height = '';\n  }\n\n  /**\n   * The widget managed by the layout item.\n   */\n  readonly widget: Widget;\n\n  /**\n   * The computed minimum width of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get minWidth(): number {\n    return this._minWidth;\n  }\n\n  /**\n   * The computed minimum height of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get minHeight(): number {\n    return this._minHeight;\n  }\n\n  /**\n   * The computed maximum width of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get maxWidth(): number {\n    return this._maxWidth;\n  }\n\n  /**\n   * The computed maximum height of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get maxHeight(): number {\n    return this._maxHeight;\n  }\n\n  /**\n   * Whether the layout item is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Whether the managed widget is hidden.\n   */\n  get isHidden(): boolean {\n    return this.widget.isHidden;\n  }\n\n  /**\n   * Whether the managed widget is visible.\n   */\n  get isVisible(): boolean {\n    return this.widget.isVisible;\n  }\n\n  /**\n   * Whether the managed widget is attached.\n   */\n  get isAttached(): boolean {\n    return this.widget.isAttached;\n  }\n\n  /**\n   * Update the computed size limits of the managed widget.\n   */\n  fit(): void {\n    let limits = ElementExt.sizeLimits(this.widget.node);\n    this._minWidth = limits.minWidth;\n    this._minHeight = limits.minHeight;\n    this._maxWidth = limits.maxWidth;\n    this._maxHeight = limits.maxHeight;\n  }\n\n  /**\n   * Update the position and size of the managed widget.\n   *\n   * @param left - The left edge position of the layout box.\n   *\n   * @param top - The top edge position of the layout box.\n   *\n   * @param width - The width of the layout box.\n   *\n   * @param height - The height of the layout box.\n   */\n  update(left: number, top: number, width: number, height: number): void {\n    // Clamp the size to the computed size limits.\n    let clampW = Math.max(this._minWidth, Math.min(width, this._maxWidth));\n    let clampH = Math.max(this._minHeight, Math.min(height, this._maxHeight));\n\n    // Adjust the left edge for the horizontal alignment, if needed.\n    if (clampW < width) {\n      switch (Layout.getHorizontalAlignment(this.widget)) {\n      case 'left':\n        break;\n      case 'center':\n        left += (width - clampW) / 2;\n        break;\n      case 'right':\n        left += width - clampW;\n        break;\n      default:\n        throw 'unreachable';\n      }\n    }\n\n    // Adjust the top edge for the vertical alignment, if needed.\n    if (clampH < height) {\n      switch (Layout.getVerticalAlignment(this.widget)) {\n      case 'top':\n        break;\n      case 'center':\n        top += (height - clampH) / 2;\n        break;\n      case 'bottom':\n        top += height - clampH;\n        break;\n      default:\n        throw 'unreachable';\n      }\n    }\n\n    // Set up the resize variables.\n    let resized = false;\n    let style = this.widget.node.style;\n\n    // Update the top edge of the widget if needed.\n    if (this._top !== top) {\n      this._top = top;\n      style.top = `${top}px`;\n    }\n\n    // Update the left edge of the widget if needed.\n    if (this._left !== left) {\n      this._left = left;\n      style.left = `${left}px`;\n    }\n\n    // Update the width of the widget if needed.\n    if (this._width !== clampW) {\n      resized = true;\n      this._width = clampW;\n      style.width = `${clampW}px`;\n    }\n\n    // Update the height of the widget if needed.\n    if (this._height !== clampH) {\n      resized = true;\n      this._height = clampH;\n      style.height = `${clampH}px`;\n    }\n\n    // Send a resize message to the widget if needed.\n    if (resized) {\n      let msg = new Widget.ResizeMessage(clampW, clampH);\n      MessageLoop.sendMessage(this.widget, msg);\n    }\n  }\n\n  private _top = NaN;\n  private _left = NaN;\n  private _width = NaN;\n  private _height = NaN;\n  private _minWidth = 0;\n  private _minHeight = 0;\n  private _maxWidth = Infinity;\n  private _maxHeight = Infinity;\n  private _disposed = false;\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The attached property for a widget horizontal alignment.\n   */\n  export\n  const horizontalAlignmentProperty = new AttachedProperty<Widget, Layout.HorizontalAlignment>({\n    name: 'horizontalAlignment',\n    create: () => 'center',\n    changed: onAlignmentChanged\n  });\n\n  /**\n   * The attached property for a widget vertical alignment.\n   */\n  export\n  const verticalAlignmentProperty = new AttachedProperty<Widget, Layout.VerticalAlignment>({\n    name: 'verticalAlignment',\n    create: () => 'top',\n    changed: onAlignmentChanged\n  });\n\n  /**\n   * The change handler for the attached alignment properties.\n   */\n  function onAlignmentChanged(child: Widget): void {\n    if (child.parent && child.parent.layout) {\n      child.parent.update();\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, IIterator, each, iter\n} from '@lumino/algorithm';\n\nimport {\n  MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  Layout\n} from './layout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A concrete layout implementation suitable for many use cases.\n *\n * #### Notes\n * This class is suitable as a base class for implementing a variety of\n * layouts, but can also be used directly with standard CSS to layout a\n * collection of widgets.\n */\nexport\nclass PanelLayout extends Layout {\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This will clear and dispose all widgets in the layout.\n   *\n   * All reimplementations should call the superclass method.\n   *\n   * This method is called automatically when the parent is disposed.\n   */\n  dispose(): void {\n    while (this._widgets.length > 0) {\n      this._widgets.pop()!.dispose();\n    }\n    super.dispose();\n  }\n\n  /**\n   * A read-only array of the widgets in the layout.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return this._widgets;\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  iter(): IIterator<Widget> {\n    return iter(this._widgets);\n  }\n\n  /**\n   * Add a widget to the end of the layout.\n   *\n   * @param widget - The widget to add to the layout.\n   *\n   * #### Notes\n   * If the widget is already contained in the layout, it will be moved.\n   */\n  addWidget(widget: Widget): void {\n    this.insertWidget(this._widgets.length, widget);\n  }\n\n  /**\n   * Insert a widget into the layout at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into the layout.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the widgets.\n   *\n   * If the widget is already added to the layout, it will be moved.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    // Remove the widget from its current parent. This is a no-op\n    // if the widget's parent is already the layout parent widget.\n    widget.parent = this.parent;\n\n    // Look up the current index of the widget.\n    let i = this._widgets.indexOf(widget);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._widgets.length));\n\n    // If the widget is not in the array, insert it.\n    if (i === -1) {\n      // Insert the widget into the array.\n      ArrayExt.insert(this._widgets, j, widget);\n\n      // If the layout is parented, attach the widget to the DOM.\n      if (this.parent) {\n        this.attachWidget(j, widget);\n      }\n\n      // There is nothing more to do.\n      return;\n    }\n\n    // Otherwise, the widget exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._widgets.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return;\n    }\n\n    // Move the widget to the new location.\n    ArrayExt.move(this._widgets, i, j);\n\n    // If the layout is parented, move the widget in the DOM.\n    if (this.parent) {\n      this.moveWidget(i, j, widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    this.removeWidgetAt(this._widgets.indexOf(widget));\n  }\n\n  /**\n   * Remove the widget at a given index from the layout.\n   *\n   * @param index - The index of the widget to remove.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  removeWidgetAt(index: number): void {\n    // Remove the widget from the array.\n    let widget = ArrayExt.removeAt(this._widgets, index);\n\n    // If the layout is parented, detach the widget from the DOM.\n    if (widget && this.parent) {\n      this.detachWidget(index, widget);\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    each(this, (widget, index) => {\n      this.attachWidget(index, widget);\n    });\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation adds the widgets's node to the parent's\n   * node at the proper location, and sends the appropriate attach\n   * messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is added to the parent's node.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Look up the next sibling reference node.\n    let ref = this.parent!.node.children[index];\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Insert the widget's node before the sibling.\n    this.parent!.node.insertBefore(widget.node, ref);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation moves the widget's node to the proper\n   * location in the parent's node and sends the appropriate attach and\n   * detach messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is moved in the parent's node.\n   */\n  protected moveWidget(fromIndex: number, toIndex: number, widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` and  message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Look up the next sibling reference node.\n    let ref = this.parent!.node.children[toIndex];\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Insert the widget's node before the sibling.\n    this.parent!.node.insertBefore(widget.node, ref);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation removes the widget's node from the\n   * parent's node, and sends the appropriate detach messages to the\n   * widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is removed from the parent's node.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n  }\n\n  private _widgets: Widget[] = [];\n}\n","export namespace Utils {\n  /**\n   * Clamp a dimension value to an integer >= 0.\n   */\n  export function clampDimension(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n}\n\nexport default Utils\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt, each } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { BoxEngine, BoxSizer } from './boxengine';\n\nimport { LayoutItem } from './layout';\n\nimport { PanelLayout } from './panellayout';\n\nimport { Utils } from './utils';\n\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets into resizable sections.\n */\nexport class SplitLayout extends PanelLayout {\n  /**\n   * Construct a new split layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: SplitLayout.IOptions) {\n    super();\n    this.renderer = options.renderer;\n    if (options.orientation !== undefined) {\n      this._orientation = options.orientation;\n    }\n    if (options.alignment !== undefined) {\n      this._alignment = options.alignment;\n    }\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    each(this._items, (item) => {\n      item.dispose();\n    });\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._sizers.length = 0;\n    this._handles.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the split layout.\n   */\n  readonly renderer: SplitLayout.IRenderer;\n\n  /**\n   * Get the layout orientation for the split layout.\n   */\n  get orientation(): SplitLayout.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the layout orientation for the split layout.\n   */\n  set orientation(value: SplitLayout.Orientation) {\n    if (this._orientation === value) {\n      return;\n    }\n    this._orientation = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['orientation'] = value;\n    this.parent.fit();\n  }\n\n  /**\n   * Get the content alignment for the split layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand  to fill the\n   * entire split layout.\n   */\n  get alignment(): SplitLayout.Alignment {\n    return this._alignment;\n  }\n\n  /**\n   * Set the content alignment for the split layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand  to fill the\n   * entire split layout.\n   */\n  set alignment(value: SplitLayout.Alignment) {\n    if (this._alignment === value) {\n      return;\n    }\n    this._alignment = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['alignment'] = value;\n    this.parent.update();\n  }\n\n  /**\n   * Get the inter-element spacing for the split layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the split layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * A read-only array of the split handles in the layout.\n   */\n  get handles(): ReadonlyArray<HTMLDivElement> {\n    return this._handles;\n  }\n\n  /**\n   * Get the relative sizes of the widgets in the layout.\n   *\n   * @returns A new array of the relative sizes of the widgets.\n   *\n   * #### Notes\n   * The returned sizes reflect the sizes of the widgets normalized\n   * relative to their siblings.\n   *\n   * This method **does not** measure the DOM nodes.\n   */\n  relativeSizes(): number[] {\n    return Private.normalize(this._sizers.map((sizer) => sizer.size));\n  }\n\n  /**\n   * Set the relative sizes for the widgets in the layout.\n   *\n   * @param sizes - The relative sizes for the widgets in the panel.\n   *\n   * #### Notes\n   * Extra values are ignored, too few will yield an undefined layout.\n   *\n   * The actual geometry of the DOM nodes is updated asynchronously.\n   */\n  setRelativeSizes(sizes: number[]): void {\n    // Copy the sizes and pad with zeros as needed.\n    let n = this._sizers.length;\n    let temp = sizes.slice(0, n);\n    while (temp.length < n) {\n      temp.push(0);\n    }\n\n    // Normalize the padded sizes.\n    let normed = Private.normalize(temp);\n\n    // Apply the normalized sizes to the sizers.\n    for (let i = 0; i < n; ++i) {\n      let sizer = this._sizers[i];\n      sizer.sizeHint = normed[i];\n      sizer.size = normed[i];\n    }\n\n    // Set the flag indicating the sizes are normalized.\n    this._hasNormedSizes = true;\n\n    // Trigger an update of the parent widget.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Move the offset position of a split handle.\n   *\n   * @param index - The index of the handle of the interest.\n   *\n   * @param position - The desired offset position of the handle.\n   *\n   * #### Notes\n   * The position is relative to the offset parent.\n   *\n   * This will move the handle as close as possible to the desired\n   * position. The sibling widgets will be adjusted as necessary.\n   */\n  moveHandle(index: number, position: number): void {\n    // Bail if the index is invalid or the handle is hidden.\n    let handle = this._handles[index];\n    if (!handle || handle.classList.contains('lm-mod-hidden')) {\n      return;\n    }\n\n    // Compute the desired delta movement for the handle.\n    let delta: number;\n    if (this._orientation === 'horizontal') {\n      delta = position - handle.offsetLeft;\n    } else {\n      delta = position - handle.offsetTop;\n    }\n\n    // Bail if there is no handle movement.\n    if (delta === 0) {\n      return;\n    }\n\n    // Prevent widget resizing unless needed.\n    for (let sizer of this._sizers) {\n      if (sizer.size > 0) {\n        sizer.sizeHint = sizer.size;\n      }\n    }\n\n    // Adjust the sizers to reflect the handle movement.\n    BoxEngine.adjust(this._sizers, index, delta);\n\n    // Update the layout of the widgets.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    this.parent!.dataset['orientation'] = this.orientation;\n    this.parent!.dataset['alignment'] = this.alignment;\n    super.init();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Create the item, handle, and sizer for the new widget.\n    let item = new LayoutItem(widget);\n    let handle = Private.createHandle(this.renderer);\n    let average = Private.averageSize(this._sizers);\n    let sizer = Private.createSizer(average);\n\n    // Insert the item, handle, and sizer into the internal arrays.\n    ArrayExt.insert(this._items, index, item);\n    ArrayExt.insert(this._sizers, index, sizer);\n    ArrayExt.insert(this._handles, index, handle);\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget and handle nodes to the parent.\n    this.parent!.node.appendChild(widget.node);\n    this.parent!.node.appendChild(handle);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Move the item, sizer, and handle for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\n    ArrayExt.move(this._handles, fromIndex, toIndex);\n\n    // Post a fit request to the parent to show/hide last handle.\n    this.parent!.fit();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the item, handle, and sizer for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n    let handle = ArrayExt.removeAt(this._handles, index);\n    ArrayExt.removeAt(this._sizers, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget and handle nodes from the parent.\n    this.parent!.node.removeChild(widget.node);\n    this.parent!.node.removeChild(handle!);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Update the item position.\n   * \n   * @param i Item index\n   * @param isHorizontal Whether the layout is horizontal or not\n   * @param left Left position in pixels\n   * @param top Top position in pixels\n   * @param height Item height\n   * @param width Item width\n   * @param size Item size\n   */\n  protected updateItemPosition(\n    i: number,\n    isHorizontal: boolean,\n    left: number,\n    top: number,\n    height: number,\n    width: number,\n    size: number\n  ): void {\n    const item = this._items[i];\n    if (item.isHidden) {\n      return;\n    }\n\n    // Fetch the style for the handle.\n    let handleStyle = this._handles[i].style;\n\n    // Update the widget and handle, and advance the relevant edge.\n    if (isHorizontal) {\n      left += this.widgetOffset;\n      item.update(left, top, size, height);\n      left += size;\n      handleStyle.top = `${top}px`;\n      handleStyle.left = `${left}px`;\n      handleStyle.width = `${this._spacing}px`;\n      handleStyle.height = `${height}px`;\n    } else {\n      top += this.widgetOffset;\n      item.update(left, top, width, size);\n      top += size;\n      handleStyle.top = `${top}px`;\n      handleStyle.left = `${left}px`;\n      handleStyle.width = `${width}px`;\n      handleStyle.height = `${this._spacing}px`;\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Update the handles and track the visible widget count.\n    let nVisible = 0;\n    let lastHandleIndex = -1;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      if (this._items[i].isHidden) {\n        this._handles[i].classList.add('lm-mod-hidden');\n        /* <DEPRECATED> */\n        this._handles[i].classList.add('p-mod-hidden');\n        /* </DEPRECATED> */\n      } else {\n        this._handles[i].classList.remove('lm-mod-hidden');\n        /* <DEPRECATED> */\n        this._handles[i].classList.remove('p-mod-hidden');\n        /* </DEPRECATED> */\n        lastHandleIndex = i;\n        nVisible++;\n      }\n    }\n\n    // Hide the handle for the last visible widget.\n    if (lastHandleIndex !== -1) {\n      this._handles[lastHandleIndex].classList.add('lm-mod-hidden');\n      /* <DEPRECATED> */\n      this._handles[lastHandleIndex].classList.add('p-mod-hidden');\n      /* </DEPRECATED> */\n    }\n\n    // Update the fixed space for the visible items.\n    this._fixed =\n      this._spacing * Math.max(0, nVisible - 1) +\n      this.widgetOffset * this._items.length;\n\n    // Setup the computed minimum size.\n    let horz = this._orientation === 'horizontal';\n    let minW = horz ? this._fixed : 0;\n    let minH = horz ? 0 : this._fixed;\n\n    // Update the sizers and computed size limits.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item and corresponding box sizer.\n      let item = this._items[i];\n      let sizer = this._sizers[i];\n\n      // Prevent resizing unless necessary.\n      if (sizer.size > 0) {\n        sizer.sizeHint = sizer.size;\n      }\n\n      // If the item is hidden, it should consume zero size.\n      if (item.isHidden) {\n        sizer.minSize = 0;\n        sizer.maxSize = 0;\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the stretch factor.\n      sizer.stretch = SplitLayout.getStretch(item.widget);\n\n      // Update the sizer limits and computed min size.\n      if (horz) {\n        sizer.minSize = item.minWidth;\n        sizer.maxSize = item.maxWidth;\n        minW += item.minWidth;\n        minH = Math.max(minH, item.minHeight);\n      } else {\n        sizer.minSize = item.minHeight;\n        sizer.maxSize = item.maxHeight;\n        minH += item.minHeight;\n        minW = Math.max(minW, item.minWidth);\n      }\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0 && this.widgetOffset === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Set up the variables for justification and alignment offset.\n    let extra = 0;\n    let offset = 0;\n    let horz = this._orientation === 'horizontal';\n\n    if (nVisible > 0) {\n      // Compute the adjusted layout space.\n      let space: number;\n      if (horz) {\n        // left += this.widgetOffset;\n        space = Math.max(0, width - this._fixed);\n      } else {\n        // top += this.widgetOffset;\n        space = Math.max(0, height - this._fixed);\n      }\n\n      // Scale the size hints if they are normalized.\n      if (this._hasNormedSizes) {\n        for (let sizer of this._sizers) {\n          sizer.sizeHint *= space;\n        }\n        this._hasNormedSizes = false;\n      }\n\n      // Distribute the layout space to the box sizers.\n      let delta = BoxEngine.calc(this._sizers, space);\n\n      // Account for alignment if there is extra layout space.\n      if (delta > 0) {\n        switch (this._alignment) {\n          case 'start':\n            break;\n          case 'center':\n            extra = 0;\n            offset = delta / 2;\n            break;\n          case 'end':\n            extra = 0;\n            offset = delta;\n            break;\n          case 'justify':\n            extra = delta / nVisible;\n            offset = 0;\n            break;\n          default:\n            throw 'unreachable';\n        }\n      }\n    }\n\n    // Layout the items using the computed box sizes.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      const item = this._items[i];\n\n      // Fetch the computed size for the widget.\n      const size = item.isHidden ? 0 : this._sizers[i].size + extra;\n\n      this.updateItemPosition(\n        i,\n        horz,\n        horz ? left + offset : left,\n        horz ? top : top + offset,\n        height,\n        width,\n        size\n      );\n\n      const fullOffset =\n        this.widgetOffset +\n        (this._handles[i].classList.contains('lm-mod-hidden')\n          ? 0\n          : this._spacing);\n\n      if (horz) {\n        left += size + fullOffset;\n      } else {\n        top += size + fullOffset;\n      }\n    }\n  }\n\n  protected widgetOffset = 0;\n  private _fixed = 0;\n  private _spacing = 4;\n  private _dirty = false;\n  private _hasNormedSizes = false;\n  private _sizers: BoxSizer[] = [];\n  private _items: LayoutItem[] = [];\n  private _handles: HTMLDivElement[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _alignment: SplitLayout.Alignment = 'start';\n  private _orientation: SplitLayout.Orientation = 'horizontal';\n}\n\n/**\n * The namespace for the `SplitLayout` class statics.\n */\nexport namespace SplitLayout {\n  /**\n   * A type alias for a split layout orientation.\n   */\n  export type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * A type alias for a split layout alignment.\n   */\n  export type Alignment = 'start' | 'center' | 'end' | 'justify';\n\n  /**\n   * An options object for initializing a split layout.\n   */\n  export interface IOptions {\n    /**\n     * The renderer to use for the split layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The orientation of the layout.\n     *\n     * The default is `'horizontal'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The content alignment of the layout.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * A renderer for use with a split layout.\n   */\n  export interface IRenderer {\n    /**\n     * Create a new handle for use with a split layout.\n     *\n     * @returns A new handle element.\n     */\n    createHandle(): HTMLDivElement;\n  }\n\n  /**\n   * Get the split layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The split layout stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return Private.stretchProperty.get(widget);\n  }\n\n  /**\n   * Set the split layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    Private.stretchProperty.set(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for a widget stretch factor.\n   */\n  export const stretchProperty = new AttachedProperty<Widget, number>({\n    name: 'stretch',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged,\n  });\n\n  /**\n   * Create a new box sizer with the given size hint.\n   */\n  export function createSizer(size: number): BoxSizer {\n    let sizer = new BoxSizer();\n    sizer.sizeHint = Math.floor(size);\n    return sizer;\n  }\n\n  /**\n   * Create a new split handle node using the given renderer.\n   */\n  export function createHandle(\n    renderer: SplitLayout.IRenderer\n  ): HTMLDivElement {\n    let handle = renderer.createHandle();\n    handle.style.position = 'absolute';\n    return handle;\n  }\n\n  /**\n   * Compute the average size of an array of box sizers.\n   */\n  export function averageSize(sizers: BoxSizer[]): number {\n    return sizers.reduce((v, s) => v + s.size, 0) / sizers.length || 0;\n  }\n\n  /**\n   * Normalize an array of values.\n   */\n  export function normalize(values: number[]): number[] {\n    let n = values.length;\n    if (n === 0) {\n      return [];\n    }\n    let sum = values.reduce((a, b) => a + Math.abs(b), 0);\n    return sum === 0 ? values.map((v) => 1 / n) : values.map((v) => v / sum);\n  }\n\n  /**\n   * The change handler for the attached sizing properties.\n   */\n  function onChildSizingChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof SplitLayout) {\n      child.parent.fit();\n    }\n  }\n}\n","import { ArrayExt } from '@lumino/algorithm';\nimport { SplitLayout } from './splitlayout';\nimport { Title } from './title';\nimport Utils from './utils';\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets into collapsible resizable sections.\n */\nexport class AccordionLayout extends SplitLayout {\n  /**\n   * Construct a new accordion layout.\n   *\n   * @param options - The options for initializing the layout.\n   *\n   * #### Notes\n   * The default orientation will be vertical.\n   *\n   * Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\n   */\n  constructor(options: AccordionLayout.IOptions) {\n    super({ ...options, orientation: options.orientation || 'vertical' });\n    this.titleSpace = options.titleSpace || 22;\n  }\n\n  /**\n   * The section title height or width depending on the orientation.\n   */\n  get titleSpace(): number {\n    return this.widgetOffset;\n  }\n  set titleSpace(value: number) {\n    value = Utils.clampDimension(value);\n    if (this.widgetOffset === value) {\n      return;\n    }\n    this.widgetOffset = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * A read-only array of the section titles in the panel.\n   */\n  get titles(): ReadonlyArray<HTMLElement> {\n    return this._titles;\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Clear the layout state.\n    this._titles.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the accordion layout.\n   */\n  readonly renderer: AccordionLayout.IRenderer;\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    const title = Private.createTitle(this.renderer, widget.title);\n    title.style.position = 'absolute';\n    title.setAttribute('aria-label', `${widget.title.label} Section`);\n    title.setAttribute('aria-expanded', 'true');\n    title.setAttribute('aria-controls', widget.id);\n    title.classList.add('lm-mod-expanded');\n\n    ArrayExt.insert(this._titles, index, title);\n\n    // Add the title node to the parent before the widget.\n    this.parent!.node.appendChild(title);\n\n    widget.node.setAttribute('role', 'region');\n    widget.node.setAttribute('aria-labelledby', title.id);\n\n    super.attachWidget(index, widget);\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    ArrayExt.move(this._titles, fromIndex, toIndex);\n    super.moveWidget(fromIndex, toIndex, widget);\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    const title = ArrayExt.removeAt(this._titles, index);\n\n    this.parent!.node.removeChild(title!);\n\n    super.detachWidget(index, widget);\n  }\n\n  /**\n   * Update the item position.\n   *\n   * @param i Item index\n   * @param isHorizontal Whether the layout is horizontal or not\n   * @param left Left position in pixels\n   * @param top Top position in pixels\n   * @param height Item height\n   * @param width Item width\n   * @param size Item size\n   */\n  protected updateItemPosition(\n    i: number,\n    isHorizontal: boolean,\n    left: number,\n    top: number,\n    height: number,\n    width: number,\n    size: number\n  ): void {\n    const titleStyle = this._titles[i].style;\n\n    // Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\n    titleStyle.top = `${top}px`;\n    titleStyle.left = `${left}px`;\n    titleStyle.height = `${this.widgetOffset}px`;\n    if (isHorizontal) {\n      titleStyle.width = `${height}px`;\n    } else {\n      titleStyle.width = `${width}px`;\n    }\n\n    super.updateItemPosition(i, isHorizontal, left, top, height, width, size);\n  }\n\n  private _titles: HTMLElement[] = [];\n}\n\nexport namespace AccordionLayout {\n  /**\n   * A type alias for a accordion layout orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a accordion layout alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * An options object for initializing a accordion layout.\n   */\n  export interface IOptions extends SplitLayout.IOptions {\n    /**\n     * The renderer to use for the accordion layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The section title height or width depending on the orientation.\n     *\n     * The default is `22`.\n     */\n    titleSpace?: number;\n  }\n\n  /**\n   * A renderer for use with an accordion layout.\n   */\n  export interface IRenderer extends SplitLayout.IRenderer {\n    /**\n     * Common class name for all accordion titles.\n     */\n    readonly titleClassName: string;\n\n    /**\n     * Render the element for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the section title.\n     */\n    createSectionTitle(title: Title<Widget>): HTMLElement;\n  }\n}\n\nnamespace Private {\n  /**\n   * Create the title HTML element.\n   *\n   * @param renderer Accordion renderer\n   * @param data Widget title\n   * @returns Title HTML element\n   */\n  export function createTitle(\n    renderer: AccordionLayout.IRenderer,\n    data: Title<Widget>\n  ): HTMLElement {\n    return renderer.createSectionTitle(data);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  PanelLayout\n} from './panellayout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A simple and convenient panel widget class.\n *\n * #### Notes\n * This class is suitable as a base class for implementing a variety of\n * convenience panel widgets, but can also be used directly with CSS to\n * arrange a collection of widgets.\n *\n * This class provides a convenience wrapper around a [[PanelLayout]].\n */\nexport\nclass Panel extends Widget {\n  /**\n   * Construct a new panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: Panel.IOptions = {}) {\n    super();\n    this.addClass('lm-Panel');\n    /* <DEPRECATED> */\n    this.addClass('p-Panel');\n    /* </DEPRECATED> */\n    this.layout = Private.createLayout(options);\n  }\n\n  /**\n   * A read-only array of the widgets in the panel.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return (this.layout as PanelLayout).widgets;\n  }\n\n  /**\n   * Add a widget to the end of the panel.\n   *\n   * @param widget - The widget to add to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  addWidget(widget: Widget): void {\n    (this.layout as PanelLayout).addWidget(widget);\n  }\n\n  /**\n   * Insert a widget at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    (this.layout as PanelLayout).insertWidget(index, widget);\n  }\n}\n\n\n/**\n * The namespace for the `Panel` class statics.\n */\nexport\nnamespace Panel {\n  /**\n   * An options object for creating a panel.\n   */\n  export\n  interface IOptions {\n    /**\n     * The panel layout to use for the panel.\n     *\n     * The default is a new `PanelLayout`.\n     */\n    layout?: PanelLayout;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a panel layout for the given panel options.\n   */\n  export\n  function createLayout(options: Panel.IOptions): PanelLayout {\n    return options.layout || new PanelLayout();\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { Drag } from '@lumino/dragdrop';\n\nimport { Message } from '@lumino/messaging';\n\nimport { Panel } from './panel';\n\nimport { SplitLayout } from './splitlayout';\n\nimport { Widget } from './widget';\n\n/**\n * A panel which arranges its widgets into resizable sections.\n *\n * #### Notes\n * This class provides a convenience wrapper around a [[SplitLayout]].\n */\nexport class SplitPanel extends Panel {\n  /**\n   * Construct a new split panel.\n   *\n   * @param options - The options for initializing the split panel.\n   */\n  constructor(options: SplitPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-SplitPanel');\n    /* <DEPRECATED> */\n    this.addClass('p-SplitPanel');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Dispose of the resources held by the panel.\n   */\n  dispose(): void {\n    this._releaseMouse();\n    super.dispose();\n  }\n\n  /**\n   * Get the layout orientation for the split panel.\n   */\n  get orientation(): SplitPanel.Orientation {\n    return (this.layout as SplitLayout).orientation;\n  }\n\n  /**\n   * Set the layout orientation for the split panel.\n   */\n  set orientation(value: SplitPanel.Orientation) {\n    (this.layout as SplitLayout).orientation = value;\n  }\n\n  /**\n   * Get the content alignment for the split panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire split panel.\n   */\n  get alignment(): SplitPanel.Alignment {\n    return (this.layout as SplitLayout).alignment;\n  }\n\n  /**\n   * Set the content alignment for the split panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire split panel.\n   */\n  set alignment(value: SplitPanel.Alignment) {\n    (this.layout as SplitLayout).alignment = value;\n  }\n\n  /**\n   * Get the inter-element spacing for the split panel.\n   */\n  get spacing(): number {\n    return (this.layout as SplitLayout).spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the split panel.\n   */\n  set spacing(value: number) {\n    (this.layout as SplitLayout).spacing = value;\n  }\n\n  /**\n   * The renderer used by the split panel.\n   */\n  get renderer(): SplitPanel.IRenderer {\n    return (this.layout as SplitLayout).renderer;\n  }\n\n  /**\n   * A read-only array of the split handles in the panel.\n   */\n  get handles(): ReadonlyArray<HTMLDivElement> {\n    return (this.layout as SplitLayout).handles;\n  }\n\n  /**\n   * Get the relative sizes of the widgets in the panel.\n   *\n   * @returns A new array of the relative sizes of the widgets.\n   *\n   * #### Notes\n   * The returned sizes reflect the sizes of the widgets normalized\n   * relative to their siblings.\n   *\n   * This method **does not** measure the DOM nodes.\n   */\n  relativeSizes(): number[] {\n    return (this.layout as SplitLayout).relativeSizes();\n  }\n\n  /**\n   * Set the relative sizes for the widgets in the panel.\n   *\n   * @param sizes - The relative sizes for the widgets in the panel.\n   *\n   * #### Notes\n   * Extra values are ignored, too few will yield an undefined layout.\n   *\n   * The actual geometry of the DOM nodes is updated asynchronously.\n   */\n  setRelativeSizes(sizes: number[]): void {\n    (this.layout as SplitLayout).setRelativeSizes(sizes);\n  }\n\n  /**\n   * Handle the DOM events for the split panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'mousedown':\n        this._evtMouseDown(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtMouseMove(event as MouseEvent);\n        break;\n      case 'mouseup':\n        this._evtMouseUp(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('mousedown', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('mousedown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-SplitPanel-child');\n    /* <DEPRECATED> */\n    msg.child.addClass('p-SplitPanel-child');\n    /* </DEPRECATED> */\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-SplitPanel-child');\n    /* <DEPRECATED> */\n    msg.child.removeClass('p-SplitPanel-child');\n    /* </DEPRECATED> */\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the `'keydown'` event for the split panel.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop input events during drag.\n    if (this._pressData) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      this._releaseMouse();\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the split panel.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if the left mouse button is not pressed.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Find the handle which contains the mouse target, if any.\n    let layout = this.layout as SplitLayout;\n    let index = ArrayExt.findFirstIndex(layout.handles, (handle) => {\n      return handle.contains(event.target as HTMLElement);\n    });\n\n    // Bail early if the mouse press was not on a handle.\n    if (index === -1) {\n      return;\n    }\n\n    // Stop the event when a split handle is pressed.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Add the extra document listeners.\n    document.addEventListener('mouseup', this, true);\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Compute the offset delta for the handle press.\n    let delta: number;\n    let handle = layout.handles[index];\n    let rect = handle.getBoundingClientRect();\n    if (layout.orientation === 'horizontal') {\n      delta = event.clientX - rect.left;\n    } else {\n      delta = event.clientY - rect.top;\n    }\n\n    // Override the cursor and store the press data.\n    let style = window.getComputedStyle(handle);\n    let override = Drag.overrideCursor(style.cursor!);\n    this._pressData = { index, delta, override };\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the split panel.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Stop the event when dragging a split handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Compute the desired offset position for the handle.\n    let pos: number;\n    let layout = this.layout as SplitLayout;\n    let rect = this.node.getBoundingClientRect();\n    if (layout.orientation === 'horizontal') {\n      pos = event.clientX - rect.left - this._pressData!.delta;\n    } else {\n      pos = event.clientY - rect.top - this._pressData!.delta;\n    }\n\n    // Move the handle as close to the desired position as possible.\n    layout.moveHandle(this._pressData!.index, pos);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the split panel.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Do nothing if the left mouse button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event when releasing a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Finalize the mouse release.\n    this._releaseMouse();\n  }\n\n  /**\n   * Release the mouse grab for the split panel.\n   */\n  private _releaseMouse(): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the override cursor.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Remove the extra document listeners.\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('contextmenu', this, true);\n  }\n\n  private _pressData: Private.IPressData | null = null;\n}\n\n/**\n * The namespace for the `SplitPanel` class statics.\n */\nexport namespace SplitPanel {\n  /**\n   * A type alias for a split panel orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a split panel alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * A type alias for a split panel renderer.\n   */\n  export type IRenderer = SplitLayout.IRenderer;\n\n  /**\n   * An options object for initializing a split panel.\n   */\n  export interface IOptions {\n    /**\n     * The renderer to use for the split panel.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n\n    /**\n     * The layout orientation of the panel.\n     *\n     * The default is `'horizontal'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The content alignment of the panel.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The split layout to use for the split panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `SplitLayout`.\n     */\n    layout?: SplitLayout;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Create a new handle for use with a split panel.\n     *\n     * @returns A new handle element for a split panel.\n     */\n    createHandle(): HTMLDivElement {\n      let handle = document.createElement('div');\n      handle.className = 'lm-SplitPanel-handle';\n      /* <DEPRECATED> */\n      handle.classList.add('p-SplitPanel-handle');\n      /* </DEPRECATED> */\n      return handle;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n\n  /**\n   * Get the split panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The split panel stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return SplitLayout.getStretch(widget);\n  }\n\n  /**\n   * Set the split panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    SplitLayout.setStretch(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An object which holds mouse press data.\n   */\n  export interface IPressData {\n    /**\n     * The index of the pressed handle.\n     */\n    index: number;\n\n    /**\n     * The offset of the press in handle coordinates.\n     */\n    delta: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n  }\n\n  /**\n   * Create a split layout for the given panel options.\n   */\n  export function createLayout(options: SplitPanel.IOptions): SplitLayout {\n    return (\n      options.layout ||\n      new SplitLayout({\n        renderer: options.renderer || SplitPanel.defaultRenderer,\n        orientation: options.orientation,\n        alignment: options.alignment,\n        spacing: options.spacing,\n      })\n    );\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport { Message } from '@lumino/messaging';\nimport { AccordionLayout } from './accordionlayout';\nimport { SplitLayout } from './splitlayout';\nimport { SplitPanel } from './splitpanel';\nimport { Title } from './title';\nimport { Widget } from './widget';\n\n/**\n * A panel which arranges its widgets into resizable sections separated by a title widget.\n *\n * #### Notes\n * This class provides a convenience wrapper around [[AccordionLayout]].\n */\nexport class AccordionPanel extends SplitPanel {\n  /**\n   * Construct a new accordion panel.\n   *\n   * @param options - The options for initializing the accordion panel.\n   */\n  constructor(options: AccordionPanel.IOptions = {}) {\n    super({ ...options, layout: Private.createLayout(options) });\n    this.addClass('lm-AccordionPanel');\n  }\n\n  /**\n   * The renderer used by the accordion panel.\n   */\n  get renderer(): AccordionPanel.IRenderer {\n    return (this.layout as AccordionLayout).renderer;\n  }\n\n  /**\n   * The section title space.\n   * \n   * This is the height if the panel is vertical and the width if it is\n   * horizontal.\n   */\n  get titleSpace(): number {\n    return (this.layout as AccordionLayout).titleSpace;\n  }\n  set titleSpace(value: number) {\n    (this.layout as AccordionLayout).titleSpace = value;\n  }\n\n  /**\n   * A read-only array of the section titles in the panel.\n   */\n  get titles(): ReadonlyArray<HTMLElement> {\n    return (this.layout as AccordionLayout).titles;\n  }\n\n  /**\n   * Handle the DOM events for the accordion panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    super.handleEvent(event);\n    switch (event.type) {\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._eventKeyDown(event as KeyboardEvent);\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('click', this);\n    this.node.addEventListener('keydown', this);\n    super.onBeforeAttach(msg);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    super.onAfterDetach(msg);\n    this.node.removeEventListener('click', this);\n    this.node.removeEventListener('keydown', this);\n  }\n\n  /**\n   * Handle the `'click'` event for the accordion panel\n   */\n  private _evtClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement | null;\n\n    if (target) {\n      const index = ArrayExt.findFirstIndex(this.titles, (title) => {\n        return title.contains(target);\n      });\n\n      if (index >= 0) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const widget = (this.layout as AccordionLayout).widgets[index];\n        if (widget.isHidden) {\n          target.classList.add('lm-mod-expanded');\n          target.setAttribute('aria-expanded', 'true');\n          widget.show();\n        } else {\n          target.classList.remove('lm-mod-expanded');\n          target.setAttribute('aria-expanded', 'false');\n          widget.hide();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the accordion panel.\n   */\n  private _eventKeyDown(event: KeyboardEvent): void {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const target = event.target as HTMLElement | null;\n    let handled = false;\n    if (target) {\n      const index = ArrayExt.findFirstIndex(this.titles, (title) => {\n        return title.contains(target);\n      });\n\n      if (index >= 0) {\n        const keyCode = event.keyCode.toString();\n\n        // If Space or Enter is pressed on title, emulate click event\n        if (event.key.match(/Space|Enter/) || keyCode.match(/13|32/)) {\n          target.click();\n          handled = true;\n        } else if (\n          this.orientation === 'horizontal'\n            ? event.key.match(/ArrowLeft|ArrowRight/) || keyCode.match(/37|39/)\n            : event.key.match(/ArrowUp|ArrowDown/) || keyCode.match(/38|40/)\n        ) {\n          // If Up or Down (for vertical) / Left or Right (for horizontal) is pressed on title, loop on titles\n          const direction =\n            event.key.match(/ArrowLeft|ArrowUp/) || keyCode.match(/37|38/)\n              ? -1\n              : 1;\n          const length = this.titles.length;\n          const newIndex = (index + length + direction) % length;\n\n          this.titles[newIndex].focus();\n          handled = true;\n        } else if (event.key === 'End' || keyCode === '35') {\n          // If End is pressed on title, focus on the last title\n          this.titles[this.titles.length - 1].focus();\n          handled = true;\n        } else if (event.key === 'Home' || keyCode === '36') {\n          // If Home is pressed on title, focus on the first title\n          this.titles[0].focus();\n          handled = true;\n        }\n      }\n\n      if (handled) {\n        event.preventDefault();\n      }\n    }\n  }\n}\n\n/**\n * The namespace for the `AccordionPanel` class statics.\n */\nexport namespace AccordionPanel {\n  /**\n   * A type alias for a accordion panel orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a accordion panel alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * A type alias for a accordion panel renderer.\n   */\n  export type IRenderer = AccordionLayout.IRenderer;\n\n  /**\n   * An options object for initializing a accordion panel.\n   */\n  export interface IOptions extends Partial<AccordionLayout.IOptions> {\n    /**\n     * The accordion layout to use for the accordion panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `AccordionLayout`.\n     */\n    layout?: AccordionLayout;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer extends SplitPanel.Renderer implements IRenderer {\n    /**\n     * A selector which matches any title node in the accordion.\n     */\n    readonly titleClassName = 'lm-AccordionPanel-title';\n\n    /**\n     * Render the collapse indicator for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the collapse indicator.\n     */\n    createCollapseIcon(data: Title<Widget>): HTMLElement {\n      return document.createElement('span');\n    }\n\n    /**\n     * Render the element for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the section title.\n     */\n    createSectionTitle(data: Title<Widget>): HTMLElement {\n      const handle = document.createElement('h3');\n      handle.setAttribute('role', 'button');\n      handle.setAttribute('tabindex', '0');\n      handle.id = this.createTitleKey(data);\n      handle.className = this.titleClassName;\n      handle.title = data.caption;\n      for (const aData in data.dataset) {\n        handle.dataset[aData] = data.dataset[aData];\n      }\n\n      const collapser = handle.appendChild(this.createCollapseIcon(data));\n      collapser.className = 'lm-AccordionPanel-titleCollapser';\n\n      const label = handle.appendChild(document.createElement('span'));\n      label.className = 'lm-AccordionPanel-titleLabel';\n      label.textContent = data.label;\n\n      return handle;\n    }\n\n    /**\n     * Create a unique render key for the title.\n     *\n     * @param data - The data to use for the title.\n     *\n     * @returns The unique render key for the title.\n     *\n     * #### Notes\n     * This method caches the key against the section title the first time\n     * the key is generated.\n     */\n    createTitleKey(data: Title<Widget>): string {\n      let key = this._titleKeys.get(data);\n      if (key === undefined) {\n        key = `title-key-${this._titleID++}`;\n        this._titleKeys.set(data, key);\n      }\n      return key;\n    }\n\n    private _titleID = 0;\n    private _titleKeys = new WeakMap<Title<Widget>, string>();\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\nnamespace Private {\n  /**\n   * Create an accordion layout for the given panel options.\n   *\n   * @param options Panel options\n   * @returns Panel layout\n   */\n  export function createLayout(\n    options: AccordionPanel.IOptions\n  ): AccordionLayout {\n    return (\n      options.layout ||\n      new AccordionLayout({\n        renderer: options.renderer || AccordionPanel.defaultRenderer,\n        orientation: options.orientation,\n        alignment: options.alignment,\n        spacing: options.spacing,\n        titleSpace: options.titleSpace,\n      })\n    );\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, each\n} from '@lumino/algorithm';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  AttachedProperty\n} from '@lumino/properties';\n\nimport {\n  BoxEngine, BoxSizer\n} from './boxengine';\n\nimport {\n  LayoutItem\n} from './layout';\n\nimport {\n  PanelLayout\n} from './panellayout';\n\nimport Utils from './utils';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A layout which arranges its widgets in a single row or column.\n */\nexport\nclass BoxLayout extends PanelLayout {\n  /**\n   * Construct a new box layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: BoxLayout.IOptions = {}) {\n    super();\n    if (options.direction !== undefined) {\n      this._direction = options.direction;\n    }\n    if (options.alignment !== undefined) {\n      this._alignment = options.alignment;\n    }\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    each(this._items, item => { item.dispose(); });\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._sizers.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Get the layout direction for the box layout.\n   */\n  get direction(): BoxLayout.Direction {\n    return this._direction;\n  }\n\n  /**\n   * Set the layout direction for the box layout.\n   */\n  set direction(value: BoxLayout.Direction) {\n    if (this._direction === value) {\n      return;\n    }\n    this._direction = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['direction'] = value;\n    this.parent.fit();\n  }\n\n  /**\n   * Get the content alignment for the box layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  get alignment(): BoxLayout.Alignment {\n    return this._alignment;\n  }\n\n  /**\n   * Set the content alignment for the box layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  set alignment(value: BoxLayout.Alignment) {\n    if (this._alignment === value) {\n      return;\n    }\n    this._alignment = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['alignment'] = value;\n    this.parent.update();\n  }\n\n  /**\n   * Get the inter-element spacing for the box layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the box layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    this.parent!.dataset['direction'] = this.direction;\n    this.parent!.dataset['alignment'] = this.alignment;\n    super.init();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Create and add a new layout item for the widget.\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\n\n    // Create and add a new sizer for the widget.\n    ArrayExt.insert(this._sizers, index, new BoxSizer());\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(fromIndex: number, toIndex: number, widget: Widget): void {\n    // Move the layout item for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n\n    // Move the sizer for the widget.\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\n\n    // Post an update request for the parent widget.\n    this.parent!.update();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the layout item for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Remove the sizer for the widget.\n    ArrayExt.removeAt(this._sizers, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Update the fixed space for the visible items.\n    this._fixed = this._spacing * Math.max(0, nVisible - 1);\n\n    // Setup the computed minimum size.\n    let horz = Private.isHorizontal(this._direction);\n    let minW = horz ? this._fixed : 0;\n    let minH = horz ? 0 : this._fixed;\n\n    // Update the sizers and computed minimum size.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item and corresponding box sizer.\n      let item = this._items[i];\n      let sizer = this._sizers[i];\n\n      // If the item is hidden, it should consume zero size.\n      if (item.isHidden) {\n        sizer.minSize = 0;\n        sizer.maxSize = 0;\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the size basis and stretch factor.\n      sizer.sizeHint = BoxLayout.getSizeBasis(item.widget);\n      sizer.stretch = BoxLayout.getStretch(item.widget);\n\n      // Update the sizer limits and computed min size.\n      if (horz) {\n        sizer.minSize = item.minWidth;\n        sizer.maxSize = item.maxWidth;\n        minW += item.minWidth;\n        minH = Math.max(minH, item.minHeight);\n      } else {\n        sizer.minSize = item.minHeight;\n        sizer.maxSize = item.maxHeight;\n        minH += item.minHeight;\n        minW = Math.max(minW, item.minWidth);\n      }\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = this._box = ElementExt.boxSizing(this.parent!.node);\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the layout area adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Distribute the layout space and adjust the start position.\n    let delta: number;\n    switch (this._direction) {\n    case 'left-to-right':\n      delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\n      break;\n    case 'top-to-bottom':\n      delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\n      break;\n    case 'right-to-left':\n      delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\n      left += width;\n      break;\n    case 'bottom-to-top':\n      delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\n      top += height;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Setup the variables for justification and alignment offset.\n    let extra = 0;\n    let offset = 0;\n\n    // Account for alignment if there is extra layout space.\n    if (delta > 0) {\n      switch (this._alignment) {\n      case 'start':\n        break;\n      case 'center':\n        extra = 0;\n        offset = delta / 2;\n        break;\n      case 'end':\n        extra = 0;\n        offset = delta;\n        break;\n      case 'justify':\n        extra = delta / nVisible;\n        offset = 0;\n        break;\n      default:\n        throw 'unreachable';\n      }\n    }\n\n    // Layout the items using the computed box sizes.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Fetch the computed size for the widget.\n      let size = this._sizers[i].size;\n\n      // Update the widget geometry and advance the relevant edge.\n      switch (this._direction) {\n      case 'left-to-right':\n        item.update(left + offset, top, size + extra, height);\n        left += size + extra + this._spacing;\n        break;\n      case 'top-to-bottom':\n        item.update(left, top + offset, width, size + extra);\n        top += size + extra + this._spacing;\n        break;\n      case 'right-to-left':\n        item.update(left - offset - size - extra, top, size + extra, height);\n        left -= size + extra + this._spacing;\n        break;\n      case 'bottom-to-top':\n        item.update(left, top - offset - size - extra, width, size + extra);\n        top -= size + extra + this._spacing;\n        break;\n      default:\n        throw 'unreachable';\n      }\n    }\n  }\n\n  private _fixed = 0;\n  private _spacing = 4;\n  private _dirty = false;\n  private _sizers: BoxSizer[] = [];\n  private _items: LayoutItem[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _alignment: BoxLayout.Alignment = 'start';\n  private _direction: BoxLayout.Direction = 'top-to-bottom';\n}\n\n\n/**\n * The namespace for the `BoxLayout` class statics.\n */\nexport\nnamespace BoxLayout {\n  /**\n   * A type alias for a box layout direction.\n   */\n  export\n  type Direction = (\n    'left-to-right' | 'right-to-left' | 'top-to-bottom' | 'bottom-to-top'\n  );\n\n  /**\n   * A type alias for a box layout alignment.\n   */\n  export\n  type Alignment = 'start' | 'center' | 'end' | 'justify';\n\n  /**\n   * An options object for initializing a box layout.\n   */\n  export\n  interface IOptions {\n    /**\n     * The direction of the layout.\n     *\n     * The default is `'top-to-bottom'`.\n     */\n    direction?: Direction;\n\n    /**\n     * The content alignment of the layout.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * Get the box layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box layout stretch factor for the widget.\n   */\n  export\n  function getStretch(widget: Widget): number {\n    return Private.stretchProperty.get(widget);\n  }\n\n  /**\n   * Set the box layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export\n  function setStretch(widget: Widget, value: number): void {\n    Private.stretchProperty.set(widget, value);\n  }\n\n  /**\n   * Get the box layout size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box layout size basis for the widget.\n   */\n  export\n  function getSizeBasis(widget: Widget): number {\n    return Private.sizeBasisProperty.get(widget);\n  }\n\n  /**\n   * Set the box layout size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the size basis.\n   */\n  export\n  function setSizeBasis(widget: Widget, value: number): void {\n    Private.sizeBasisProperty.set(widget, value);\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for a widget stretch factor.\n   */\n  export\n  const stretchProperty = new AttachedProperty<Widget, number>({\n    name: 'stretch',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged\n  });\n\n  /**\n   * The property descriptor for a widget size basis.\n   */\n  export\n  const sizeBasisProperty = new AttachedProperty<Widget, number>({\n    name: 'sizeBasis',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged\n  });\n\n  /**\n   * Test whether a direction has horizontal orientation.\n   */\n  export\n  function isHorizontal(dir: BoxLayout.Direction): boolean {\n    return dir === 'left-to-right' || dir === 'right-to-left';\n  }\n\n  /**\n   * Clamp a spacing value to an integer >= 0.\n   */\n  export\n  function clampSpacing(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n\n  /**\n   * The change handler for the attached sizing properties.\n   */\n  function onChildSizingChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof BoxLayout) {\n      child.parent.fit();\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  BoxLayout\n} from './boxlayout';\n\nimport {\n  Panel\n} from './panel';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A panel which arranges its widgets in a single row or column.\n *\n * #### Notes\n * This class provides a convenience wrapper around a [[BoxLayout]].\n */\nexport\nclass BoxPanel extends Panel {\n  /**\n   * Construct a new box panel.\n   *\n   * @param options - The options for initializing the box panel.\n   */\n  constructor(options: BoxPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-BoxPanel');\n    /* <DEPRECATED> */\n    this.addClass('p-BoxPanel');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Get the layout direction for the box panel.\n   */\n  get direction(): BoxPanel.Direction {\n    return (this.layout as BoxLayout).direction;\n  }\n\n  /**\n   * Set the layout direction for the box panel.\n   */\n  set direction(value: BoxPanel.Direction) {\n    (this.layout as BoxLayout).direction = value;\n  }\n\n  /**\n   * Get the content alignment for the box panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  get alignment(): BoxPanel.Alignment {\n    return (this.layout as BoxLayout).alignment;\n  }\n\n  /**\n   * Set the content alignment for the box panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  set alignment(value: BoxPanel.Alignment) {\n    (this.layout as BoxLayout).alignment = value;\n  }\n\n  /**\n   * Get the inter-element spacing for the box panel.\n   */\n  get spacing(): number {\n    return (this.layout as BoxLayout).spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the box panel.\n   */\n  set spacing(value: number) {\n    (this.layout as BoxLayout).spacing = value;\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-BoxPanel-child');\n    /* <DEPRECATED> */\n    msg.child.addClass('p-BoxPanel-child');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-BoxPanel-child');\n    /* <DEPRECATED> */\n    msg.child.removeClass('p-BoxPanel-child');\n    /* </DEPRECATED> */\n  }\n}\n\n\n/**\n * The namespace for the `BoxPanel` class statics.\n */\nexport\nnamespace BoxPanel {\n  /**\n   * A type alias for a box panel direction.\n   */\n  export\n  type Direction = BoxLayout.Direction;\n\n  /**\n   * A type alias for a box panel alignment.\n   */\n  export\n  type Alignment = BoxLayout.Alignment;\n\n  /**\n   * An options object for initializing a box panel.\n   */\n  export\n  interface IOptions {\n    /**\n     * The layout direction of the panel.\n     *\n     * The default is `'top-to-bottom'`.\n     */\n    direction?: Direction;\n\n    /**\n     * The content alignment of the panel.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The box layout to use for the box panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `BoxLayout`.\n     */\n    layout?: BoxLayout;\n  }\n\n  /**\n   * Get the box panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box panel stretch factor for the widget.\n   */\n  export\n  function getStretch(widget: Widget): number {\n    return BoxLayout.getStretch(widget);\n  }\n\n  /**\n   * Set the box panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export\n  function setStretch(widget: Widget, value: number): void {\n    BoxLayout.setStretch(widget, value);\n  }\n\n  /**\n   * Get the box panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box panel size basis for the widget.\n   */\n  export\n  function getSizeBasis(widget: Widget): number {\n    return BoxLayout.getSizeBasis(widget);\n  }\n\n  /**\n   * Set the box panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the size basis.\n   */\n  export\n  function setSizeBasis(widget: Widget, value: number): void {\n    BoxLayout.setSizeBasis(widget, value);\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a box layout for the given panel options.\n   */\n  export\n  function createLayout(options: BoxPanel.IOptions): BoxLayout {\n    return options.layout || new BoxLayout(options);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, StringExt\n} from '@lumino/algorithm';\n\nimport {\n  JSONExt, ReadonlyJSONObject\n} from '@lumino/coreutils';\n\nimport {\n  CommandRegistry\n} from '@lumino/commands';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message\n} from '@lumino/messaging';\n\nimport {\n  ElementDataset, VirtualDOM, VirtualElement, h\n} from '@lumino/virtualdom';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which displays command items as a searchable palette.\n */\nexport\nclass CommandPalette extends Widget {\n  /**\n   * Construct a new command palette.\n   *\n   * @param options - The options for initializing the palette.\n   */\n  constructor(options: CommandPalette.IOptions) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-CommandPalette');\n    /* <DEPRECATED> */\n    this.addClass('p-CommandPalette');\n    /* </DEPRECATED> */\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.commands = options.commands;\n    this.renderer = options.renderer || CommandPalette.defaultRenderer;\n    this.commands.commandChanged.connect(this._onGenericChange, this);\n    this.commands.keyBindingChanged.connect(this._onGenericChange, this);\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._items.length = 0;\n    this._results = null;\n    super.dispose();\n  }\n\n  /**\n   * The command registry used by the command palette.\n   */\n  readonly commands: CommandRegistry;\n\n  /**\n   * The renderer used by the command palette.\n   */\n  readonly renderer: CommandPalette.IRenderer;\n\n  /**\n   * The command palette search node.\n   *\n   * #### Notes\n   * This is the node which contains the search-related elements.\n   */\n  get searchNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-CommandPalette-search')[0] as HTMLDivElement;\n  }\n\n  /**\n   * The command palette input node.\n   *\n   * #### Notes\n   * This is the actual input node for the search area.\n   */\n  get inputNode(): HTMLInputElement {\n    return this.node.getElementsByClassName('lm-CommandPalette-input')[0] as HTMLInputElement;\n  }\n\n  /**\n   * The command palette content node.\n   *\n   * #### Notes\n   * This is the node which holds the command item nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName('lm-CommandPalette-content')[0] as HTMLUListElement;\n  }\n\n  /**\n   * A read-only array of the command items in the palette.\n   */\n  get items(): ReadonlyArray<CommandPalette.IItem> {\n    return this._items;\n  }\n\n  /**\n   * Add a command item to the command palette.\n   *\n   * @param options - The options for creating the command item.\n   *\n   * @returns The command item added to the palette.\n   */\n  addItem(options: CommandPalette.IItemOptions): CommandPalette.IItem {\n    // Create a new command item for the options.\n    let item = Private.createItem(this.commands, options);\n\n    // Add the item to the array.\n    this._items.push(item);\n\n    // Refresh the search results.\n    this.refresh();\n\n    // Return the item added to the palette.\n    return item;\n  }\n\n  /**\n   * Adds command items to the command palette.\n   *\n   * @param items - An array of options for creating each command item.\n   *\n   * @returns The command items added to the palette.\n   */\n  addItems(items: CommandPalette.IItemOptions[]): CommandPalette.IItem[] {\n    const newItems = items.map(item => Private.createItem(this.commands, item));\n    newItems.forEach(item => this._items.push(item));\n    this.refresh();\n    return newItems;\n  }\n\n  /**\n   * Remove an item from the command palette.\n   *\n   * @param item - The item to remove from the palette.\n   *\n   * #### Notes\n   * This is a no-op if the item is not in the palette.\n   */\n  removeItem(item: CommandPalette.IItem): void {\n    this.removeItemAt(this._items.indexOf(item));\n  }\n\n  /**\n   * Remove the item at a given index from the command palette.\n   *\n   * @param index - The index of the item to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeItemAt(index: number): void {\n    // Remove the item from the array.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Bail if the index is out of range.\n    if (!item) {\n      return;\n    }\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Remove all items from the command palette.\n   */\n  clearItems(): void {\n    // Bail if there is nothing to remove.\n    if (this._items.length === 0) {\n      return;\n    }\n\n    // Clear the array of items.\n    this._items.length = 0;\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Clear the search results and schedule an update.\n   *\n   * #### Notes\n   * This should be called whenever the search results of the palette\n   * should be updated.\n   *\n   * This is typically called automatically by the palette as needed,\n   * but can be called manually if the input text is programatically\n   * changed.\n   *\n   * The rendered results are updated asynchronously.\n   */\n  refresh(): void {\n    this._results = null;\n    if(this.inputNode.value !== '') {\n      let clear = this.node.getElementsByClassName('lm-close-icon')[0] as HTMLInputElement;\n      clear.style.display = 'inherit'\n    }\n    else {\n      let clear = this.node.getElementsByClassName('lm-close-icon')[0] as HTMLInputElement;\n      clear.style.display = 'none'\n    }\n    this.update();\n  }\n\n  /**\n   * Handle the DOM events for the command palette.\n   *\n   * @param event - The DOM event sent to the command palette.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the command palette's DOM node.\n   * It should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'click':\n      this._evtClick(event as MouseEvent);\n      break;\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'input':\n      this.refresh();\n      break;\n    case 'focus':\n    case 'blur':\n      this._toggleFocused();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('click', this);\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('input', this);\n    this.node.addEventListener('focus', this, true);\n    this.node.addEventListener('blur', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('click', this);\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('input', this);\n    this.node.removeEventListener('focus', this, true);\n    this.node.removeEventListener('blur', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      let input = this.inputNode;\n      input.focus();\n      input.select();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    // Fetch the current query text and content node.\n    let query = this.inputNode.value;\n    let contentNode = this.contentNode;\n\n    // Ensure the search results are generated.\n    let results = this._results;\n    if (!results) {\n      // Generate and store the new search results.\n      results = this._results = Private.search(this._items, query);\n\n      // Reset the active index.\n      this._activeIndex = (\n        query ? ArrayExt.findFirstIndex(results, Private.canActivate) : -1\n      );\n    }\n\n    // If there is no query and no results, clear the content.\n    if (!query && results.length === 0) {\n      VirtualDOM.render(null, contentNode);\n      return;\n    }\n\n    // If the is a query but no results, render the empty message.\n    if (query && results.length === 0) {\n      let content = this.renderer.renderEmptyMessage({ query });\n      VirtualDOM.render(content, contentNode);\n      return;\n    }\n\n    // Create the render content for the search results.\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let content = new Array<VirtualElement>(results.length);\n    for (let i = 0, n = results.length; i < n; ++i) {\n      let result = results[i];\n      if (result.type === 'header') {\n        let indices = result.indices;\n        let category = result.category;\n        content[i] = renderer.renderHeader({ category, indices });\n      } else {\n        let item = result.item;\n        let indices = result.indices;\n        let active = i === activeIndex;\n        content[i] = renderer.renderItem({ item, indices, active });\n      }\n    }\n\n    // Render the search result content.\n    VirtualDOM.render(content, contentNode);\n\n    // Adjust the scroll position as needed.\n    if (activeIndex < 0 || activeIndex >= results.length) {\n      contentNode.scrollTop = 0;\n    } else {\n      let element = contentNode.children[activeIndex];\n      ElementExt.scrollIntoViewIfNeeded(contentNode, element);\n    }\n  }\n\n  /**\n   * Handle the `'click'` event for the command palette.\n   */\n  private _evtClick(event: MouseEvent): void {\n    // Bail if the click is not the left button.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Clear input if the target is clear button\n    if((event.target as HTMLElement).classList.contains(\"lm-close-icon\")) {\n      this.inputNode.value = '';\n      this.refresh();\n      return;\n    }\n\n    // Find the index of the item which was clicked.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return node.contains(event.target as HTMLElement);\n    });\n\n    // Bail if the click was not on an item.\n    if (index === -1) {\n      return;\n    }\n\n    // Kill the event when a content item is clicked.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Execute the item if possible.\n    this._execute(index);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the command palette.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    switch (event.keyCode) {\n    case 13:  // Enter\n      event.preventDefault();\n      event.stopPropagation();\n      this._execute(this._activeIndex);\n      break;\n    case 38:  // Up Arrow\n      event.preventDefault();\n      event.stopPropagation();\n      this._activatePreviousItem();\n      break;\n    case 40:  // Down Arrow\n      event.preventDefault();\n      event.stopPropagation();\n      this._activateNextItem();\n      break;\n    }\n  }\n\n  /**\n   * Activate the next enabled command item.\n   */\n  private _activateNextItem(): void {\n    // Bail if there are no search results.\n    if (!this._results || this._results.length === 0) {\n      return;\n    }\n\n    // Find the next enabled item index.\n    let ai = this._activeIndex;\n    let n = this._results.length;\n    let start = ai < n - 1 ? ai + 1 : 0;\n    let stop = start === 0 ? n - 1 : start - 1;\n    this._activeIndex = ArrayExt.findFirstIndex(\n      this._results, Private.canActivate, start, stop\n    );\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Activate the previous enabled command item.\n   */\n  private _activatePreviousItem(): void {\n    // Bail if there are no search results.\n    if (!this._results || this._results.length === 0) {\n      return;\n    }\n\n    // Find the previous enabled item index.\n    let ai = this._activeIndex;\n    let n = this._results.length;\n    let start = ai <= 0 ? n - 1 : ai - 1;\n    let stop = start === n - 1 ? 0 : start + 1;\n    this._activeIndex = ArrayExt.findLastIndex(\n      this._results, Private.canActivate, start, stop\n    );\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Execute the command item at the given index, if possible.\n   */\n  private _execute(index: number): void {\n    // Bail if there are no search results.\n    if (!this._results) {\n      return;\n    }\n\n    // Bail if the index is out of range.\n    let part = this._results[index];\n    if (!part) {\n      return;\n    }\n\n    // Update the search text if the item is a header.\n    if (part.type === 'header') {\n      let input = this.inputNode;\n      input.value = `${part.category.toLowerCase()} `;\n      input.focus();\n      this.refresh();\n      return;\n    }\n\n    // Bail if item is not enabled.\n    if (!part.item.isEnabled) {\n      return;\n    }\n\n    // Execute the item.\n    this.commands.execute(part.item.command, part.item.args);\n\n    // Clear the query text.\n    this.inputNode.value = '';\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Toggle the focused modifier based on the input node focus state.\n   */\n  private _toggleFocused(): void {\n    let focused = document.activeElement === this.inputNode;\n    this.toggleClass('lm-mod-focused', focused);\n    /* <DEPRECATED> */\n    this.toggleClass('p-mod-focused', focused);\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * A signal handler for generic command changes.\n   */\n  private _onGenericChange(): void {\n    this.refresh();\n  }\n\n  private _activeIndex = -1;\n  private _items: CommandPalette.IItem[] = [];\n  private _results: Private.SearchResult[] | null = null;\n}\n\n\n/**\n * The namespace for the `CommandPalette` class statics.\n */\nexport\nnamespace CommandPalette {\n  /**\n   * An options object for creating a command palette.\n   */\n  export\n  interface IOptions {\n    /**\n     * The command registry for use with the command palette.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the command palette.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * An options object for creating a command item.\n   */\n  export\n  interface IItemOptions {\n    /**\n     * The category for the item.\n     */\n    category: string;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    command: string;\n\n    /**\n     * The arguments for the command.\n     *\n     * The default value is an empty object.\n     */\n    args?: ReadonlyJSONObject;\n\n    /**\n     * The rank for the command item.\n     *\n     * The rank is used as a tie-breaker when ordering command items\n     * for display. Items are sorted in the following order:\n     *   1. Text match (lower is better)\n     *   2. Category (locale order)\n     *   3. Rank (lower is better)\n     *   4. Label (locale order)\n     *\n     * The default rank is `Infinity`.\n     */\n    rank?: number;\n  }\n\n  /**\n   * An object which represents an item in a command palette.\n   *\n   * #### Notes\n   * Item objects are created automatically by a command palette.\n   */\n  export\n  interface IItem {\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The category for the command item.\n     */\n    readonly category: string;\n\n    /**\n     * The rank for the command item.\n     */\n    readonly rank: number;\n\n    /**\n     * The display label for the command item.\n     */\n    readonly label: string;\n\n    /**\n     * The display caption for the command item.\n     */\n    readonly caption: string;\n\n    /**\n     * The icon renderer for the command item.\n     */\n    readonly icon: VirtualElement.IRenderer | undefined\n    /* <DEPRECATED> */ | string /* </DEPRECATED> */;\n\n    /**\n     * The icon class for the command item.\n     */\n    readonly iconClass: string;\n\n    /**\n     * The icon label for the command item.\n     */\n    readonly iconLabel: string;\n\n    /**\n     * The extra class name for the command item.\n     */\n    readonly className: string;\n\n    /**\n     * The dataset for the command item.\n     */\n    readonly dataset: CommandRegistry.Dataset;\n\n    /**\n     * Whether the command item is enabled.\n     */\n    readonly isEnabled: boolean;\n\n    /**\n     * Whether the command item is toggled.\n     */\n    readonly isToggled: boolean;\n\n    /**\n     * Whether the command item is toggleable.\n     */\n    readonly isToggleable: boolean;\n\n    /**\n     * Whether the command item is visible.\n     */\n    readonly isVisible: boolean;\n\n    /**\n     * The key binding for the command item.\n     */\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\n  }\n\n  /**\n   * The render data for a command palette header.\n   */\n  export\n  interface IHeaderRenderData {\n    /**\n     * The category of the header.\n     */\n    readonly category: string;\n\n    /**\n     * The indices of the matched characters in the category.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * The render data for a command palette item.\n   */\n  export\n  interface IItemRenderData {\n    /**\n     * The command palette item to render.\n     */\n    readonly item: IItem;\n\n    /**\n     * The indices of the matched characters in the label.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n  }\n\n  /**\n   * The render data for a command palette empty message.\n   */\n  export\n  interface IEmptyMessageRenderData {\n    /**\n     * The query which failed to match any commands.\n     */\n    query: string;\n  }\n\n  /**\n   * A renderer for use with a command palette.\n   */\n  export\n  interface IRenderer {\n    /**\n     * Render the virtual element for a command palette header.\n     *\n     * @param data - The data to use for rendering the header.\n     *\n     * @returns A virtual element representing the header.\n     */\n    renderHeader(data: IHeaderRenderData): VirtualElement;\n\n    /**\n     * Render the virtual element for a command palette item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     *\n     * #### Notes\n     * The command palette will not render invisible items.\n     */\n    renderItem(data: IItemRenderData): VirtualElement;\n\n    /**\n     * Render the empty results message for a command palette.\n     *\n     * @param data - The data to use for rendering the message.\n     *\n     * @returns A virtual element representing the message.\n     */\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export\n  class Renderer implements IRenderer {\n    /**\n     * Render the virtual element for a command palette header.\n     *\n     * @param data - The data to use for rendering the header.\n     *\n     * @returns A virtual element representing the header.\n     */\n    renderHeader(data: IHeaderRenderData): VirtualElement {\n      let content = this.formatHeader(data);\n      return h.li({ className:\n        'lm-CommandPalette-header'\n          /* <DEPRECATED> */\n          + ' p-CommandPalette-header'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the virtual element for a command palette item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IItemRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      if (data.item.isToggleable) {\n        return (\n          h.li({\n            className,\n            dataset,\n            role: 'checkbox',\n            'aria-checked': `${data.item.isToggled}`\n          },\n          this.renderItemIcon(data),\n          this.renderItemContent(data),\n          this.renderItemShortcut(data))\n        )\n      }\n      return (\n        h.li({\n            className,\n            dataset\n          },\n          this.renderItemIcon(data),\n          this.renderItemContent(data),\n          this.renderItemShortcut(data),\n        )\n      );\n    }\n\n    /**\n     * Render the empty results message for a command palette.\n     *\n     * @param data - The data to use for rendering the message.\n     *\n     * @returns A virtual element representing the message.\n     */\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement {\n      let content = this.formatEmptyMessage(data);\n      return h.li({\n        className: 'lm-CommandPalette-emptyMessage'\n          /* <DEPRECATED> */\n          + ' p-CommandPalette-emptyMessage'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the icon for a command palette item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the icon.\n     */\n    renderItemIcon(data: IItemRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      /* <DEPRECATED> */\n      if (typeof data.item.icon === 'string') {\n        return h.div({className}, data.item.iconLabel);\n      }\n      /* </DEPRECATED> */\n\n      // if data.item.icon is undefined, it will be ignored\n      return h.div({className}, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Render the content for a command palette item.\n     *\n     * @param data - The data to use for rendering the content.\n     *\n     * @returns A virtual element representing the content.\n     */\n    renderItemContent(data: IItemRenderData): VirtualElement {\n      return (\n        h.div({\n          className: 'lm-CommandPalette-itemContent'\n            /* <DEPRECATED> */\n            + ' p-CommandPalette-itemContent'\n            /* </DEPRECATED> */\n        },\n          this.renderItemLabel(data),\n          this.renderItemCaption(data)\n        )\n      );\n    }\n\n    /**\n     * Render the label for a command palette item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the label.\n     */\n    renderItemLabel(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemLabel(data);\n      return h.div({\n        className: 'lm-CommandPalette-itemLabel'\n          /* <DEPRECATED> */\n          + ' p-CommandPalette-itemLabel'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the caption for a command palette item.\n     *\n     * @param data - The data to use for rendering the caption.\n     *\n     * @returns A virtual element representing the caption.\n     */\n    renderItemCaption(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemCaption(data);\n      return h.div({\n        className: 'lm-CommandPalette-itemCaption'\n          /* <DEPRECATED> */\n          + ' p-CommandPalette-itemCaption'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the shortcut for a command palette item.\n     *\n     * @param data - The data to use for rendering the shortcut.\n     *\n     * @returns A virtual element representing the shortcut.\n     */\n    renderItemShortcut(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemShortcut(data);\n      return h.div({\n        className: 'lm-CommandPalette-itemShortcut'\n          /* <DEPRECATED> */\n          + ' p-CommandPalette-itemShortcut'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Create the class name for the command palette item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the command palette item.\n     */\n    createItemClass(data: IItemRenderData): string {\n      // Set up the initial class name.\n      let name = 'lm-CommandPalette-item';\n      /* <DEPRECATED> */\n      name += ' p-CommandPalette-item';\n      /* </DEPRECATED> */\n\n      // Add the boolean state classes.\n      if (!data.item.isEnabled) {\n        name += ' lm-mod-disabled';\n        /* <DEPRECATED> */\n        name += ' p-mod-disabled';\n        /* </DEPRECATED> */\n      }\n      if (data.item.isToggled) {\n        name += ' lm-mod-toggled';\n        /* <DEPRECATED> */\n        name += ' p-mod-toggled';\n        /* </DEPRECATED> */\n      }\n      if (data.active) {\n        name += ' lm-mod-active';\n        /* <DEPRECATED> */\n        name += ' p-mod-active';\n        /* </DEPRECATED> */\n      }\n\n      // Add the extra class.\n      let extra = data.item.className;\n      if (extra) {\n        name += ` ${extra}`;\n      }\n\n      // Return the complete class name.\n      return name;\n    }\n\n    /**\n     * Create the dataset for the command palette item.\n     *\n     * @param data - The data to use for creating the dataset.\n     *\n     * @returns The dataset for the command palette item.\n     */\n    createItemDataset(data: IItemRenderData): ElementDataset {\n      return { ...data.item.dataset, command: data.item.command };\n    }\n\n    /**\n     * Create the class name for the command item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IItemRenderData): string {\n      let name = 'lm-CommandPalette-itemIcon';\n      /* <DEPRECATED> */\n      name += ' p-CommandPalette-itemIcon';\n      /* </DEPRECATED> */\n      let extra = data.item.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    /**\n     * Create the render content for the header node.\n     *\n     * @param data - The data to use for the header content.\n     *\n     * @returns The content to add to the header node.\n     */\n    formatHeader(data: IHeaderRenderData): h.Child {\n      if (!data.indices || data.indices.length === 0) {\n        return data.category;\n      }\n      return StringExt.highlight(data.category, data.indices, h.mark);\n    }\n\n    /**\n     * Create the render content for the empty message node.\n     *\n     * @param data - The data to use for the empty message content.\n     *\n     * @returns The content to add to the empty message node.\n     */\n    formatEmptyMessage(data: IEmptyMessageRenderData): h.Child {\n      return `No commands found that match '${data.query}'`;\n    }\n\n    /**\n     * Create the render content for the item shortcut node.\n     *\n     * @param data - The data to use for the shortcut content.\n     *\n     * @returns The content to add to the shortcut node.\n     */\n    formatItemShortcut(data: IItemRenderData): h.Child {\n      let kb = data.item.keyBinding;\n      return kb ? kb.keys.map(CommandRegistry.formatKeystroke).join(', ') : null;\n    }\n\n    /**\n     * Create the render content for the item label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatItemLabel(data: IItemRenderData): h.Child {\n      if (!data.indices || data.indices.length === 0) {\n        return data.item.label;\n      }\n      return StringExt.highlight(data.item.label, data.indices, h.mark);\n    }\n\n    /**\n     * Create the render content for the item caption node.\n     *\n     * @param data - The data to use for the caption content.\n     *\n     * @returns The content to add to the caption node.\n     */\n    formatItemCaption(data: IItemRenderData): h.Child {\n      return data.item.caption;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export\n  const defaultRenderer = new Renderer();\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create the DOM node for a command palette.\n   */\n  export\n  function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let search = document.createElement('div');\n    let wrapper = document.createElement('div');\n    let input = document.createElement('input');\n    let content = document.createElement('ul');\n    let clear = document.createElement('button');\n    search.className = 'lm-CommandPalette-search';\n    wrapper.className = 'lm-CommandPalette-wrapper';\n    input.className = 'lm-CommandPalette-input';\n    clear.className = 'lm-close-icon';\n\n    content.className = 'lm-CommandPalette-content';\n    /* <DEPRECATED> */\n    search.classList.add('p-CommandPalette-search');\n    wrapper.classList.add('p-CommandPalette-wrapper');\n    input.classList.add('p-CommandPalette-input');\n    content.classList.add('p-CommandPalette-content');\n    /* </DEPRECATED> */\n    input.spellcheck = false;\n    wrapper.appendChild(input);\n    wrapper.appendChild(clear);\n    search.appendChild(wrapper);\n    node.appendChild(search);\n    node.appendChild(content);\n    return node;\n  }\n\n  /**\n   * Create a new command item from a command registry and options.\n   */\n  export\n  function createItem(commands: CommandRegistry, options: CommandPalette.IItemOptions): CommandPalette.IItem {\n    return new CommandItem(commands, options);\n  }\n\n  /**\n   * A search result object for a header label.\n   */\n  export\n  interface IHeaderResult {\n    /**\n     * The discriminated type of the object.\n     */\n    readonly type: 'header';\n\n    /**\n     * The category for the header.\n     */\n    readonly category: string;\n\n    /**\n     * The indices of the matched category characters.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * A search result object for a command item.\n   */\n  export\n  interface IItemResult {\n    /**\n     * The discriminated type of the object.\n     */\n    readonly type: 'item';\n\n    /**\n     * The command item which was matched.\n     */\n    readonly item: CommandPalette.IItem;\n\n    /**\n     * The indices of the matched label characters.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * A type alias for a search result item.\n   */\n  export\n  type SearchResult = IHeaderResult | IItemResult;\n\n  /**\n   * Search an array of command items for fuzzy matches.\n   */\n  export\n  function search(items: CommandPalette.IItem[], query: string): SearchResult[] {\n    // Fuzzy match the items for the query.\n    let scores = matchItems(items, query);\n\n    // Sort the items based on their score.\n    scores.sort(scoreCmp);\n\n    // Create the results for the search.\n    return createResults(scores);\n  }\n\n  /**\n   * Test whether a result item can be activated.\n   */\n  export\n  function canActivate(result: SearchResult): boolean {\n    return result.type === 'item' && result.item.isEnabled;\n  }\n\n  /**\n   * Normalize a category for a command item.\n   */\n  function normalizeCategory(category: string): string {\n    return category.trim().replace(/\\s+/g, ' ');\n  }\n\n  /**\n   * Normalize the query text for a fuzzy search.\n   */\n  function normalizeQuery(text: string): string {\n    return text.replace(/\\s+/g, '').toLowerCase();\n  }\n\n  /**\n   * An enum of the supported match types.\n   */\n  const enum MatchType { Label, Category, Split, Default }\n\n  /**\n   * A text match score with associated command item.\n   */\n  interface IScore {\n    /**\n     * The numerical type for the text match.\n     */\n    matchType: MatchType;\n\n    /**\n     * The numerical score for the text match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched category characters.\n     */\n    categoryIndices: number[] | null;\n\n    /**\n     * The indices of the matched label characters.\n     */\n    labelIndices: number[] | null;\n\n    /**\n     * The command item associated with the match.\n     */\n    item: CommandPalette.IItem;\n  }\n\n  /**\n   * Perform a fuzzy match on an array of command items.\n   */\n  function matchItems(items: CommandPalette.IItem[], query: string): IScore[] {\n    // Normalize the query text to lower case with no whitespace.\n    query = normalizeQuery(query);\n\n    // Create the array to hold the scores.\n    let scores: IScore[] = [];\n\n    // Iterate over the items and match against the query.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Ignore items which are not visible.\n      let item = items[i];\n      if (!item.isVisible) {\n        continue;\n      }\n\n      // If the query is empty, all items are matched by default.\n      if (!query) {\n        scores.push({\n          matchType: MatchType.Default,\n          categoryIndices: null,\n          labelIndices: null,\n          score: 0, item\n        });\n        continue;\n      }\n\n      // Run the fuzzy search for the item and query.\n      let score = fuzzySearch(item, query);\n\n      // Ignore the item if it is not a match.\n      if (!score) {\n        continue;\n      }\n\n      // Penalize disabled items.\n      // TODO - push disabled items all the way down in sort cmp?\n      if (!item.isEnabled) {\n        score.score += 1000;\n      }\n\n      // Add the score to the results.\n      scores.push(score);\n    }\n\n    // Return the final array of scores.\n    return scores;\n  }\n\n  /**\n   * Perform a fuzzy search on a single command item.\n   */\n  function fuzzySearch(item: CommandPalette.IItem, query: string): IScore | null {\n    // Create the source text to be searched.\n    let category = item.category.toLowerCase();\n    let label = item.label.toLowerCase();\n    let source = `${category} ${label}`;\n\n    // Set up the match score and indices array.\n    let score = Infinity;\n    let indices: number[] | null = null;\n\n    // The regex for search word boundaries\n    let rgx = /\\b\\w/g;\n\n    // Search the source by word boundary.\n    while (true) {\n      // Find the next word boundary in the source.\n      let rgxMatch = rgx.exec(source);\n\n      // Break if there is no more source context.\n      if (!rgxMatch) {\n        break;\n      }\n\n      // Run the string match on the relevant substring.\n      let match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\n\n      // Break if there is no match.\n      if (!match) {\n        break;\n      }\n\n      // Update the match if the score is better.\n      if (match && match.score <= score) {\n        score = match.score;\n        indices = match.indices;\n      }\n    }\n\n    // Bail if there was no match.\n    if (!indices || score === Infinity) {\n      return null;\n    }\n\n    // Compute the pivot index between category and label text.\n    let pivot = category.length + 1;\n\n    // Find the slice index to separate matched indices.\n    let j = ArrayExt.lowerBound(indices, pivot, (a, b) => a - b);\n\n    // Extract the matched category and label indices.\n    let categoryIndices = indices.slice(0, j);\n    let labelIndices = indices.slice(j);\n\n    // Adjust the label indices for the pivot offset.\n    for (let i = 0, n = labelIndices.length; i < n; ++i) {\n      labelIndices[i] -= pivot;\n    }\n\n    // Handle a pure label match.\n    if (categoryIndices.length === 0) {\n      return {\n        matchType: MatchType.Label,\n        categoryIndices: null,\n        labelIndices,\n        score, item\n      };\n    }\n\n    // Handle a pure category match.\n    if (labelIndices.length === 0) {\n      return {\n        matchType: MatchType.Category,\n        categoryIndices,\n        labelIndices: null,\n        score, item\n      };\n    }\n\n    // Handle a split match.\n    return {\n      matchType: MatchType.Split,\n      categoryIndices,\n      labelIndices,\n      score, item\n    };\n  }\n\n  /**\n   * A sort comparison function for a match score.\n   */\n  function scoreCmp(a: IScore, b: IScore): number {\n    // First compare based on the match type\n    let m1 = a.matchType - b.matchType;\n    if (m1 !== 0) {\n      return m1;\n    }\n\n    // Otherwise, compare based on the match score.\n    let d1 = a.score - b.score;\n    if (d1 !== 0) {\n      return d1;\n    }\n\n    // Find the match index based on the match type.\n    let i1 = 0;\n    let i2 = 0;\n    switch (a.matchType) {\n    case MatchType.Label:\n      i1 = a.labelIndices![0];\n      i2 = b.labelIndices![0];\n      break;\n    case MatchType.Category:\n    case MatchType.Split:\n      i1 = a.categoryIndices![0];\n      i2 = b.categoryIndices![0];\n      break;\n    }\n\n    // Compare based on the match index.\n    if (i1 !== i2) {\n      return i1 - i2;\n    }\n\n    // Otherwise, compare by category.\n    let d2 = a.item.category.localeCompare(b.item.category);\n    if (d2 !== 0) {\n      return d2;\n    }\n\n    // Otherwise, compare by rank.\n    let r1 = a.item.rank;\n    let r2 = b.item.rank;\n    if (r1 !== r2) {\n      return r1 < r2 ? -1 : 1;  // Infinity safe\n    }\n\n    // Finally, compare by label.\n    return a.item.label.localeCompare(b.item.label);\n  }\n\n  /**\n   * Create the results from an array of sorted scores.\n   */\n  function createResults(scores: IScore[]): SearchResult[] {\n    // Set up an array to track which scores have been visited.\n    let visited = new Array(scores.length);\n    ArrayExt.fill(visited, false);\n\n    // Set up the search results array.\n    let results: SearchResult[] = [];\n\n    // Iterate over each score in the array.\n    for (let i = 0, n = scores.length; i < n; ++i) {\n      // Ignore a score which has already been processed.\n      if (visited[i]) {\n        continue;\n      }\n\n      // Extract the current item and indices.\n      let { item, categoryIndices } = scores[i];\n\n      // Extract the category for the current item.\n      let category = item.category;\n\n      // Add the header result for the category.\n      results.push({ type: 'header', category, indices: categoryIndices });\n\n      // Find the rest of the scores with the same category.\n      for (let j = i; j < n; ++j) {\n        // Ignore a score which has already been processed.\n        if (visited[j]) {\n          continue;\n        }\n\n        // Extract the data for the current score.\n        let { item, labelIndices } = scores[j];\n\n        // Ignore an item with a different category.\n        if (item.category !== category) {\n          continue;\n        }\n\n        // Create the item result for the score.\n        results.push({ type: 'item', item, indices: labelIndices });\n\n        // Mark the score as processed.\n        visited[j] = true;\n      }\n    }\n\n    // Return the final results.\n    return results;\n  }\n\n  /**\n   * A concrete implementation of `CommandPalette.IItem`.\n   */\n  class CommandItem implements CommandPalette.IItem {\n    /**\n     * Construct a new command item.\n     */\n    constructor(commands: CommandRegistry, options: CommandPalette.IItemOptions) {\n      this._commands = commands;\n      this.category = normalizeCategory(options.category);\n      this.command = options.command;\n      this.args = options.args || JSONExt.emptyObject;\n      this.rank = options.rank !== undefined ? options.rank : Infinity;\n    }\n\n    /**\n     * The category for the command item.\n     */\n    readonly category: string;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The rank for the command item.\n     */\n    readonly rank: number;\n\n    /**\n     * The display label for the command item.\n     */\n    get label(): string {\n      return this._commands.label(this.command, this.args);\n    }\n\n    /**\n     * The icon renderer for the command item.\n     */\n    get icon(): VirtualElement.IRenderer | undefined\n    /* <DEPRECATED> */ | string /* </DEPRECATED> */\n    {\n      return this._commands.icon(this.command, this.args);\n    }\n\n    /**\n     * The icon class for the command item.\n     */\n    get iconClass(): string {\n      return this._commands.iconClass(this.command, this.args);\n    }\n\n    /**\n     * The icon label for the command item.\n     */\n    get iconLabel(): string {\n      return this._commands.iconLabel(this.command, this.args);\n    }\n\n    /**\n     * The display caption for the command item.\n     */\n    get caption(): string {\n      return this._commands.caption(this.command, this.args);\n    }\n\n    /**\n     * The extra class name for the command item.\n     */\n    get className(): string {\n      return this._commands.className(this.command, this.args);\n    }\n\n    /**\n     * The dataset for the command item.\n     */\n    get dataset(): CommandRegistry.Dataset {\n      return this._commands.dataset(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is enabled.\n     */\n    get isEnabled(): boolean {\n      return this._commands.isEnabled(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is toggled.\n     */\n    get isToggled(): boolean {\n      return this._commands.isToggled(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is toggleable.\n     */\n    get isToggleable(): boolean {\n      return this._commands.isToggleable(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is visible.\n     */\n    get isVisible(): boolean {\n      return this._commands.isVisible(this.command, this.args);\n    }\n\n    /**\n     * The key binding for the command item.\n     */\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\n      let { command, args } = this;\n      return ArrayExt.findLastValue(this._commands.keyBindings, kb => {\n        return kb.command === command && JSONExt.deepEqual(kb.args, args);\n      }) || null;\n    }\n\n    private _commands: CommandRegistry;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt\n} from '@lumino/algorithm';\n\nimport {\n  CommandRegistry\n} from '@lumino/commands';\n\nimport {\n  JSONExt, ReadonlyJSONObject\n} from '@lumino/coreutils';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  getKeyboardLayout\n} from '@lumino/keyboard';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  ARIAAttrNames, ElementARIAAttrs, ElementDataset, VirtualDOM, VirtualElement, h\n} from '@lumino/virtualdom';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which displays items as a canonical menu.\n */\nexport\nclass Menu extends Widget {\n  /**\n   * Construct a new menu.\n   *\n   * @param options - The options for initializing the menu.\n   */\n  constructor(options: Menu.IOptions) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-Menu');\n    /* <DEPRECATED> */\n    this.addClass('p-Menu');\n    /* </DEPRECATED> */\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.commands = options.commands;\n    this.renderer = options.renderer || Menu.defaultRenderer;\n  }\n\n  /**\n   * Dispose of the resources held by the menu.\n   */\n  dispose(): void {\n    this.close();\n    this._items.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * A signal emitted just before the menu is closed.\n   *\n   * #### Notes\n   * This signal is emitted when the menu receives a `'close-request'`\n   * message, just before it removes itself from the DOM.\n   *\n   * This signal is not emitted if the menu is already detached from\n   * the DOM when it receives the `'close-request'` message.\n   */\n  get aboutToClose(): ISignal<this, void> {\n    return this._aboutToClose;\n  }\n\n  /**\n   * A signal emitted when a new menu is requested by the user.\n   *\n   * #### Notes\n   * This signal is emitted whenever the user presses the right or left\n   * arrow keys, and a submenu cannot be opened or closed in response.\n   *\n   * This signal is useful when implementing menu bars in order to open\n   * the next or previous menu in response to a user key press.\n   *\n   * This signal is only emitted for the root menu in a hierarchy.\n   */\n  get menuRequested(): ISignal<this, 'next' | 'previous'> {\n    return this._menuRequested;\n  }\n\n  /**\n   * The command registry used by the menu.\n   */\n  readonly commands: CommandRegistry;\n\n  /**\n   * The renderer used by the menu.\n   */\n  readonly renderer: Menu.IRenderer;\n\n  /**\n   * The parent menu of the menu.\n   *\n   * #### Notes\n   * This is `null` unless the menu is an open submenu.\n   */\n  get parentMenu(): Menu | null {\n    return this._parentMenu;\n  }\n\n  /**\n   * The child menu of the menu.\n   *\n   * #### Notes\n   * This is `null` unless the menu has an open submenu.\n   */\n  get childMenu(): Menu | null {\n    return this._childMenu;\n  }\n\n  /**\n   * The root menu of the menu hierarchy.\n   */\n  get rootMenu(): Menu {\n    let menu: Menu = this;\n    while (menu._parentMenu) {\n      menu = menu._parentMenu;\n    }\n    return menu;\n  }\n\n  /**\n   * The leaf menu of the menu hierarchy.\n   */\n  get leafMenu(): Menu {\n    let menu: Menu = this;\n    while (menu._childMenu) {\n      menu = menu._childMenu;\n    }\n    return menu;\n  }\n\n  /**\n   * The menu content node.\n   *\n   * #### Notes\n   * This is the node which holds the menu item nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName('lm-Menu-content')[0] as HTMLUListElement;\n  }\n\n  /**\n   * Get the currently active menu item.\n   */\n  get activeItem(): Menu.IItem | null {\n    return this._items[this._activeIndex] || null;\n  }\n\n  /**\n   * Set the currently active menu item.\n   *\n   * #### Notes\n   * If the item cannot be activated, the item will be set to `null`.\n   */\n  set activeItem(value: Menu.IItem | null) {\n    this.activeIndex = value ? this._items.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently active menu item.\n   *\n   * #### Notes\n   * This will be `-1` if no menu item is active.\n   */\n  get activeIndex(): number {\n    return this._activeIndex;\n  }\n\n  /**\n   * Set the index of the currently active menu item.\n   *\n   * #### Notes\n   * If the item cannot be activated, the index will be set to `-1`.\n   */\n  set activeIndex(value: number) {\n    // Adjust the value for an out of range index.\n    if (value < 0 || value >= this._items.length) {\n      value = -1;\n    }\n\n    // Ensure the item can be activated.\n    if (value !== -1 && !Private.canActivate(this._items[value])) {\n      value = -1;\n    }\n\n    // Bail if the index will not change.\n    if (this._activeIndex === value) {\n      return;\n    }\n\n    // Update the active index.\n    this._activeIndex = value;\n\n    // Make active element in focus\n    if (this._activeIndex >= 0 && this.contentNode.childNodes[this._activeIndex]) {\n      (this.contentNode.childNodes[this._activeIndex] as HTMLElement).focus();\n    }\n\n    // schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * A read-only array of the menu items in the menu.\n   */\n  get items(): ReadonlyArray<Menu.IItem> {\n    return this._items;\n  }\n\n  /**\n   * Activate the next selectable item in the menu.\n   *\n   * #### Notes\n   * If no item is selectable, the index will be set to `-1`.\n   */\n  activateNextItem(): void {\n    let n = this._items.length;\n    let ai = this._activeIndex;\n    let start = ai < n - 1 ? ai + 1 : 0;\n    let stop = start === 0 ? n - 1 : start - 1;\n    this.activeIndex = ArrayExt.findFirstIndex(\n      this._items, Private.canActivate, start, stop\n    );\n  }\n\n  /**\n   * Activate the previous selectable item in the menu.\n   *\n   * #### Notes\n   * If no item is selectable, the index will be set to `-1`.\n   */\n  activatePreviousItem(): void {\n    let n = this._items.length;\n    let ai = this._activeIndex;\n    let start = ai <= 0 ? n - 1 : ai - 1;\n    let stop = start === n - 1 ? 0 : start + 1;\n    this.activeIndex = ArrayExt.findLastIndex(\n      this._items, Private.canActivate, start, stop\n    );\n  }\n\n  /**\n   * Trigger the active menu item.\n   *\n   * #### Notes\n   * If the active item is a submenu, it will be opened and the first\n   * item will be activated.\n   *\n   * If the active item is a command, the command will be executed.\n   *\n   * If the menu is not attached, this is a no-op.\n   *\n   * If there is no active item, this is a no-op.\n   */\n  triggerActiveItem(): void {\n    // Bail if the menu is not attached.\n    if (!this.isAttached) {\n      return;\n    }\n\n    // Bail if there is no active item.\n    let item = this.activeItem;\n    if (!item) {\n      return;\n    }\n\n    // Cancel the pending timers.\n    this._cancelOpenTimer();\n    this._cancelCloseTimer();\n\n    // If the item is a submenu, open it.\n    if (item.type === 'submenu') {\n      this._openChildMenu(true);\n      return;\n    }\n\n    // Close the root menu before executing the command.\n    this.rootMenu.close();\n\n    // Execute the command for the item.\n    let { command, args } = item;\n    if (this.commands.isEnabled(command, args)) {\n      this.commands.execute(command, args);\n    } else {\n      console.log(`Command '${command}' is disabled.`);\n    }\n  }\n\n  /**\n   * Add a menu item to the end of the menu.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   */\n  addItem(options: Menu.IItemOptions): Menu.IItem {\n    return this.insertItem(this._items.length, options);\n  }\n\n  /**\n   * Insert a menu item into the menu at the specified index.\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   */\n  insertItem(index: number, options: Menu.IItemOptions): Menu.IItem {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Clamp the insert index to the array bounds.\n    let i = Math.max(0, Math.min(index, this._items.length));\n\n    // Create the item for the options.\n    let item = Private.createItem(this, options);\n\n    // Insert the item into the array.\n    ArrayExt.insert(this._items, i, item);\n\n    // Schedule an update of the items.\n    this.update();\n\n    // Return the item added to the menu.\n    return item;\n  }\n\n  /**\n   * Remove an item from the menu.\n   *\n   * @param item - The item to remove from the menu.\n   *\n   * #### Notes\n   * This is a no-op if the item is not in the menu.\n   */\n  removeItem(item: Menu.IItem): void {\n    this.removeItemAt(this._items.indexOf(item));\n  }\n\n  /**\n   * Remove the item at a given index from the menu.\n   *\n   * @param index - The index of the item to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeItemAt(index: number): void {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Remove the item from the array.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Bail if the index is out of range.\n    if (!item) {\n      return\n    }\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Remove all menu items from the menu.\n   */\n  clearItems(): void {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Bail if there is nothing to remove.\n    if (this._items.length === 0) {\n      return;\n    }\n\n    // Clear the items.\n    this._items.length = 0;\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Open the menu at the specified location.\n   *\n   * @param x - The client X coordinate of the menu location.\n   *\n   * @param y - The client Y coordinate of the menu location.\n   *\n   * @param options - The additional options for opening the menu.\n   *\n   * #### Notes\n   * The menu will be opened at the given location unless it will not\n   * fully fit on the screen. If it will not fit, it will be adjusted\n   * to fit naturally on the screen.\n   *\n   * This is a no-op if the menu is already attached to the DOM.\n   */\n  open(x: number, y: number, options: Menu.IOpenOptions = {}): void {\n    // Bail early if the menu is already attached.\n    if (this.isAttached) {\n      return;\n    }\n\n    // Extract the position options.\n    let forceX = options.forceX || false;\n    let forceY = options.forceY || false;\n\n    // Open the menu as a root menu.\n    Private.openRootMenu(this, x, y, forceX, forceY);\n\n    // Activate the menu to accept keyboard input.\n    this.activate();\n  }\n\n  /**\n   * Handle the DOM events for the menu.\n   *\n   * @param event - The DOM event sent to the menu.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the menu's DOM nodes. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'mouseup':\n      this._evtMouseUp(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseenter':\n      this._evtMouseEnter(event as MouseEvent);\n      break;\n    case 'mouseleave':\n      this._evtMouseLeave(event as MouseEvent);\n      break;\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('mouseup', this);\n    this.node.addEventListener('mousemove', this);\n    this.node.addEventListener('mouseenter', this);\n    this.node.addEventListener('mouseleave', this);\n    this.node.addEventListener('contextmenu', this);\n    document.addEventListener('mousedown', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('mouseup', this);\n    this.node.removeEventListener('mousemove', this);\n    this.node.removeEventListener('mouseenter', this);\n    this.node.removeEventListener('mouseleave', this);\n    this.node.removeEventListener('contextmenu', this);\n    document.removeEventListener('mousedown', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let items = this._items;\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let collapsedFlags = Private.computeCollapsed(items);\n    let content = new Array<VirtualElement>(items.length);\n    for (let i = 0, n = items.length; i < n; ++i) {\n      let item = items[i];\n      let active = i === activeIndex;\n      let collapsed = collapsedFlags[i];\n      content[i] = renderer.renderItem({\n        item,\n        active,\n        collapsed,\n        onfocus: () => {\n          this.activeIndex = i;\n        }\n      });\n    }\n    VirtualDOM.render(content, this.contentNode);\n  }\n\n  /**\n   * A message handler invoked on a `'close-request'` message.\n   */\n  protected onCloseRequest(msg: Message): void {\n    // Cancel the pending timers.\n    this._cancelOpenTimer();\n    this._cancelCloseTimer();\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Close any open child menu.\n    let childMenu = this._childMenu;\n    if (childMenu) {\n      this._childIndex = -1;\n      this._childMenu = null;\n      childMenu._parentMenu = null;\n      childMenu.close();\n    }\n\n    // Remove this menu from its parent and activate the parent.\n    let parentMenu = this._parentMenu;\n    if (parentMenu) {\n      this._parentMenu = null;\n      parentMenu._childIndex = -1;\n      parentMenu._childMenu = null;\n      parentMenu.activate();\n    }\n\n    // Emit the `aboutToClose` signal if the menu is attached.\n    if (this.isAttached) {\n      this._aboutToClose.emit(undefined);\n    }\n\n    // Finish closing the menu.\n    super.onCloseRequest(msg);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // A menu handles all keydown events.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the key code for the event.\n    let kc = event.keyCode;\n\n    // Enter\n    if (kc === 13) {\n      this.triggerActiveItem();\n      return;\n    }\n\n    // Escape\n    if (kc === 27) {\n      this.close();\n      return;\n    }\n\n    // Left Arrow\n    if (kc === 37) {\n      if (this._parentMenu) {\n        this.close();\n      } else {\n        this._menuRequested.emit('previous');\n      }\n      return;\n    }\n\n    // Up Arrow\n    if (kc === 38) {\n      this.activatePreviousItem();\n      return;\n    }\n\n    // Right Arrow\n    if (kc === 39) {\n      let item = this.activeItem;\n      if (item && item.type === 'submenu') {\n        this.triggerActiveItem();\n      } else {\n        this.rootMenu._menuRequested.emit('next');\n      }\n      return;\n    }\n\n    // Down Arrow\n    if (kc === 40) {\n      this.activateNextItem();\n      return;\n    }\n\n    // Get the pressed key character.\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\n\n    // Bail if the key is not valid.\n    if (!key) {\n      return;\n    }\n\n    // Search for the next best matching mnemonic item.\n    let start = this._activeIndex + 1;\n    let result = Private.findMnemonic(this._items, key, start);\n\n    // Handle the requested mnemonic based on the search results.\n    // If exactly one mnemonic is matched, that item is triggered.\n    // Otherwise, the next mnemonic is activated if available,\n    // followed by the auto mnemonic if available.\n    if (result.index !== -1 && !result.multiple) {\n      this.activeIndex = result.index;\n      this.triggerActiveItem();\n    } else if (result.index !== -1) {\n      this.activeIndex = result.index;\n    } else if (result.auto !== -1) {\n      this.activeIndex = result.auto;\n    }\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerActiveItem();\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Hit test the item nodes for the item under the mouse.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // Bail early if the mouse is already over the active index.\n    if (index === this._activeIndex) {\n      return;\n    }\n\n    // Update and coerce the active index.\n    this.activeIndex = index;\n    index = this.activeIndex;\n\n    // If the index is the current child index, cancel the timers.\n    if (index === this._childIndex) {\n      this._cancelOpenTimer();\n      this._cancelCloseTimer();\n      return;\n    }\n\n    // If a child menu is currently open, start the close timer.\n    if (this._childIndex !== -1) {\n      this._startCloseTimer();\n    }\n\n    // Cancel the open timer to give a full delay for opening.\n    this._cancelOpenTimer();\n\n    // Bail if the active item is not a valid submenu item.\n    let item = this.activeItem;\n    if (!item || item.type !== 'submenu' || !item.submenu) {\n      return;\n    }\n\n    // Start the open timer to open the active item submenu.\n    this._startOpenTimer();\n  }\n\n  /**\n   * Handle the `'mouseenter'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseEnter(event: MouseEvent): void {\n    // Synchronize the active ancestor items.\n    for (let menu = this._parentMenu; menu; menu = menu._parentMenu) {\n      menu._cancelOpenTimer();\n      menu._cancelCloseTimer();\n      menu.activeIndex = menu._childIndex;\n    }\n  }\n\n  /**\n   * Handle the `'mouseleave'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseLeave(event: MouseEvent): void {\n    // Cancel any pending submenu opening.\n    this._cancelOpenTimer();\n\n    // If there is no open child menu, just reset the active index.\n    if (!this._childMenu) {\n      this.activeIndex = -1;\n      return;\n    }\n\n    // If the mouse is over the child menu, cancel the close timer.\n    let { clientX, clientY } = event;\n    if (ElementExt.hitTest(this._childMenu.node, clientX, clientY)) {\n      this._cancelCloseTimer();\n      return;\n    }\n\n    // Otherwise, reset the active index and start the close timer.\n    this.activeIndex = -1;\n    this._startCloseTimer();\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the document node.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Bail if the menu is not a root menu.\n    if (this._parentMenu) {\n      return;\n    }\n\n    // The mouse button which is pressed is irrelevant. If the press\n    // is not on a menu, the entire hierarchy is closed and the event\n    // is allowed to propagate. This allows other code to act on the\n    // event, such as focusing the clicked element.\n    if (Private.hitTestMenus(this, event.clientX, event.clientY)) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Open the child menu at the active index immediately.\n   *\n   * If a different child menu is already open, it will be closed,\n   * even if the active item is not a valid submenu.\n   */\n  private _openChildMenu(activateFirst = false): void {\n    // If the item is not a valid submenu, close the child menu.\n    let item = this.activeItem;\n    if (!item || item.type !== 'submenu' || !item.submenu) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // Do nothing if the child menu will not change.\n    let submenu = item.submenu;\n    if (submenu === this._childMenu) {\n      return;\n    }\n\n    // Ensure the current child menu is closed.\n    this._closeChildMenu();\n\n    // Update the private child state.\n    this._childMenu = submenu;\n    this._childIndex = this._activeIndex;\n\n    // Set the parent menu reference for the child.\n    submenu._parentMenu = this;\n\n    // Ensure the menu is updated and lookup the item node.\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n    let itemNode = this.contentNode.children[this._activeIndex];\n\n    // Open the submenu at the active node.\n    Private.openSubmenu(submenu, itemNode as HTMLElement);\n\n    // Activate the first item if desired.\n    if (activateFirst) {\n      submenu.activeIndex = -1;\n      submenu.activateNextItem();\n    }\n\n    // Activate the child menu.\n    submenu.activate();\n  }\n\n  /**\n   * Close the child menu immediately.\n   *\n   * This is a no-op if a child menu is not open.\n   */\n  private _closeChildMenu(): void {\n    if (this._childMenu) {\n      this._childMenu.close();\n    }\n  }\n\n  /**\n   * Start the open timer, unless it is already pending.\n   */\n  private _startOpenTimer(): void {\n    if (this._openTimerID === 0) {\n      this._openTimerID = window.setTimeout(() => {\n        this._openTimerID = 0;\n        this._openChildMenu();\n      }, Private.TIMER_DELAY);\n    }\n  }\n\n  /**\n   * Start the close timer, unless it is already pending.\n   */\n  private _startCloseTimer(): void {\n    if (this._closeTimerID === 0) {\n      this._closeTimerID = window.setTimeout(() => {\n        this._closeTimerID = 0;\n        this._closeChildMenu();\n      }, Private.TIMER_DELAY);\n    }\n  }\n\n  /**\n   * Cancel the open timer, if the timer is pending.\n   */\n  private _cancelOpenTimer(): void {\n    if (this._openTimerID !== 0) {\n      clearTimeout(this._openTimerID);\n      this._openTimerID = 0;\n    }\n  }\n\n  /**\n   * Cancel the close timer, if the timer is pending.\n   */\n  private _cancelCloseTimer(): void {\n    if (this._closeTimerID !== 0) {\n      clearTimeout(this._closeTimerID);\n      this._closeTimerID = 0;\n    }\n  }\n\n  private _childIndex = -1;\n  private _activeIndex = -1;\n  private _openTimerID = 0;\n  private _closeTimerID = 0;\n  private _items: Menu.IItem[] = [];\n  private _childMenu: Menu | null = null;\n  private _parentMenu: Menu | null = null;\n  private _aboutToClose = new Signal<this, void>(this);\n  private _menuRequested = new Signal<this, 'next' | 'previous'>(this);\n}\n\n\n/**\n * The namespace for the `Menu` class statics.\n */\nexport\nnamespace Menu {\n  /**\n   * An options object for creating a menu.\n   */\n  export\n  interface IOptions {\n    /**\n     * The command registry for use with the menu.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the menu.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * An options object for the `open` method on a menu.\n   */\n  export\n  interface IOpenOptions {\n    /**\n     * Whether to force the X position of the menu.\n     *\n     * Setting to `true` will disable the logic which repositions the\n     * X coordinate of the menu if it will not fit entirely on screen.\n     *\n     * The default is `false`.\n     */\n    forceX?: boolean;\n\n    /**\n     * Whether to force the Y position of the menu.\n     *\n     * Setting to `true` will disable the logic which repositions the\n     * Y coordinate of the menu if it will not fit entirely on screen.\n     *\n     * The default is `false`.\n     */\n    forceY?: boolean;\n  }\n\n  /**\n   * A type alias for a menu item type.\n   */\n  export\n  type ItemType = 'command' | 'submenu' | 'separator';\n\n  /**\n   * An options object for creating a menu item.\n   */\n  export\n  interface IItemOptions {\n    /**\n     * The type of the menu item.\n     *\n     * The default value is `'command'`.\n     */\n    type?: ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     *\n     * The default value is an empty string.\n     */\n    command?: string;\n\n    /**\n     * The arguments for the command.\n     *\n     * The default value is an empty object.\n     */\n    args?: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     *\n     * The default value is `null`.\n     */\n    submenu?: Menu | null;\n  }\n\n  /**\n   * An object which represents a menu item.\n   *\n   * #### Notes\n   * Item objects are created automatically by a menu.\n   */\n  export\n  interface IItem {\n    /**\n     * The type of the menu item.\n     */\n    readonly type: ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     */\n    readonly submenu: Menu | null;\n\n    /**\n     * The display label for the menu item.\n     */\n    readonly label: string;\n\n    /**\n     * The mnemonic index for the menu item.\n     */\n    readonly mnemonic: number;\n\n    /**\n     * The icon renderer for the menu item.\n     */\n    readonly icon: VirtualElement.IRenderer | undefined\n    /* <DEPRECATED> */ | string /* </DEPRECATED> */;\n\n    /**\n     * The icon class for the menu item.\n     */\n    readonly iconClass: string;\n\n    /**\n     * The icon label for the menu item.\n     */\n    readonly iconLabel: string;\n\n    /**\n     * The display caption for the menu item.\n     */\n    readonly caption: string;\n\n    /**\n     * The extra class name for the menu item.\n     */\n    readonly className: string;\n\n    /**\n     * The dataset for the menu item.\n     */\n    readonly dataset: CommandRegistry.Dataset;\n\n    /**\n     * Whether the menu item is enabled.\n     */\n    readonly isEnabled: boolean;\n\n    /**\n     * Whether the menu item is toggled.\n     */\n    readonly isToggled: boolean;\n\n    /**\n     * Whether the menu item is visible.\n     */\n    readonly isVisible: boolean;\n\n    /**\n     * The key binding for the menu item.\n     */\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\n  }\n\n  /**\n   * An object which holds the data to render a menu item.\n   */\n  export\n  interface IRenderData {\n    /**\n     * The item to be rendered.\n     */\n    readonly item: IItem;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n\n    /**\n     * Whether the item should be collapsed.\n     */\n    readonly collapsed: boolean;\n\n    /**\n     * Handler for when element is in focus.\n     */\n    readonly onfocus?: () => void;\n  }\n\n  /**\n   * A renderer for use with a menu.\n   */\n  export\n  interface IRenderer {\n    /**\n     * Render the virtual element for a menu item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export\n  class Renderer implements IRenderer {\n    /**\n     * Construct a new renderer.\n     */\n    constructor() { }\n\n    /**\n     * Render the virtual element for a menu item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      let aria = this.createItemARIA(data);\n      return (\n        h.li(\n          {\n            className,\n            dataset,\n            tabindex: '0',\n            onfocus: data.onfocus,\n            ...aria\n          },\n          this.renderIcon(data),\n          this.renderLabel(data),\n          this.renderShortcut(data),\n          this.renderSubmenu(data)\n        )\n      );\n    }\n\n    /**\n     * Render the icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the item icon.\n     */\n    renderIcon(data: IRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      /* <DEPRECATED> */\n      if (typeof data.item.icon === 'string') {\n        return h.div({className}, data.item.iconLabel);\n      }\n      /* </DEPRECATED> */\n\n      // if data.item.icon is undefined, it will be ignored\n      return h.div({className}, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Render the label element for a menu item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the item label.\n     */\n    renderLabel(data: IRenderData): VirtualElement {\n      let content = this.formatLabel(data);\n      return h.div({\n        className: 'lm-Menu-itemLabel'\n          /* <DEPRECATED> */\n          + ' p-Menu-itemLabel'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the shortcut element for a menu item.\n     *\n     * @param data - The data to use for rendering the shortcut.\n     *\n     * @returns A virtual element representing the item shortcut.\n     */\n    renderShortcut(data: IRenderData): VirtualElement {\n      let content = this.formatShortcut(data);\n      return h.div({\n        className: 'lm-Menu-itemShortcut'\n          /* <DEPRECATED> */\n          + ' p-Menu-itemShortcut'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Render the submenu icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the submenu icon.\n     *\n     * @returns A virtual element representing the submenu icon.\n     */\n    renderSubmenu(data: IRenderData): VirtualElement {\n      return h.div({\n        className: 'lm-Menu-itemSubmenuIcon'\n          /* <DEPRECATED> */\n          + ' p-Menu-itemSubmenuIcon'\n          /* </DEPRECATED> */\n      });\n    }\n\n    /**\n     * Create the class name for the menu item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the menu item.\n     */\n    createItemClass(data: IRenderData): string {\n      // Setup the initial class name.\n      let name = 'lm-Menu-item';\n      /* <DEPRECATED> */\n      name += ' p-Menu-item';\n      /* </DEPRECATED> */\n\n      // Add the boolean state classes.\n      if (!data.item.isEnabled) {\n        name += ' lm-mod-disabled';\n        /* <DEPRECATED> */\n        name += ' p-mod-disabled';\n        /* </DEPRECATED> */\n      }\n      if (data.item.isToggled) {\n        name += ' lm-mod-toggled';\n        /* <DEPRECATED> */\n        name += ' p-mod-toggled';\n        /* </DEPRECATED> */\n      }\n      if (!data.item.isVisible) {\n        name += ' lm-mod-hidden';\n        /* <DEPRECATED> */\n        name += ' p-mod-hidden';\n        /* </DEPRECATED> */\n      }\n      if (data.active) {\n        name += ' lm-mod-active';\n        /* <DEPRECATED> */\n        name += ' p-mod-active';\n        /* </DEPRECATED> */\n      }\n      if (data.collapsed) {\n        name += ' lm-mod-collapsed';\n        /* <DEPRECATED> */\n        name += ' p-mod-collapsed';\n        /* </DEPRECATED> */\n      }\n\n      // Add the extra class.\n      let extra = data.item.className;\n      if (extra) {\n        name += ` ${extra}`;\n      }\n\n      // Return the complete class name.\n      return name;\n    }\n\n    /**\n     * Create the dataset for the menu item.\n     *\n     * @param data - The data to use for creating the dataset.\n     *\n     * @returns The dataset for the menu item.\n     */\n    createItemDataset(data: IRenderData): ElementDataset {\n      let result: ElementDataset;\n      let { type, command, dataset } = data.item;\n      if (type === 'command') {\n        result = { ...dataset, type, command };\n      } else {\n        result = { ...dataset, type };\n      }\n      return result;\n    }\n\n    /**\n     * Create the class name for the menu item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IRenderData): string {\n      let name = 'lm-Menu-itemIcon';\n      /* <DEPRECATED> */\n      name += ' p-Menu-itemIcon';\n      /* </DEPRECATED> */\n      let extra = data.item.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n    \n    /**\n     * Create the aria attributes for menu item.\n     * \n     * @param data - The data to use for the aria attributes.\n     * \n     * @returns The aria attributes object for the item.\n     */\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\n      let aria: {[T in ARIAAttrNames]?: string} = {};\n      switch (data.item.type) {\n      case 'separator':\n        aria.role = 'presentation';\n        break;\n      case 'submenu':\n        aria['aria-haspopup'] = 'true';\n        if (!data.item.isEnabled) {\n          aria['aria-disabled'] = 'true';\n        }\n        break;\n      default:\n        if (!data.item.isEnabled) {\n          aria['aria-disabled'] = 'true';\n        }\n        aria.role = 'menuitem';\n      }\n      return aria;\n    }\n\n    /**\n     * Create the render content for the label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatLabel(data: IRenderData): h.Child {\n      // Fetch the label text and mnemonic index.\n      let { label, mnemonic } = data.item;\n\n      // If the index is out of range, do not modify the label.\n      if (mnemonic < 0 || mnemonic >= label.length) {\n        return label;\n      }\n\n      // Split the label into parts.\n      let prefix = label.slice(0, mnemonic);\n      let suffix = label.slice(mnemonic + 1);\n      let char = label[mnemonic];\n\n      // Wrap the mnemonic character in a span.\n      let span = h.span({\n        className: 'lm-Menu-itemMnemonic'\n          /* <DEPRECATED> */\n          + ' p-Menu-itemMnemonic'\n          /* </DEPRECATED> */\n      }, char);\n\n      // Return the content parts.\n      return [prefix, span, suffix];\n    }\n\n    /**\n     * Create the render content for the shortcut node.\n     *\n     * @param data - The data to use for the shortcut content.\n     *\n     * @returns The content to add to the shortcut node.\n     */\n    formatShortcut(data: IRenderData): h.Child {\n      let kb = data.item.keyBinding;\n      return kb ? kb.keys.map(CommandRegistry.formatKeystroke).join(', ') : null;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export\n  const defaultRenderer = new Renderer();\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The ms delay for opening and closing a submenu.\n   */\n  export\n  const TIMER_DELAY = 300;\n\n  /**\n   * The horizontal pixel overlap for an open submenu.\n   */\n  export\n  const SUBMENU_OVERLAP = 3;\n\n  /**\n   * Create the DOM node for a menu.\n   */\n  export\n  function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.className = 'lm-Menu-content';\n    /* <DEPRECATED> */\n    content.classList.add('p-Menu-content');\n    /* </DEPRECATED> */\n    node.appendChild(content);\n    content.setAttribute('role', 'menu');\n    node.tabIndex = 0;\n    return node;\n  }\n\n  /**\n   * Test whether a menu item can be activated.\n   */\n  export\n  function canActivate(item: Menu.IItem): boolean {\n    return item.type !== 'separator' && item.isEnabled && item.isVisible;\n  }\n\n  /**\n   * Create a new menu item for an owner menu.\n   */\n  export\n  function createItem(owner: Menu, options: Menu.IItemOptions): Menu.IItem {\n    return new MenuItem(owner.commands, options);\n  }\n\n  /**\n   * Hit test a menu hierarchy starting at the given root.\n   */\n  export\n  function hitTestMenus(menu: Menu, x: number, y: number): boolean {\n    for (let temp: Menu | null = menu; temp; temp = temp.childMenu) {\n      if (ElementExt.hitTest(temp.node, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Compute which extra separator items should be collapsed.\n   */\n  export\n  function computeCollapsed(items: ReadonlyArray<Menu.IItem>): boolean[] {\n    // Allocate the return array and fill it with `false`.\n    let result = new Array<boolean>(items.length);\n    ArrayExt.fill(result, false);\n\n    // Collapse the leading separators.\n    let k1 = 0;\n    let n = items.length;\n    for (; k1 < n; ++k1) {\n      let item = items[k1];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        break;\n      }\n      result[k1] = true;\n    }\n\n    // Hide the trailing separators.\n    let k2 = n - 1;\n    for (; k2 >= 0; --k2) {\n      let item = items[k2];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        break;\n      }\n      result[k2] = true;\n    }\n\n    // Hide the remaining consecutive separators.\n    let hide = false;\n    while (++k1 < k2) {\n      let item = items[k1];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        hide = false;\n      } else if (hide) {\n        result[k1] = true;\n      } else {\n        hide = true;\n      }\n    }\n\n    // Return the resulting flags.\n    return result;\n  }\n\n  /**\n   * Open a menu as a root menu at the target location.\n   */\n  export\n  function openRootMenu(menu: Menu, x: number, y: number, forceX: boolean, forceY: boolean): void {\n    // Ensure the menu is updated before attaching and measuring.\n    MessageLoop.sendMessage(menu, Widget.Msg.UpdateRequest);\n\n    // Get the current position and size of the main viewport.\n    let px = window.pageXOffset;\n    let py = window.pageYOffset;\n    let cw = document.documentElement.clientWidth;\n    let ch = document.documentElement.clientHeight;\n\n    // Compute the maximum allowed height for the menu.\n    let maxHeight = ch - (forceY ? y : 0);\n\n    // Fetch common variables.\n    let node = menu.node;\n    let style = node.style;\n\n    // Clear the menu geometry and prepare it for measuring.\n    style.top = '';\n    style.left = '';\n    style.width = '';\n    style.height = '';\n    style.visibility = 'hidden';\n    style.maxHeight = `${maxHeight}px`;\n\n    // Attach the menu to the document.\n    Widget.attach(menu, document.body);\n\n    // Measure the size of the menu.\n    let { width, height } = node.getBoundingClientRect();\n\n    // Adjust the X position of the menu to fit on-screen.\n    if (!forceX && (x + width > px + cw)) {\n      x = px + cw - width;\n    }\n\n    // Adjust the Y position of the menu to fit on-screen.\n    if (!forceY && (y + height > py + ch)) {\n      if (y > py + ch) {\n        y = py + ch - height;\n      } else {\n        y = y - height;\n      }\n    }\n\n    // Update the position of the menu to the computed position.\n    style.top = `${Math.max(0, y)}px`;\n    style.left = `${Math.max(0, x)}px`;\n\n    // Finally, make the menu visible on the screen.\n    style.visibility = '';\n  }\n\n  /**\n   * Open a menu as a submenu using an item node for positioning.\n   */\n  export\n  function openSubmenu(submenu: Menu, itemNode: HTMLElement): void {\n    // Ensure the menu is updated before opening.\n    MessageLoop.sendMessage(submenu, Widget.Msg.UpdateRequest);\n\n    // Get the current position and size of the main viewport.\n    let px = window.pageXOffset;\n    let py = window.pageYOffset;\n    let cw = document.documentElement.clientWidth;\n    let ch = document.documentElement.clientHeight;\n\n    // Compute the maximum allowed height for the menu.\n    let maxHeight = ch;\n\n    // Fetch common variables.\n    let node = submenu.node;\n    let style = node.style;\n\n    // Clear the menu geometry and prepare it for measuring.\n    style.top = '';\n    style.left = '';\n    style.width = '';\n    style.height = '';\n    style.visibility = 'hidden';\n    style.maxHeight = `${maxHeight}px`;\n\n    // Attach the menu to the document.\n    Widget.attach(submenu, document.body);\n\n    // Measure the size of the menu.\n    let { width, height } = node.getBoundingClientRect();\n\n    // Compute the box sizing for the menu.\n    let box = ElementExt.boxSizing(submenu.node);\n\n    // Get the bounding rect for the target item node.\n    let itemRect = itemNode.getBoundingClientRect();\n\n    // Compute the target X position.\n    let x = itemRect.right - SUBMENU_OVERLAP;\n\n    // Adjust the X position to fit on the screen.\n    if (x + width > px + cw) {\n      x = itemRect.left + SUBMENU_OVERLAP - width;\n    }\n\n    // Compute the target Y position.\n    let y = itemRect.top - box.borderTop - box.paddingTop;\n\n    // Adjust the Y position to fit on the screen.\n    if (y + height > py + ch) {\n      y = itemRect.bottom + box.borderBottom + box.paddingBottom - height;\n    }\n\n    // Update the position of the menu to the computed position.\n    style.top = `${Math.max(0, y)}px`;\n    style.left = `${Math.max(0, x)}px`;\n\n    // Finally, make the menu visible on the screen.\n    style.visibility = '';\n  }\n\n  /**\n   * The results of a mnemonic search.\n   */\n  export\n  interface IMnemonicResult {\n    /**\n     * The index of the first matching mnemonic item, or `-1`.\n     */\n    index: number;\n\n    /**\n     * Whether multiple mnemonic items matched.\n     */\n    multiple: boolean;\n\n    /**\n     * The index of the first auto matched non-mnemonic item.\n     */\n    auto: number;\n  }\n\n  /**\n   * Find the best matching mnemonic item.\n   *\n   * The search starts at the given index and wraps around.\n   */\n  export\n  function findMnemonic(items: ReadonlyArray<Menu.IItem>, key: string, start: number): IMnemonicResult {\n    // Setup the result variables.\n    let index = -1;\n    let auto = -1;\n    let multiple = false;\n\n    // Normalize the key to upper case.\n    let upperKey = key.toUpperCase();\n\n    // Search the items from the given start index.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Compute the wrapped index.\n      let k = (i + start) % n;\n\n      // Lookup the item\n      let item = items[k];\n\n      // Ignore items which cannot be activated.\n      if (!canActivate(item)) {\n        continue;\n      }\n\n      // Ignore items with an empty label.\n      let label = item.label;\n      if (label.length === 0) {\n        continue;\n      }\n\n      // Lookup the mnemonic index for the label.\n      let mn = item.mnemonic;\n\n      // Handle a valid mnemonic index.\n      if (mn >= 0 && mn < label.length) {\n        if (label[mn].toUpperCase() === upperKey) {\n          if (index === -1) {\n            index = k;\n          } else {\n            multiple = true;\n          }\n        }\n        continue;\n      }\n\n      // Finally, handle the auto index if possible.\n      if (auto === -1 && label[0].toUpperCase() === upperKey) {\n        auto = k;\n      }\n    }\n\n    // Return the search results.\n    return { index, multiple, auto };\n  }\n\n  /**\n   * A concrete implementation of `Menu.IItem`.\n   */\n  class MenuItem implements Menu.IItem {\n    /**\n     * Construct a new menu item.\n     */\n    constructor(commands: CommandRegistry, options: Menu.IItemOptions) {\n      this._commands = commands;\n      this.type = options.type || 'command';\n      this.command = options.command || '';\n      this.args = options.args || JSONExt.emptyObject;\n      this.submenu = options.submenu || null;\n    }\n\n    /**\n     * The type of the menu item.\n     */\n    readonly type: Menu.ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     */\n    readonly submenu: Menu | null;\n\n    /**\n     * The display label for the menu item.\n     */\n    get label(): string {\n      if (this.type === 'command') {\n        return this._commands.label(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.label;\n      }\n      return '';\n    }\n\n    /**\n     * The mnemonic index for the menu item.\n     */\n    get mnemonic(): number {\n      if (this.type === 'command') {\n        return this._commands.mnemonic(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.mnemonic;\n      }\n      return -1;\n    }\n\n    /**\n     * The icon renderer for the menu item.\n     */\n    get icon(): VirtualElement.IRenderer | undefined\n    /* <DEPRECATED> */ | string /* </DEPRECATED> */\n    {\n      if (this.type === 'command') {\n        return this._commands.icon(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.icon;\n      }\n\n      /* <DEPRECATED> */\n      // alias to icon class if not otherwise defined\n      return this.iconClass;\n      /* </DEPRECATED> */\n\n      /* <FUTURE>\n      return undefined;\n      </FUTURE> */\n    }\n\n    /**\n     * The icon class for the menu item.\n     */\n    get iconClass(): string {\n      if (this.type === 'command') {\n        return this._commands.iconClass(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.iconClass;\n      }\n      return '';\n    }\n\n    /**\n     * The icon label for the menu item.\n     */\n    get iconLabel(): string {\n      if (this.type === 'command') {\n        return this._commands.iconLabel(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.iconLabel;\n      }\n      return '';\n    }\n\n\n    /**\n     * The display caption for the menu item.\n     */\n    get caption(): string {\n      if (this.type === 'command') {\n        return this._commands.caption(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.caption;\n      }\n      return '';\n    }\n\n    /**\n     * The extra class name for the menu item.\n     */\n    get className(): string {\n      if (this.type === 'command') {\n        return this._commands.className(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.className;\n      }\n      return '';\n    }\n\n    /**\n     * The dataset for the menu item.\n     */\n    get dataset(): CommandRegistry.Dataset {\n      if (this.type === 'command') {\n        return this._commands.dataset(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.dataset;\n      }\n      return {};\n    }\n\n    /**\n     * Whether the menu item is enabled.\n     */\n    get isEnabled(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isEnabled(this.command, this.args);\n      }\n      if (this.type === 'submenu') {\n        return this.submenu !== null;\n      }\n      return true;\n    }\n\n    /**\n     * Whether the menu item is toggled.\n     */\n    get isToggled(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isToggled(this.command, this.args);\n      }\n      return false;\n    }\n\n    /**\n     * Whether the menu item is visible.\n     */\n    get isVisible(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isVisible(this.command, this.args);\n      }\n      if (this.type === 'submenu') {\n        return this.submenu !== null;\n      }\n      return true;\n    }\n\n    /**\n     * The key binding for the menu item.\n     */\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\n      if (this.type === 'command') {\n        let { command, args } = this;\n        return ArrayExt.findLastValue(this._commands.keyBindings, kb => {\n          return kb.command === command && JSONExt.deepEqual(kb.args, args);\n        }) || null;\n      }\n      return null;\n    }\n\n    private _commands: CommandRegistry;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt, each } from '@lumino/algorithm';\n\nimport { CommandRegistry } from '@lumino/commands';\n\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\n\nimport { Selector } from '@lumino/domutils';\n\nimport { Menu } from './menu';\n\n/**\n * An object which implements a universal context menu.\n *\n * #### Notes\n * The items shown in the context menu are determined by CSS selector\n * matching against the DOM hierarchy at the site of the mouse click.\n * This is similar in concept to how keyboard shortcuts are matched\n * in the command registry.\n */\nexport class ContextMenu {\n  /**\n   * Construct a new context menu.\n   *\n   * @param options - The options for initializing the menu.\n   */\n  constructor(options: ContextMenu.IOptions) {\n    const { groupByTarget, sortBySelector, ...others } = options;\n    this.menu = new Menu(others);\n    this._groupByTarget = groupByTarget !== false;\n    this._sortBySelector = sortBySelector !== false;\n  }\n\n  /**\n   * The menu widget which displays the matched context items.\n   */\n  readonly menu: Menu;\n\n  /**\n   * Add an item to the context menu.\n   *\n   * @param options - The options for creating the item.\n   *\n   * @returns A disposable which will remove the item from the menu.\n   */\n  addItem(options: ContextMenu.IItemOptions): IDisposable {\n    // Create an item from the given options.\n    let item = Private.createItem(options, this._idTick++);\n\n    // Add the item to the internal array.\n    this._items.push(item);\n\n    // Return a disposable which will remove the item.\n    return new DisposableDelegate(() => {\n      ArrayExt.removeFirstOf(this._items, item);\n    });\n  }\n\n  /**\n   * Open the context menu in response to a `'contextmenu'` event.\n   *\n   * @param event - The `'contextmenu'` event of interest.\n   *\n   * @returns `true` if the menu was opened, or `false` if no items\n   *   matched the event and the menu was not opened.\n   *\n   * #### Notes\n   * This method will populate the context menu with items which match\n   * the propagation path of the event, then open the menu at the mouse\n   * position indicated by the event.\n   */\n  open(event: MouseEvent): boolean {\n    // Clear the current contents of the context menu.\n    this.menu.clearItems();\n\n    // Bail early if there are no items to match.\n    if (this._items.length === 0) {\n      return false;\n    }\n\n    // Find the matching items for the event.\n    let items = Private.matchItems(\n      this._items,\n      event,\n      this._groupByTarget,\n      this._sortBySelector\n    );\n\n    // Bail if there are no matching items.\n    if (!items || items.length === 0) {\n      return false;\n    }\n\n    // Add the filtered items to the menu.\n    each(items, (item) => {\n      this.menu.addItem(item);\n    });\n\n    // Open the context menu at the current mouse position.\n    this.menu.open(event.clientX, event.clientY);\n\n    // Indicate success.\n    return true;\n  }\n\n  private _groupByTarget: boolean = true;\n  private _idTick = 0;\n  private _items: Private.IItem[] = [];\n  private _sortBySelector: boolean = true;\n}\n\n/**\n * The namespace for the `ContextMenu` class statics.\n */\nexport namespace ContextMenu {\n  /**\n   * An options object for initializing a context menu.\n   */\n  export interface IOptions {\n    /**\n     * The command registry to use with the context menu.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the context menu.\n     */\n    renderer?: Menu.IRenderer;\n\n    /**\n     * Whether to sort by selector and rank or only rank.\n     *\n     * Default true.\n     */\n    sortBySelector?: boolean;\n\n    /**\n     * Whether to group items following the DOM hierarchy.\n     *\n     * Default true.\n     *\n     * #### Note\n     * If true, when the mouse event occurs on element `span` within `div.top`,\n     * the items matching `div.top` will be shown before the ones matching `body`.\n     */\n    groupByTarget?: boolean;\n  }\n\n  /**\n   * An options object for creating a context menu item.\n   */\n  export interface IItemOptions extends Menu.IItemOptions {\n    /**\n     * The CSS selector for the context menu item.\n     *\n     * The context menu item will only be displayed in the context menu\n     * when the selector matches a node on the propagation path of the\n     * contextmenu event. This allows the menu item to be restricted to\n     * user-defined contexts.\n     *\n     * The selector must not contain commas.\n     */\n    selector: string;\n\n    /**\n     * The rank for the item.\n     *\n     * The rank is used as a tie-breaker when ordering context menu\n     * items for display. Items are sorted in the following order:\n     *   1. Depth in the DOM tree (deeper is better)\n     *   2. Selector specificity (higher is better)\n     *   3. Rank (lower is better)\n     *   4. Insertion order\n     *\n     * The default rank is `Infinity`.\n     */\n    rank?: number;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A normalized item for a context menu.\n   */\n  export interface IItem extends Menu.IItemOptions {\n    /**\n     * The selector for the item.\n     */\n    selector: string;\n\n    /**\n     * The rank for the item.\n     */\n    rank: number;\n\n    /**\n     * The tie-breaking id for the item.\n     */\n    id: number;\n  }\n\n  /**\n   * Create a normalized context menu item from an options object.\n   */\n  export function createItem(\n    options: ContextMenu.IItemOptions,\n    id: number\n  ): IItem {\n    let selector = validateSelector(options.selector);\n    let rank = options.rank !== undefined ? options.rank : Infinity;\n    return { ...options, selector, rank, id };\n  }\n\n  /**\n   * Find the items which match a context menu event.\n   *\n   * The results are sorted by DOM level, specificity, and rank.\n   */\n  export function matchItems(\n    items: IItem[],\n    event: MouseEvent,\n    groupByTarget: boolean,\n    sortBySelector: boolean\n  ): IItem[] | null {\n    // Look up the target of the event.\n    let target = event.target as Element | null;\n\n    // Bail if there is no target.\n    if (!target) {\n      return null;\n    }\n\n    // Look up the current target of the event.\n    let currentTarget = event.currentTarget as Element | null;\n\n    // Bail if there is no current target.\n    if (!currentTarget) {\n      return null;\n    }\n\n    // There are some third party libraries that cause the `target` to\n    // be detached from the DOM before lumino can process the event.\n    // If that happens, search for a new target node by point. If that\n    // node is still dangling, bail.\n    if (!currentTarget.contains(target)) {\n      target = document.elementFromPoint(event.clientX, event.clientY);\n      if (!target || !currentTarget.contains(target)) {\n        return null;\n      }\n    }\n\n    // Set up the result array.\n    let result: IItem[] = [];\n\n    // Copy the items array to allow in-place modification.\n    let availableItems: Array<IItem | null> = items.slice();\n\n    // Walk up the DOM hierarchy searching for matches.\n    while (target !== null) {\n      // Set up the match array for this DOM level.\n      let matches: IItem[] = [];\n\n      // Search the remaining items for matches.\n      for (let i = 0, n = availableItems.length; i < n; ++i) {\n        // Fetch the item.\n        let item = availableItems[i];\n\n        // Skip items which are already consumed.\n        if (!item) {\n          continue;\n        }\n\n        // Skip items which do not match the element.\n        if (!Selector.matches(target, item.selector)) {\n          continue;\n        }\n\n        // Add the matched item to the result for this DOM level.\n        matches.push(item);\n\n        // Mark the item as consumed.\n        availableItems[i] = null;\n      }\n\n      // Sort the matches for this level and add them to the results.\n      if (matches.length !== 0) {\n        if (groupByTarget) {\n          matches.sort(sortBySelector ? itemCmp : itemCmpRank);\n        }\n        result.push(...matches);\n      }\n\n      // Stop searching at the limits of the DOM range.\n      if (target === currentTarget) {\n        break;\n      }\n\n      // Step to the parent DOM level.\n      target = target.parentElement;\n    }\n\n    if (!groupByTarget) {\n      result.sort(sortBySelector ? itemCmp : itemCmpRank);\n    }\n\n    // Return the matched and sorted results.\n    return result;\n  }\n\n  /**\n   * Validate the selector for a menu item.\n   *\n   * This returns the validated selector, or throws if the selector is\n   * invalid or contains commas.\n   */\n  function validateSelector(selector: string): string {\n    if (selector.indexOf(',') !== -1) {\n      throw new Error(`Selector cannot contain commas: ${selector}`);\n    }\n    if (!Selector.isValid(selector)) {\n      throw new Error(`Invalid selector: ${selector}`);\n    }\n    return selector;\n  }\n\n  /**\n   * A sort comparison function for a context menu item by ranks.\n   */\n  function itemCmpRank(a: IItem, b: IItem): number {\n    // Sort based on rank.\n    let r1 = a.rank;\n    let r2 = b.rank;\n    if (r1 !== r2) {\n      return r1 < r2 ? -1 : 1; // Infinity-safe\n    }\n\n    // When all else fails, sort by item id.\n    return a.id - b.id;\n  }\n\n  /**\n   * A sort comparison function for a context menu item by selectors and ranks.\n   */\n  function itemCmp(a: IItem, b: IItem): number {\n    // Sort first based on selector specificity.\n    let s1 = Selector.calculateSpecificity(a.selector);\n    let s2 = Selector.calculateSpecificity(b.selector);\n    if (s1 !== s2) {\n      return s2 - s1;\n    }\n\n    // If specificities are equal\n    return itemCmpRank(a, b);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, each\n} from '@lumino/algorithm';\n\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Drag\n} from '@lumino/dragdrop';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  ElementARIAAttrs, ElementDataset, ElementInlineStyle, VirtualDOM, VirtualElement, h\n} from '@lumino/virtualdom';\n\nimport {\n  Title\n} from './title';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which displays titles as a single row or column of tabs.\n *\n * #### Notes\n * If CSS transforms are used to rotate nodes for vertically oriented\n * text, then tab dragging will not work correctly. The `tabsMovable`\n * property should be set to `false` when rotating nodes from CSS.\n */\nexport\nclass TabBar<T> extends Widget {\n  /**\n   * Construct a new tab bar.\n   *\n   * @param options - The options for initializing the tab bar.\n   */\n  constructor(options: TabBar.IOptions<T> = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-TabBar');\n    /* <DEPRECATED> */\n    this.addClass('p-TabBar');\n    /* </DEPRECATED> */\n    this.contentNode.setAttribute('role', 'tablist');\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.tabsMovable = options.tabsMovable || false;\n    this.titlesEditable = options.titlesEditable || false;\n    this.allowDeselect = options.allowDeselect || false;\n    this.addButtonEnabled = options.addButtonEnabled || false;\n    this.insertBehavior = options.insertBehavior || 'select-tab-if-needed';\n    this.name = options.name || '';\n    this.orientation = options.orientation || 'horizontal';\n    this.removeBehavior = options.removeBehavior || 'select-tab-after';\n    this.renderer = options.renderer || TabBar.defaultRenderer;\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._releaseMouse();\n    this._titles.length = 0;\n    this._previousTitle = null;\n    super.dispose();\n  }\n\n  /**\n   * A signal emitted when the current tab is changed.\n   *\n   * #### Notes\n   * This signal is emitted when the currently selected tab is changed\n   * either through user or programmatic interaction.\n   *\n   * Notably, this signal is not emitted when the index of the current\n   * tab changes due to tabs being inserted, removed, or moved. It is\n   * only emitted when the actual current tab node is changed.\n   */\n  get currentChanged(): ISignal<this, TabBar.ICurrentChangedArgs<T>> {\n    return this._currentChanged;\n  }\n\n  /**\n   * A signal emitted when a tab is moved by the user.\n   *\n   * #### Notes\n   * This signal is emitted when a tab is moved by user interaction.\n   *\n   * This signal is not emitted when a tab is moved programmatically.\n   */\n  get tabMoved(): ISignal<this, TabBar.ITabMovedArgs<T>> {\n    return this._tabMoved;\n  }\n\n  /**\n   * A signal emitted when a tab is clicked by the user.\n   *\n   * #### Notes\n   * If the clicked tab is not the current tab, the clicked tab will be\n   * made current and the `currentChanged` signal will be emitted first.\n   *\n   * This signal is emitted even if the clicked tab is the current tab.\n   */\n  get tabActivateRequested(): ISignal<this, TabBar.ITabActivateRequestedArgs<T>> {\n    return this._tabActivateRequested;\n  }\n\n  /**\n   * A signal emitted when the tab bar add button is clicked.\n   */\n  get addRequested(): ISignal<this, void> {\n    return this._addRequested;\n  }\n\n  /**\n   * A signal emitted when a tab close icon is clicked.\n   *\n   * #### Notes\n   * This signal is not emitted unless the tab title is `closable`.\n   */\n  get tabCloseRequested(): ISignal<this, TabBar.ITabCloseRequestedArgs<T>> {\n    return this._tabCloseRequested;\n  }\n\n  /**\n   * A signal emitted when a tab is dragged beyond the detach threshold.\n   *\n   * #### Notes\n   * This signal is emitted when the user drags a tab with the mouse,\n   * and mouse is dragged beyond the detach threshold.\n   *\n   * The consumer of the signal should call `releaseMouse` and remove\n   * the tab in order to complete the detach.\n   *\n   * This signal is only emitted once per drag cycle.\n   */\n  get tabDetachRequested(): ISignal<this, TabBar.ITabDetachRequestedArgs<T>> {\n    return this._tabDetachRequested;\n  }\n\n  /**\n   * The renderer used by the tab bar.\n   */\n  readonly renderer: TabBar.IRenderer<T>;\n\n  /**\n   * Whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  tabsMovable: boolean;\n\n  /**\n   * Whether the titles can be user-edited.\n   *\n   */\n  get titlesEditable(): boolean {\n    return this._titlesEditable;\n  }\n\n  /**\n   * Set whether titles can be user edited.\n   *\n   */\n  set titlesEditable(value: boolean) {\n    this._titlesEditable = value;\n  }\n\n  /**\n   * Whether a tab can be deselected by the user.\n   *\n   * #### Notes\n   * Tabs can be always be deselected programmatically.\n   */\n  allowDeselect: boolean;\n\n  /**\n   * The selection behavior when inserting a tab.\n   */\n  insertBehavior: TabBar.InsertBehavior;\n\n  /**\n   * The selection behavior when removing a tab.\n   */\n  removeBehavior: TabBar.RemoveBehavior;\n\n  /**\n   * Get the currently selected title.\n   *\n   * #### Notes\n   * This will be `null` if no tab is selected.\n   */\n  get currentTitle(): Title<T> | null {\n    return this._titles[this._currentIndex] || null;\n  }\n\n  /**\n   * Set the currently selected title.\n   *\n   * #### Notes\n   * If the title does not exist, the title will be set to `null`.\n   */\n  set currentTitle(value: Title<T> | null) {\n    this.currentIndex = value ? this._titles.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently selected tab.\n   *\n   * #### Notes\n   * This will be `-1` if no tab is selected.\n   */\n  get currentIndex(): number {\n    return this._currentIndex;\n  }\n\n  /**\n   * Set the index of the currently selected tab.\n   *\n   * #### Notes\n   * If the value is out of range, the index will be set to `-1`.\n   */\n  set currentIndex(value: number) {\n    // Adjust for an out of range index.\n    if (value < 0 || value >= this._titles.length) {\n      value = -1;\n    }\n\n    // Bail early if the index will not change.\n    if (this._currentIndex === value) {\n      return;\n    }\n\n    // Look up the previous index and title.\n    let pi = this._currentIndex;\n    let pt = this._titles[pi] || null;\n\n    // Look up the current index and title.\n    let ci = value;\n    let ct = this._titles[ci] || null;\n\n    // Update the current index and previous title.\n    this._currentIndex = ci;\n    this._previousTitle = pt;\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Emit the current changed signal.\n    this._currentChanged.emit({\n      previousIndex: pi, previousTitle: pt,\n      currentIndex: ci, currentTitle: ct\n    });\n  }\n\n  /**\n   * Get the name of the tab bar.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Set the name of the tab bar.\n   */\n  set name(value: string) {\n    this._name = value;\n    if (value) {\n      this.contentNode.setAttribute('aria-label', value);\n    } else {\n      this.contentNode.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * Get the orientation of the tab bar.\n   *\n   * #### Notes\n   * This controls whether the tabs are arranged in a row or column.\n   */\n  get orientation(): TabBar.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the orientation of the tab bar.\n   *\n   * #### Notes\n   * This controls whether the tabs are arranged in a row or column.\n   */\n  set orientation(value: TabBar.Orientation) {\n    // Do nothing if the orientation does not change.\n    if (this._orientation === value) {\n      return;\n    }\n\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Toggle the orientation values.\n    this._orientation = value;\n    this.dataset['orientation'] = value;\n    this.contentNode.setAttribute('aria-orientation', value);\n  }\n\n  /**\n   * Whether the add button is enabled.\n   */\n  get addButtonEnabled(): boolean {\n    return this._addButtonEnabled;\n  }\n\n  /**\n   * Set whether the add button is enabled.\n   */\n  set addButtonEnabled(value: boolean) {\n    // Do nothing if the value does not change.\n    if (this._addButtonEnabled === value) {\n      return;\n    }\n\n    this._addButtonEnabled = value;\n    if (value) {\n      this.addButtonNode.classList.remove('lm-mod-hidden');\n    } else {\n      this.addButtonNode.classList.add('lm-mod-hidden');\n    }\n  }\n\n  /**\n   * A read-only array of the titles in the tab bar.\n   */\n  get titles(): ReadonlyArray<Title<T>> {\n    return this._titles;\n  }\n\n  /**\n   * The tab bar content node.\n   *\n   * #### Notes\n   * This is the node which holds the tab nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName('lm-TabBar-content')[0] as HTMLUListElement;\n  }\n\n\n  /**\n   * The tab bar add button node.\n   *\n   * #### Notes\n   * This is the node which holds the add button.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get addButtonNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-TabBar-addButton')[0] as HTMLDivElement;\n  }\n\n  /**\n   * Add a tab to the end of the tab bar.\n   *\n   * @param value - The title which holds the data for the tab,\n   *   or an options object to convert to a title.\n   *\n   * @returns The title object added to the tab bar.\n   *\n   * #### Notes\n   * If the title is already added to the tab bar, it will be moved.\n   */\n  addTab(value: Title<T> | Title.IOptions<T>): Title<T> {\n    return this.insertTab(this._titles.length, value);\n  }\n\n  /**\n   * Insert a tab into the tab bar at the specified index.\n   *\n   * @param index - The index at which to insert the tab.\n   *\n   * @param value - The title which holds the data for the tab,\n   *   or an options object to convert to a title.\n   *\n   * @returns The title object added to the tab bar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the tabs.\n   *\n   * If the title is already added to the tab bar, it will be moved.\n   */\n  insertTab(index: number, value: Title<T> | Title.IOptions<T>): Title<T> {\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Coerce the value to a title.\n    let title = Private.asTitle(value);\n\n    // Look up the index of the title.\n    let i = this._titles.indexOf(title);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._titles.length));\n\n    // If the title is not in the array, insert it.\n    if (i === -1) {\n      // Insert the title into the array.\n      ArrayExt.insert(this._titles, j, title);\n\n      // Connect to the title changed signal.\n      title.changed.connect(this._onTitleChanged, this);\n\n      // Schedule an update of the tabs.\n      this.update();\n\n      // Adjust the current index for the insert.\n      this._adjustCurrentForInsert(j, title);\n\n      // Return the title added to the tab bar.\n      return title;\n    }\n\n    // Otherwise, the title exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._titles.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return title;\n    }\n\n    // Move the title to the new location.\n    ArrayExt.move(this._titles, i, j);\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Adjust the current index for the move.\n    this._adjustCurrentForMove(i, j);\n\n    // Return the title added to the tab bar.\n    return title;\n  }\n\n  /**\n   * Remove a tab from the tab bar.\n   *\n   * @param title - The title for the tab to remove.\n   *\n   * #### Notes\n   * This is a no-op if the title is not in the tab bar.\n   */\n  removeTab(title: Title<T>): void {\n    this.removeTabAt(this._titles.indexOf(title));\n  }\n\n  /**\n   * Remove the tab at a given index from the tab bar.\n   *\n   * @param index - The index of the tab to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeTabAt(index: number): void {\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Remove the title from the array.\n    let title = ArrayExt.removeAt(this._titles, index);\n\n    // Bail if the index is out of range.\n    if (!title) {\n      return;\n    }\n\n    // Disconnect from the title changed signal.\n    title.changed.disconnect(this._onTitleChanged, this);\n\n    // Clear the previous title if it's being removed.\n    if (title === this._previousTitle) {\n      this._previousTitle = null;\n    }\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Adjust the current index for the remove.\n    this._adjustCurrentForRemove(index, title);\n  }\n\n  /**\n   * Remove all tabs from the tab bar.\n   */\n  clearTabs(): void {\n    // Bail if there is nothing to remove.\n    if (this._titles.length === 0) {\n      return;\n    }\n\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Disconnect from the title changed signals.\n    for (let title of this._titles) {\n      title.changed.disconnect(this._onTitleChanged, this);\n    }\n\n    // Get the current index and title.\n    let pi = this.currentIndex;\n    let pt = this.currentTitle;\n\n    // Reset the current index and previous title.\n    this._currentIndex = -1;\n    this._previousTitle = null;\n\n    // Clear the title array.\n    this._titles.length = 0;\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // If no tab was selected, there's nothing else to do.\n    if (pi === -1) {\n      return;\n    }\n\n    // Emit the current changed signal.\n    this._currentChanged.emit({\n      previousIndex: pi, previousTitle: pt,\n      currentIndex: -1, currentTitle: null\n    });\n  }\n\n  /**\n   * Release the mouse and restore the non-dragged tab positions.\n   *\n   * #### Notes\n   * This will cause the tab bar to stop handling mouse events and to\n   * restore the tabs to their non-dragged positions.\n   */\n  releaseMouse(): void {\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the DOM events for the tab bar.\n   *\n   * @param event - The DOM event sent to the tab bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the tab bar's DOM node.\n   *\n   * This should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseup':\n      this._evtMouseUp(event as MouseEvent);\n      break;\n    case 'dblclick':\n      this._evtDblClick(event as MouseEvent);\n      break;\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('mousedown', this);\n    this.node.addEventListener('dblclick', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('mousedown', this);\n    this.node.removeEventListener('dblclick', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let titles = this._titles;\n    let renderer = this.renderer;\n    let currentTitle = this.currentTitle;\n    let content = new Array<VirtualElement>(titles.length);\n    for (let i = 0, n = titles.length; i < n; ++i) {\n      let title = titles[i];\n      let current = title === currentTitle;\n      let zIndex = current ? n : n - i - 1;\n      content[i] = renderer.renderTab({ title, current, zIndex });\n    }\n    VirtualDOM.render(content, this.contentNode);\n  }\n\n  /**\n   * Handle the `'dblclick'` event for the tab bar.\n   */\n  private _evtDblClick(event: MouseEvent): void {\n\n    // Do nothing if titles are not editable\n    if (!this.titlesEditable) {\n      return;\n    }\n\n    let tabs = this.contentNode.children;\n\n    // Find the index of the released tab.\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\n    });\n\n    // Do nothing if the press is not on a tab.\n    if (index === -1) {\n      return;\n    }\n\n    let title = this.titles[index];\n    let label = tabs[index].querySelector('.lm-TabBar-tabLabel') as HTMLElement;\n    if (label && label.contains(event.target as HTMLElement)) {\n\n      let value = title.label || '';\n\n      // Clear the label element\n      let oldValue = label.innerHTML;\n      label.innerHTML = \"\";\n\n      let input = document.createElement('input');\n      input.classList.add('lm-TabBar-tabInput');\n      input.value = value;\n      label.appendChild(input);\n\n      let onblur = () => {\n        input.removeEventListener('blur', onblur);\n        label.innerHTML = oldValue;\n      }\n\n      input.addEventListener('dblclick', (event: Event) => event.stopPropagation());\n      input.addEventListener('blur', onblur);\n      input.addEventListener('keydown', (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          if (input.value !== '') {\n            title.label = title.caption = input.value;\n          }\n          onblur();\n        } else if (event.key === 'Escape') {\n          onblur();\n        }\n      });\n      input.select();\n      input.focus();\n\n      if (label.children.length > 0) {\n        (label.children[0] as HTMLElement).focus();\n      }\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the tab bar.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop all input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      this._releaseMouse();\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the tab bar.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if it's not a left or middle mouse press.\n    if (event.button !== 0 && event.button !== 1) {\n      return;\n    }\n\n    // Do nothing if a drag is in progress.\n    if (this._dragData) {\n      return;\n    }\n\n    // Check if the add button was clicked.\n    let addButtonClicked = this.addButtonEnabled &&\n      this.addButtonNode.contains(event.target as HTMLElement);\n\n    // Lookup the tab nodes.\n    let tabs = this.contentNode.children;\n\n    // Find the index of the pressed tab.\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\n    });\n\n    // Do nothing if the press is not on a tab or the add button.\n    if (index === -1 && !addButtonClicked) {\n      return;\n    }\n\n    // Pressing on a tab stops the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Initialize the non-measured parts of the drag data.\n    this._dragData = {\n      tab: tabs[index] as HTMLElement,\n      index: index,\n      pressX: event.clientX,\n      pressY: event.clientY,\n      tabPos: -1,\n      tabSize: -1,\n      tabPressPos: -1,\n      targetIndex: -1,\n      tabLayout: null,\n      contentRect: null,\n      override: null,\n      dragActive: false,\n      dragAborted: false,\n      detachRequested: false\n    };\n\n    // Add the document mouse up listener.\n    document.addEventListener('mouseup', this, true);\n\n    // Do nothing else if the middle button or add button is clicked.\n    if (event.button === 1 || addButtonClicked) {\n      return;\n    }\n\n    // Do nothing else if the close icon is clicked.\n    let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\n    if (icon && icon.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    // Add the extra listeners if the tabs are movable.\n    if (this.tabsMovable) {\n      document.addEventListener('mousemove', this, true);\n      document.addEventListener('keydown', this, true);\n      document.addEventListener('contextmenu', this, true);\n    }\n\n    // Update the current index as appropriate.\n    if (this.allowDeselect && this.currentIndex === index) {\n      this.currentIndex = -1;\n    } else {\n      this.currentIndex = index;\n    }\n\n    // Do nothing else if there is no current tab.\n    if (this.currentIndex === -1) {\n      return;\n    }\n\n    // Emit the tab activate request signal.\n    this._tabActivateRequested.emit({\n      index: this.currentIndex, title: this.currentTitle!\n    });\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the tab bar.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Do nothing if no drag is in progress.\n    let data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Suppress the event during a drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Lookup the tab nodes.\n    let tabs = this.contentNode.children;\n\n    // Bail early if the drag threshold has not been met.\n    if (!data.dragActive && !Private.dragExceeded(data, event)) {\n      return;\n    }\n\n    // Activate the drag if necessary.\n    if (!data.dragActive) {\n      // Fill in the rest of the drag data measurements.\n      let tabRect = data.tab.getBoundingClientRect();\n      if (this._orientation === 'horizontal') {\n        data.tabPos = data.tab.offsetLeft;\n        data.tabSize = tabRect.width;\n        data.tabPressPos = data.pressX - tabRect.left;\n      } else {\n        data.tabPos = data.tab.offsetTop;\n        data.tabSize = tabRect.height;\n        data.tabPressPos = data.pressY - tabRect.top;\n      }\n      data.tabLayout = Private.snapTabLayout(tabs, this._orientation);\n      data.contentRect = this.contentNode.getBoundingClientRect();\n      data.override = Drag.overrideCursor('default');\n\n      // Add the dragging style classes.\n      data.tab.classList.add('lm-mod-dragging');\n      this.addClass('lm-mod-dragging');\n      /* <DEPRECATED> */\n      data.tab.classList.add('p-mod-dragging');\n      this.addClass('p-mod-dragging');\n      /* </DEPRECATED> */\n\n      // Mark the drag as active.\n      data.dragActive = true;\n    }\n\n    // Emit the detach requested signal if the threshold is exceeded.\n    if (!data.detachRequested && Private.detachExceeded(data, event)) {\n      // Only emit the signal once per drag cycle.\n      data.detachRequested = true;\n\n      // Setup the arguments for the signal.\n      let index = data.index;\n      let clientX = event.clientX;\n      let clientY = event.clientY;\n      let tab = tabs[index] as HTMLElement;\n      let title = this._titles[index];\n\n      // Emit the tab detach requested signal.\n      this._tabDetachRequested.emit({ index, title, tab, clientX, clientY });\n\n      // Bail if the signal handler aborted the drag.\n      if (data.dragAborted) {\n        return;\n      }\n    }\n\n    // Update the positions of the tabs.\n    Private.layoutTabs(tabs, data, event, this._orientation);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the document.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Do nothing if it's not a left or middle mouse release.\n    if (event.button !== 0 && event.button !== 1) {\n      return;\n    }\n\n    // Do nothing if no drag is in progress.\n    const data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Remove the extra mouse event listeners.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('contextmenu', this, true);\n\n    // Handle a release when the drag is not active.\n    if (!data.dragActive) {\n      // Clear the drag data.\n      this._dragData = null;\n\n      // Handle clicking the add button.\n      let addButtonClicked = this.addButtonEnabled &&\n        this.addButtonNode.contains(event.target as HTMLElement);\n      if (addButtonClicked) {\n        this._addRequested.emit(undefined);\n        return;\n      }\n\n      // Lookup the tab nodes.\n      let tabs = this.contentNode.children;\n\n      // Find the index of the released tab.\n      let index = ArrayExt.findFirstIndex(tabs, tab => {\n        return ElementExt.hitTest(tab, event.clientX, event.clientY);\n      });\n\n      // Do nothing if the release is not on the original pressed tab.\n      if (index !== data.index) {\n        return;\n      }\n\n      // Ignore the release if the title is not closable.\n      let title = this._titles[index];\n      if (!title.closable) {\n        return;\n      }\n\n      // Emit the close requested signal if the middle button is released.\n      if (event.button === 1) {\n        this._tabCloseRequested.emit({ index, title });\n        return;\n      }\n\n      // Emit the close requested signal if the close icon was released.\n      let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\n      if (icon && icon.contains(event.target as HTMLElement)) {\n        this._tabCloseRequested.emit({ index, title });\n        return;\n      }\n\n      // Otherwise, there is nothing left to do.\n      return;\n    }\n\n    // Do nothing if the left button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Position the tab at its final resting position.\n    Private.finalizeTabPosition(data, this._orientation);\n\n    // Remove the dragging class from the tab so it can be transitioned.\n    data.tab.classList.remove('lm-mod-dragging');\n    /* <DEPRECATED> */\n    data.tab.classList.remove('p-mod-dragging');\n    /* </DEPRECATED> */\n\n    // Parse the transition duration for releasing the tab.\n    let duration = Private.parseTransitionDuration(data.tab);\n\n    // Complete the release on a timer to allow the tab to transition.\n    setTimeout(() => {\n      // Do nothing if the drag has been aborted.\n      if (data.dragAborted) {\n        return;\n      }\n\n      // Clear the drag data reference.\n      this._dragData = null;\n\n      // Reset the positions of the tabs.\n      Private.resetTabPositions(this.contentNode.children, this._orientation);\n\n      // Clear the cursor grab.\n      data.override!.dispose();\n\n      // Remove the remaining dragging style.\n      this.removeClass('lm-mod-dragging');\n      /* <DEPRECATED> */\n      this.removeClass('p-mod-dragging');\n      /* </DEPRECATED> */\n\n      // If the tab was not moved, there is nothing else to do.\n      let i = data.index;\n      let j = data.targetIndex;\n      if (j === -1 || i === j) {\n        return;\n      }\n\n      // Move the title to the new locations.\n      ArrayExt.move(this._titles, i, j);\n\n      // Adjust the current index for the move.\n      this._adjustCurrentForMove(i, j);\n\n      // Emit the tab moved signal.\n      this._tabMoved.emit({\n        fromIndex: i, toIndex: j, title: this._titles[j]\n      });\n\n      // Update the tabs immediately to prevent flicker.\n      MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n    }, duration);\n  }\n\n  /**\n   * Release the mouse and restore the non-dragged tab positions.\n   */\n  private _releaseMouse(): void {\n    // Do nothing if no drag is in progress.\n    let data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Clear the drag data reference.\n    this._dragData = null;\n\n    // Remove the extra mouse listeners.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('contextmenu', this, true);\n\n    // Indicate the drag has been aborted. This allows the mouse\n    // event handlers to return early when the drag is canceled.\n    data.dragAborted = true;\n\n    // If the drag is not active, there's nothing more to do.\n    if (!data.dragActive) {\n      return;\n    }\n\n    // Reset the tabs to their non-dragged positions.\n    Private.resetTabPositions(this.contentNode.children, this._orientation);\n\n    // Clear the cursor override.\n    data.override!.dispose();\n\n    // Clear the dragging style classes.\n    data.tab.classList.remove('lm-mod-dragging');\n    this.removeClass('lm-mod-dragging');\n    /* <DEPRECATED> */\n    data.tab.classList.remove('p-mod-dragging');\n    this.removeClass('p-mod-dragging');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Adjust the current index for a tab insert operation.\n   *\n   * This method accounts for the tab bar's insertion behavior when\n   * adjusting the current index and emitting the changed signal.\n   */\n  private _adjustCurrentForInsert(i: number, title: Title<T>): void {\n    // Lookup commonly used variables.\n    let ct = this.currentTitle;\n    let ci = this._currentIndex;\n    let bh = this.insertBehavior;\n\n\n    // TODO: do we need to do an update to update the aria-selected attribute?\n\n    // Handle the behavior where the new tab is always selected,\n    // or the behavior where the new tab is selected if needed.\n    if (bh === 'select-tab' || (bh === 'select-tab-if-needed' && ci === -1)) {\n      this._currentIndex = i;\n      this._previousTitle = ct;\n      this._currentChanged.emit({\n        previousIndex: ci, previousTitle: ct,\n        currentIndex: i, currentTitle: title\n      });\n      return;\n    }\n\n    // Otherwise, silently adjust the current index if needed.\n    if (ci >= i) {\n      this._currentIndex++;\n    }\n  }\n\n  /**\n   * Adjust the current index for a tab move operation.\n   *\n   * This method will not cause the actual current tab to change.\n   * It silently adjusts the index to account for the given move.\n   */\n  private _adjustCurrentForMove(i: number, j: number): void {\n    if (this._currentIndex === i) {\n      this._currentIndex = j;\n    } else if (this._currentIndex < i && this._currentIndex >= j) {\n      this._currentIndex++;\n    } else if (this._currentIndex > i && this._currentIndex <= j) {\n      this._currentIndex--;\n    }\n  }\n\n  /**\n   * Adjust the current index for a tab remove operation.\n   *\n   * This method accounts for the tab bar's remove behavior when\n   * adjusting the current index and emitting the changed signal.\n   */\n  private _adjustCurrentForRemove(i: number, title: Title<T>): void {\n    // Lookup commonly used variables.\n    let ci = this._currentIndex;\n    let bh = this.removeBehavior;\n\n    // Silently adjust the index if the current tab is not removed.\n    if (ci !== i) {\n      if (ci > i) {\n        this._currentIndex--;\n      }\n      return;\n    }\n\n    // TODO: do we need to do an update to adjust the aria-selected value?\n\n    // No tab gets selected if the tab bar is empty.\n    if (this._titles.length === 0) {\n      this._currentIndex = -1;\n      this._currentChanged.emit({\n        previousIndex: i, previousTitle: title,\n        currentIndex: -1, currentTitle: null\n      });\n      return;\n    }\n\n    // Handle behavior where the next sibling tab is selected.\n    if (bh === 'select-tab-after') {\n      this._currentIndex = Math.min(i, this._titles.length - 1);\n      this._currentChanged.emit({\n        previousIndex: i, previousTitle: title,\n        currentIndex: this._currentIndex, currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Handle behavior where the previous sibling tab is selected.\n    if (bh === 'select-tab-before') {\n      this._currentIndex = Math.max(0, i - 1);\n      this._currentChanged.emit({\n        previousIndex: i, previousTitle: title,\n        currentIndex: this._currentIndex, currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Handle behavior where the previous history tab is selected.\n    if (bh === 'select-previous-tab') {\n      if (this._previousTitle) {\n        this._currentIndex = this._titles.indexOf(this._previousTitle);\n        this._previousTitle = null;\n      } else {\n        this._currentIndex = Math.min(i, this._titles.length - 1);\n      }\n      this._currentChanged.emit({\n        previousIndex: i, previousTitle: title,\n        currentIndex: this._currentIndex, currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Otherwise, no tab gets selected.\n    this._currentIndex = -1;\n    this._currentChanged.emit({\n      previousIndex: i, previousTitle: title,\n      currentIndex: -1, currentTitle: null\n    });\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(sender: Title<T>): void {\n    this.update();\n  }\n\n  private _name: string;\n  private _currentIndex = -1;\n  private _titles: Title<T>[] = [];\n  private _orientation: TabBar.Orientation;\n  private _titlesEditable: boolean = false;\n  private _previousTitle: Title<T> | null = null;\n  private _dragData: Private.IDragData | null = null;\n  private _addButtonEnabled: boolean = false;\n  private _tabMoved = new Signal<this, TabBar.ITabMovedArgs<T>>(this);\n  private _currentChanged = new Signal<this, TabBar.ICurrentChangedArgs<T>>(this);\n  private _addRequested = new Signal<this, void>(this);\n  private _tabCloseRequested = new Signal<this, TabBar.ITabCloseRequestedArgs<T>>(this);\n  private _tabDetachRequested = new Signal<this, TabBar.ITabDetachRequestedArgs<T>>(this);\n  private _tabActivateRequested = new Signal<this, TabBar.ITabActivateRequestedArgs<T>>(this);\n}\n\n\n/**\n * The namespace for the `TabBar` class statics.\n */\nexport\nnamespace TabBar {\n  /**\n   * A type alias for a tab bar orientation.\n   */\n  export\n  type Orientation = (\n    /**\n     * The tabs are arranged in a single row, left-to-right.\n     *\n     * The tab text orientation is horizontal.\n     */\n    'horizontal' |\n\n    /**\n     * The tabs are arranged in a single column, top-to-bottom.\n     *\n     * The tab text orientation is horizontal.\n     */\n    'vertical'\n  );\n\n  /**\n   * A type alias for the selection behavior on tab insert.\n   */\n  export\n  type InsertBehavior = (\n    /**\n     * The selected tab will not be changed.\n     */\n    'none' |\n\n    /**\n     * The inserted tab will be selected.\n     */\n    'select-tab' |\n\n    /**\n     * The inserted tab will be selected if the current tab is null.\n     */\n    'select-tab-if-needed'\n  );\n\n  /**\n   * A type alias for the selection behavior on tab remove.\n   */\n  export\n  type RemoveBehavior = (\n    /**\n     * No tab will be selected.\n     */\n    'none' |\n\n    /**\n     * The tab after the removed tab will be selected if possible.\n     */\n    'select-tab-after' |\n\n    /**\n     * The tab before the removed tab will be selected if possible.\n     */\n    'select-tab-before' |\n\n    /**\n     * The previously selected tab will be selected if possible.\n     */\n    'select-previous-tab'\n  );\n\n  /**\n   * An options object for creating a tab bar.\n   */\n  export\n  interface IOptions<T> {\n    /**\n     * Name of the tab bar.\n     *\n     * This is used for accessibility reasons. The default is the empty string.\n     */\n    name?: string;\n\n    /**\n     * The layout orientation of the tab bar.\n     *\n     * The default is `horizontal`.\n     */\n    orientation?: TabBar.Orientation;\n\n    /**\n     * Whether the tabs are movable by the user.\n     *\n     * The default is `false`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Whether a tab can be deselected by the user.\n     *\n     * The default is `false`.\n     */\n    allowDeselect?: boolean;\n\n    /**\n     * Whether the titles can be directly edited by the user.\n     *\n     * The default is `false`.\n     */\n    titlesEditable?: boolean;\n\n    /**\n     * Whether the add button is enabled.\n     *\n     * The default is `false`.\n     */\n    addButtonEnabled?: boolean;\n\n    /**\n     * The selection behavior when inserting a tab.\n     *\n     * The default is `'select-tab-if-needed'`.\n     */\n    insertBehavior?: TabBar.InsertBehavior;\n\n    /**\n     * The selection behavior when removing a tab.\n     *\n     * The default is `'select-tab-after'`.\n     */\n    removeBehavior?: TabBar.RemoveBehavior;\n\n    /**\n     * A renderer to use with the tab bar.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer<T>;\n  }\n\n  /**\n   * The arguments object for the `currentChanged` signal.\n   */\n  export\n  interface ICurrentChangedArgs<T> {\n    /**\n     * The previously selected index.\n     */\n    readonly previousIndex: number;\n\n    /**\n     * The previously selected title.\n     */\n    readonly previousTitle: Title<T> | null;\n\n    /**\n     * The currently selected index.\n     */\n    readonly currentIndex: number;\n\n    /**\n     * The currently selected title.\n     */\n    readonly currentTitle: Title<T> | null;\n  }\n\n  /**\n   * The arguments object for the `tabMoved` signal.\n   */\n  export\n  interface ITabMovedArgs<T> {\n    /**\n     * The previous index of the tab.\n     */\n    readonly fromIndex: number;\n\n    /**\n     * The current index of the tab.\n     */\n    readonly toIndex: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabActivateRequested` signal.\n   */\n  export\n  interface ITabActivateRequestedArgs<T> {\n    /**\n     * The index of the tab to activate.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabCloseRequested` signal.\n   */\n  export\n  interface ITabCloseRequestedArgs<T> {\n    /**\n     * The index of the tab to close.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabDetachRequested` signal.\n   */\n  export\n  interface ITabDetachRequestedArgs<T> {\n    /**\n     * The index of the tab to detach.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n\n    /**\n     * The node representing the tab.\n     */\n    readonly tab: HTMLElement;\n\n    /**\n     * The current client X position of the mouse.\n     */\n    readonly clientX: number;\n\n    /**\n     * The current client Y position of the mouse.\n     */\n    readonly clientY: number;\n  }\n\n  /**\n   * An object which holds the data to render a tab.\n   */\n  export\n  interface IRenderData<T> {\n    /**\n     * The title associated with the tab.\n     */\n    readonly title: Title<T>;\n\n    /**\n     * Whether the tab is the current tab.\n     */\n    readonly current: boolean;\n\n    /**\n     * The z-index for the tab.\n     */\n    readonly zIndex: number;\n  }\n\n  /**\n   * A renderer for use with a tab bar.\n   */\n  export\n  interface IRenderer<T> {\n    /**\n     * A selector which matches the close icon node in a tab.\n     */\n    readonly closeIconSelector: string;\n\n    /**\n     * Render the virtual element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab.\n     */\n    renderTab(data: IRenderData<T>): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export\n  class Renderer implements IRenderer<any> {\n    /**\n     * Construct a new renderer.\n     */\n    constructor() { }\n\n    /**\n     * A selector which matches the close icon node in a tab.\n     */\n    readonly closeIconSelector = '.lm-TabBar-tabCloseIcon';\n\n    /**\n     * Render the virtual element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab.\n     */\n    renderTab(data: IRenderData<any>): VirtualElement {\n      let title = data.title.caption;\n      let key = this.createTabKey(data);\n      let id = key;\n      let style = this.createTabStyle(data);\n      let className = this.createTabClass(data);\n      let dataset = this.createTabDataset(data);\n      let aria = this.createTabARIA(data);\n      if (data.title.closable) {\n        return (\n          h.li({ id, key, className, title, style, dataset, ...aria },\n            this.renderIcon(data),\n            this.renderLabel(data),\n            this.renderCloseIcon(data)\n          )\n        );\n      } else {\n        return (\n          h.li({ id, key, className, title, style, dataset, ...aria },\n            this.renderIcon(data),\n            this.renderLabel(data),\n          )\n        );\n      }\n    }\n\n    /**\n     * Render the icon element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab icon.\n     */\n    renderIcon(data: IRenderData<any>): VirtualElement {\n      const { title } = data;\n      let className = this.createIconClass(data);\n\n      /* <DEPRECATED> */\n      if (typeof title.icon === 'string') {\n        return h.div({className}, title.iconLabel);\n      }\n      /* </DEPRECATED> */\n\n      // if title.icon is undefined, it will be ignored\n      return h.div({className}, title.icon!, title.iconLabel);\n    }\n\n    /**\n     * Render the label element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab label.\n     */\n    renderLabel(data: IRenderData<any>): VirtualElement {\n      return h.div({\n        className: 'lm-TabBar-tabLabel'\n          /* <DEPRECATED> */\n          + ' p-TabBar-tabLabel'\n          /* </DEPRECATED> */\n      }, data.title.label);\n    }\n\n    /**\n     * Render the close icon element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab close icon.\n     */\n    renderCloseIcon(data: IRenderData<any>): VirtualElement {\n      return h.div({\n        className: 'lm-TabBar-tabCloseIcon'\n          /* <DEPRECATED> */\n          + ' p-TabBar-tabCloseIcon'\n          /* </DEPRECATED> */\n      });\n    }\n\n    /**\n     * Create a unique render key for the tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The unique render key for the tab.\n     *\n     * #### Notes\n     * This method caches the key against the tab title the first time\n     * the key is generated. This enables efficient rendering of moved\n     * tabs and avoids subtle hover style artifacts.\n     */\n    createTabKey(data: IRenderData<any>): string {\n      let key = this._tabKeys.get(data.title);\n      if (key === undefined) {\n        key = `tab-key-${this._tabID++}`;\n        this._tabKeys.set(data.title, key);\n      }\n      return key;\n    }\n\n    /**\n     * Create the inline style object for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The inline style data for the tab.\n     */\n    createTabStyle(data: IRenderData<any>): ElementInlineStyle {\n      return { zIndex: `${data.zIndex}` };\n    }\n\n    /**\n     * Create the class name for the tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The full class name for the tab.\n     */\n    createTabClass(data: IRenderData<any>): string {\n      let name = 'lm-TabBar-tab';\n      /* <DEPRECATED> */\n      name += ' p-TabBar-tab';\n      /* </DEPRECATED> */\n      if (data.title.className) {\n        name += ` ${data.title.className}`;\n      }\n      if (data.title.closable) {\n        name += ' lm-mod-closable';\n        /* <DEPRECATED> */\n        name += ' p-mod-closable';\n        /* </DEPRECATED> */\n      }\n      if (data.current) {\n        name += ' lm-mod-current';\n        /* <DEPRECATED> */\n        name += ' p-mod-current';\n        /* </DEPRECATED> */\n      }\n      return name;\n    }\n\n    /**\n     * Create the dataset for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The dataset for the tab.\n     */\n    createTabDataset(data: IRenderData<any>): ElementDataset {\n      return data.title.dataset;\n    }\n\n    /**\n     * Create the ARIA attributes for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The ARIA attributes for the tab.\n     */\n    createTabARIA(data: IRenderData<any>): ElementARIAAttrs {\n      return {role: 'tab', 'aria-selected': data.current.toString()};\n    }\n\n    /**\n     * Create the class name for the tab icon.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The full class name for the tab icon.\n     */\n    createIconClass(data: IRenderData<any>): string {\n      let name = 'lm-TabBar-tabIcon';\n      /* <DEPRECATED> */\n      name += ' p-TabBar-tabIcon';\n      /* </DEPRECATED> */\n      let extra = data.title.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    private _tabID = 0;\n    private _tabKeys = new WeakMap<Title<any>, string>();\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export\n  const defaultRenderer = new Renderer();\n\n  /**\n   * A selector which matches the add button node in the tab bar.\n   */\n  export\n  const addButtonSelector = '.lm-TabBar-addButton';\n\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The start drag distance threshold.\n   */\n  export\n  const DRAG_THRESHOLD = 5;\n\n  /**\n   * The detach distance threshold.\n   */\n  export\n  const DETACH_THRESHOLD = 20;\n\n  /**\n   * A struct which holds the drag data for a tab bar.\n   */\n  export\n  interface IDragData {\n    /**\n     * The tab node being dragged.\n     */\n    tab: HTMLElement;\n\n    /**\n     * The index of the tab being dragged.\n     */\n    index: number;\n\n    /**\n     * The mouse press client X position.\n     */\n    pressX: number;\n\n    /**\n     * The mouse press client Y position.\n     */\n    pressY: number;\n\n    /**\n     * The offset left/top of the tab being dragged.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabPos: number;\n\n    /**\n     * The offset width/height of the tab being dragged.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabSize: number;\n\n    /**\n     * The original mouse X/Y position in tab coordinates.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabPressPos: number;\n\n    /**\n     * The tab target index upon mouse release.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    targetIndex: number;\n\n    /**\n     * The array of tab layout objects snapped at drag start.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    tabLayout: ITabLayout[] | null;\n\n    /**\n     * The bounding client rect of the tab bar content node.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    contentRect: ClientRect | null;\n\n    /**\n     * The disposable to clean up the cursor override.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    override: IDisposable | null;\n\n    /**\n     * Whether the drag is currently active.\n     */\n    dragActive: boolean;\n\n    /**\n     * Whether the drag has been aborted.\n     */\n    dragAborted: boolean;\n\n    /**\n     * Whether a detach request as been made.\n     */\n    detachRequested: boolean;\n  }\n\n  /**\n   * An object which holds layout data for a tab.\n   */\n  export\n  interface ITabLayout {\n    /**\n     * The left/top margin value for the tab.\n     */\n    margin: number;\n\n    /**\n     * The offset left/top position of the tab.\n     */\n    pos: number;\n\n    /**\n     * The offset width/height of the tab.\n     */\n    size: number;\n  }\n\n  /**\n   * Create the DOM node for a tab bar.\n   */\n  export\n  function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.setAttribute('role', 'tablist');\n    content.className = 'lm-TabBar-content';\n    /* <DEPRECATED> */\n    content.classList.add('p-TabBar-content');\n    /* </DEPRECATED> */\n    node.appendChild(content);\n\n    let add = document.createElement('div');\n    add.className = 'lm-TabBar-addButton lm-mod-hidden';\n    node.appendChild(add);\n    return node;\n  }\n\n  /**\n   * Coerce a title or options into a real title.\n   */\n  export\n  function asTitle<T>(value: Title<T> | Title.IOptions<T>): Title<T> {\n    return value instanceof Title ? value : new Title<T>(value);\n  }\n\n  /**\n   * Parse the transition duration for a tab node.\n   */\n  export\n  function parseTransitionDuration(tab: HTMLElement): number {\n    let style = window.getComputedStyle(tab);\n    return 1000 * (parseFloat(style.transitionDuration!) || 0);\n  }\n\n  /**\n   * Get a snapshot of the current tab layout values.\n   */\n  export\n  function snapTabLayout(tabs: HTMLCollection, orientation: TabBar.Orientation): ITabLayout[] {\n    let layout = new Array<ITabLayout>(tabs.length);\n    for (let i = 0, n = tabs.length; i < n; ++i) {\n      let node = tabs[i] as HTMLElement;\n      let style = window.getComputedStyle(node);\n      if (orientation === 'horizontal') {\n        layout[i] = {\n          pos: node.offsetLeft,\n          size: node.offsetWidth,\n          margin: parseFloat(style.marginLeft!) || 0\n        };\n      } else {\n        layout[i] = {\n          pos: node.offsetTop,\n          size: node.offsetHeight,\n          margin: parseFloat(style.marginTop!) || 0\n        };\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * Test if the event exceeds the drag threshold.\n   */\n  export\n  function dragExceeded(data: IDragData, event: MouseEvent): boolean {\n    let dx = Math.abs(event.clientX - data.pressX);\n    let dy = Math.abs(event.clientY - data.pressY);\n    return dx >= DRAG_THRESHOLD || dy >= DRAG_THRESHOLD;\n  }\n\n  /**\n   * Test if the event exceeds the drag detach threshold.\n   */\n  export\n  function detachExceeded(data: IDragData, event: MouseEvent): boolean {\n    let rect = data.contentRect!;\n    return (\n      (event.clientX < rect.left - DETACH_THRESHOLD) ||\n      (event.clientX >= rect.right + DETACH_THRESHOLD) ||\n      (event.clientY < rect.top - DETACH_THRESHOLD) ||\n      (event.clientY >= rect.bottom + DETACH_THRESHOLD)\n    );\n  }\n\n  /**\n   * Update the relative tab positions and computed target index.\n   */\n  export\n  function layoutTabs(tabs: HTMLCollection, data: IDragData, event: MouseEvent, orientation: TabBar.Orientation): void {\n    // Compute the orientation-sensitive values.\n    let pressPos: number;\n    let localPos: number;\n    let clientPos: number;\n    let clientSize: number;\n    if (orientation === 'horizontal') {\n      pressPos = data.pressX;\n      localPos = event.clientX - data.contentRect!.left;\n      clientPos = event.clientX;\n      clientSize = data.contentRect!.width;\n    } else {\n      pressPos = data.pressY;\n      localPos = event.clientY - data.contentRect!.top;\n      clientPos = event.clientY;\n      clientSize = data.contentRect!.height;\n    }\n\n    // Compute the target data.\n    let targetIndex = data.index;\n    let targetPos = localPos - data.tabPressPos;\n    let targetEnd = targetPos + data.tabSize;\n\n    // Update the relative tab positions.\n    for (let i = 0, n = tabs.length; i < n; ++i) {\n      let pxPos: string;\n      let layout = data.tabLayout![i];\n      let threshold = layout.pos + (layout.size >> 1);\n      if (i < data.index && targetPos < threshold) {\n        pxPos = `${data.tabSize + data.tabLayout![i + 1].margin}px`;\n        targetIndex = Math.min(targetIndex, i);\n      } else if (i > data.index && targetEnd > threshold) {\n        pxPos = `${-data.tabSize - layout.margin}px`;\n        targetIndex = Math.max(targetIndex, i);\n      } else if (i === data.index) {\n        let ideal = clientPos - pressPos;\n        let limit = clientSize - (data.tabPos + data.tabSize);\n        pxPos = `${Math.max(-data.tabPos, Math.min(ideal, limit))}px`;\n      } else {\n        pxPos = '';\n      }\n      if (orientation === 'horizontal') {\n        (tabs[i] as HTMLElement).style.left = pxPos;\n      } else {\n        (tabs[i] as HTMLElement).style.top = pxPos;\n      }\n    }\n\n    // Update the computed target index.\n    data.targetIndex = targetIndex;\n  }\n\n  /**\n   * Position the drag tab at its final resting relative position.\n   */\n  export\n  function finalizeTabPosition(data: IDragData, orientation: TabBar.Orientation): void {\n    // Compute the orientation-sensitive client size.\n    let clientSize: number;\n    if (orientation === 'horizontal') {\n      clientSize = data.contentRect!.width;\n    } else {\n      clientSize = data.contentRect!.height;\n    }\n\n    // Compute the ideal final tab position.\n    let ideal: number;\n    if (data.targetIndex === data.index) {\n      ideal = 0;\n    } else if (data.targetIndex > data.index) {\n      let tgt = data.tabLayout![data.targetIndex];\n      ideal = tgt.pos + tgt.size - data.tabSize - data.tabPos;\n    } else {\n      let tgt = data.tabLayout![data.targetIndex];\n      ideal = tgt.pos - data.tabPos;\n    }\n\n    // Compute the tab position limit.\n    let limit = clientSize - (data.tabPos + data.tabSize);\n    let final = Math.max(-data.tabPos, Math.min(ideal, limit));\n\n    // Set the final orientation-sensitive position.\n    if (orientation === 'horizontal') {\n      data.tab.style.left = `${final}px`;\n    } else {\n      data.tab.style.top = `${final}px`;\n    }\n  }\n\n  /**\n   * Reset the relative positions of the given tabs.\n   */\n  export\n  function resetTabPositions(tabs: HTMLCollection, orientation: TabBar.Orientation): void {\n    each(tabs, tab => {\n      if (orientation === 'horizontal') {\n        (tab as HTMLElement).style.left = '';\n      } else {\n        (tab as HTMLElement).style.top = '';\n      }\n    });\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, ChainIterator, IIterator, chain, each, empty, map, once, reduce\n} from '@lumino/algorithm';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  BoxEngine, BoxSizer\n} from './boxengine';\n\nimport {\n  Layout, LayoutItem\n} from './layout';\n\nimport {\n  TabBar\n} from './tabbar';\n\nimport Utils from './utils';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A layout which provides a flexible docking arrangement.\n *\n * #### Notes\n * The consumer of this layout is responsible for handling all signals\n * from the generated tab bars and managing the visibility of widgets\n * and tab bars as needed.\n */\nexport\nclass DockLayout extends Layout {\n  /**\n   * Construct a new dock layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: DockLayout.IOptions) {\n    super();\n    this.renderer = options.renderer;\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This will clear and dispose all widgets in the layout.\n   */\n  dispose(): void {\n    // Get an iterator over the widgets in the layout.\n    let widgets = this.iter();\n\n    // Dispose of the layout items.\n    this._items.forEach(item => { item.dispose(); });\n\n    // Clear the layout state before disposing the widgets.\n    this._box = null;\n    this._root = null;\n    this._items.clear();\n\n    // Dispose of the widgets contained in the old layout root.\n    each(widgets, widget => { widget.dispose(); });\n\n    // Dispose of the base class.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the dock layout.\n   */\n  readonly renderer: DockLayout.IRenderer;\n\n  /**\n   * Get the inter-element spacing for the dock layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the dock layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * Whether the dock layout is empty.\n   */\n  get isEmpty(): boolean {\n    return this._root === null;\n  }\n\n  /**\n   * Create an iterator over all widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   *\n   * #### Notes\n   * This iterator includes the generated tab bars.\n   */\n  iter(): IIterator<Widget> {\n    return this._root ? this._root.iterAllWidgets() : empty<Widget>();\n  }\n\n  /**\n   * Create an iterator over the user widgets in the layout.\n   *\n   * @returns A new iterator over the user widgets in the layout.\n   *\n   * #### Notes\n   * This iterator does not include the generated tab bars.\n   */\n  widgets(): IIterator<Widget> {\n    return this._root ? this._root.iterUserWidgets() : empty<Widget>();\n  }\n\n  /**\n   * Create an iterator over the selected widgets in the layout.\n   *\n   * @returns A new iterator over the selected user widgets.\n   *\n   * #### Notes\n   * This iterator yields the widgets corresponding to the current tab\n   * of each tab bar in the layout.\n   */\n  selectedWidgets(): IIterator<Widget> {\n    return this._root ? this._root.iterSelectedWidgets() : empty<Widget>();\n  }\n\n  /**\n   * Create an iterator over the tab bars in the layout.\n   *\n   * @returns A new iterator over the tab bars in the layout.\n   *\n   * #### Notes\n   * This iterator does not include the user widgets.\n   */\n  tabBars(): IIterator<TabBar<Widget>> {\n    return this._root ? this._root.iterTabBars() : empty<TabBar<Widget>>();\n  }\n\n  /**\n   * Create an iterator over the handles in the layout.\n   *\n   * @returns A new iterator over the handles in the layout.\n   */\n  handles(): IIterator<HTMLDivElement> {\n    return this._root ? this._root.iterHandles() : empty<HTMLDivElement>();\n  }\n\n  /**\n   * Move a handle to the given offset position.\n   *\n   * @param handle - The handle to move.\n   *\n   * @param offsetX - The desired offset X position of the handle.\n   *\n   * @param offsetY - The desired offset Y position of the handle.\n   *\n   * #### Notes\n   * If the given handle is not contained in the layout, this is no-op.\n   *\n   * The handle will be moved as close as possible to the desired\n   * position without violating any of the layout constraints.\n   *\n   * Only one of the coordinates is used depending on the orientation\n   * of the handle. This method accepts both coordinates to make it\n   * easy to invoke from a mouse move event without needing to know\n   * the handle orientation.\n   */\n  moveHandle(handle: HTMLDivElement, offsetX: number, offsetY: number): void {\n    // Bail early if there is no root or if the handle is hidden.\n    let hidden = handle.classList.contains('lm-mod-hidden');\n    /* <DEPRECATED> */\n    hidden = hidden || handle.classList.contains('p-mod-hidden');\n    /* </DEPRECATED> */\n    if (!this._root || hidden) {\n      return;\n    }\n\n    // Lookup the split node for the handle.\n    let data = this._root.findSplitNode(handle);\n    if (!data) {\n      return;\n    }\n\n    // Compute the desired delta movement for the handle.\n    let delta: number;\n    if (data.node.orientation === 'horizontal') {\n      delta = offsetX - handle.offsetLeft;\n    } else {\n      delta = offsetY - handle.offsetTop;\n    }\n\n    // Bail if there is no handle movement.\n    if (delta === 0) {\n      return;\n    }\n\n    // Prevent sibling resizing unless needed.\n    data.node.holdSizes();\n\n    // Adjust the sizers to reflect the handle movement.\n    BoxEngine.adjust(data.node.sizers, data.index, delta);\n\n    // Update the layout of the widgets.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Save the current configuration of the dock layout.\n   *\n   * @returns A new config object for the current layout state.\n   *\n   * #### Notes\n   * The return value can be provided to the `restoreLayout` method\n   * in order to restore the layout to its current configuration.\n   */\n  saveLayout(): DockLayout.ILayoutConfig {\n    // Bail early if there is no root.\n    if (!this._root) {\n      return { main: null };\n    }\n\n    // Hold the current sizes in the layout tree.\n    this._root.holdAllSizes();\n\n    // Return the layout config.\n    return { main: this._root.createConfig() };\n  }\n\n  /**\n   * Restore the layout to a previously saved configuration.\n   *\n   * @param config - The layout configuration to restore.\n   *\n   * #### Notes\n   * Widgets which currently belong to the layout but which are not\n   * contained in the config will be unparented.\n   */\n  restoreLayout(config: DockLayout.ILayoutConfig): void {\n    // Create the widget set for validating the config.\n    let widgetSet = new Set<Widget>();\n\n    // Normalize the main area config and collect the widgets.\n    let mainConfig: DockLayout.AreaConfig | null;\n    if (config.main) {\n      mainConfig = Private.normalizeAreaConfig(config.main, widgetSet);\n    } else {\n      mainConfig = null;\n    }\n\n    // Create iterators over the old content.\n    let oldWidgets = this.widgets();\n    let oldTabBars = this.tabBars();\n    let oldHandles = this.handles();\n\n    // Clear the root before removing the old content.\n    this._root = null;\n\n    // Unparent the old widgets which are not in the new config.\n    each(oldWidgets, widget => {\n      if (!widgetSet.has(widget)) {\n        widget.parent = null;\n      }\n    });\n\n    // Dispose of the old tab bars.\n    each(oldTabBars, tabBar => {\n      tabBar.dispose();\n    });\n\n    // Remove the old handles.\n    each(oldHandles, handle => {\n      if (handle.parentNode) {\n        handle.parentNode.removeChild(handle);\n      }\n    });\n\n    // Reparent the new widgets to the current parent.\n    widgetSet.forEach(widget => {\n      widget.parent = this.parent;\n    });\n\n    // Create the root node for the new config.\n    if (mainConfig) {\n      this._root = Private.realizeAreaConfig(mainConfig, {\n        createTabBar: () => this._createTabBar(),\n        createHandle: () => this._createHandle()\n      });\n    } else {\n      this._root = null;\n    }\n\n    // If there is no parent, there is nothing more to do.\n    if (!this.parent) {\n      return;\n    }\n\n    // Attach the new widgets to the parent.\n    widgetSet.forEach(widget => {\n      this.attachWidget(widget);\n    });\n\n    // Post a fit request to the parent.\n    this.parent.fit();\n  }\n\n  /**\n   * Add a widget to the dock layout.\n   *\n   * @param widget - The widget to add to the dock layout.\n   *\n   * @param options - The additional options for adding the widget.\n   *\n   * #### Notes\n   * The widget will be moved if it is already contained in the layout.\n   *\n   * An error will be thrown if the reference widget is invalid.\n   */\n  addWidget(widget: Widget, options: DockLayout.IAddOptions = {}): void {\n    // Parse the options.\n    let ref = options.ref || null;\n    let mode = options.mode || 'tab-after';\n\n    // Find the tab node which holds the reference widget.\n    let refNode: Private.TabLayoutNode | null = null;\n    if (this._root && ref) {\n      refNode = this._root.findTabNode(ref);\n    }\n\n    // Throw an error if the reference widget is invalid.\n    if (ref && !refNode) {\n      throw new Error('Reference widget is not in the layout.');\n    }\n\n    // Reparent the widget to the current layout parent.\n    widget.parent = this.parent;\n\n    // Insert the widget according to the insert mode.\n    switch (mode) {\n    case 'tab-after':\n      this._insertTab(widget, ref, refNode, true);\n      break;\n    case 'tab-before':\n      this._insertTab(widget, ref, refNode, false);\n      break;\n    case 'split-top':\n      this._insertSplit(widget, ref, refNode, 'vertical', false);\n      break;\n    case 'split-left':\n      this._insertSplit(widget, ref, refNode, 'horizontal', false);\n      break;\n    case 'split-right':\n      this._insertSplit(widget, ref, refNode, 'horizontal', true);\n      break;\n    case 'split-bottom':\n      this._insertSplit(widget, ref, refNode, 'vertical', true);\n      break;\n    }\n\n    // Do nothing else if there is no parent widget.\n    if (!this.parent) {\n      return;\n    }\n\n    // Ensure the widget is attached to the parent widget.\n    this.attachWidget(widget);\n\n    // Post a fit request for the parent widget.\n    this.parent.fit();\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Remove the widget from its current layout location.\n    this._removeWidget(widget);\n\n    // Do nothing else if there is no parent widget.\n    if (!this.parent) {\n      return;\n    }\n\n    // Detach the widget from the parent widget.\n    this.detachWidget(widget);\n\n    // Post a fit request for the parent widget.\n    this.parent.fit();\n  }\n\n  /**\n   * Find the tab area which contains the given client position.\n   *\n   * @param clientX - The client X position of interest.\n   *\n   * @param clientY - The client Y position of interest.\n   *\n   * @returns The geometry of the tab area at the given position, or\n   *   `null` if there is no tab area at the given position.\n   */\n  hitTestTabAreas(clientX: number, clientY: number): DockLayout.ITabAreaGeometry | null {\n    // Bail early if hit testing cannot produce valid results.\n    if (!this._root || !this.parent || !this.parent.isVisible) {\n      return null;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent.node);\n    }\n\n    // Convert from client to local coordinates.\n    let rect = this.parent.node.getBoundingClientRect();\n    let x = clientX - rect.left - this._box.borderLeft;\n    let y = clientY - rect.top - this._box.borderTop;\n\n    // Find the tab layout node at the local position.\n    let tabNode = this._root.hitTestTabNodes(x, y);\n\n    // Bail if a tab layout node was not found.\n    if (!tabNode) {\n      return null;\n    }\n\n    // Extract the data from the tab node.\n    let { tabBar, top, left, width, height } = tabNode;\n\n    // Compute the right and bottom edges of the tab area.\n    let borderWidth = this._box.borderLeft + this._box.borderRight;\n    let borderHeight = this._box.borderTop + this._box.borderBottom;\n    let right = rect.width - borderWidth - (left + width);\n    let bottom = rect.height - borderHeight - (top + height);\n\n    // Return the hit test results.\n    return { tabBar, x, y, top, left, right, bottom, width, height };\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    // Perform superclass initialization.\n    super.init();\n\n    // Attach each widget to the parent.\n    each(this, widget => { this.attachWidget(widget); });\n\n    // Attach each handle to the parent.\n    each(this.handles(), handle => { this.parent!.node.appendChild(handle); });\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Attach the widget to the layout parent widget.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a no-op if the widget is already attached.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Do nothing if the widget is already attached.\n    if (this.parent!.node === widget.node.parentNode) {\n      return;\n    }\n\n    // Create the layout item for the widget.\n    this._items.set(widget, new LayoutItem(widget));\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach the widget from the layout parent widget.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a no-op if the widget is not attached.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Do nothing if the widget is not attached.\n    if (this.parent!.node !== widget.node.parentNode) {\n      return;\n    }\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Delete the layout item for the widget.\n    let item = this._items.get(widget);\n    if (item) {\n      this._items.delete(widget);\n      item.dispose();\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Remove the specified widget from the layout structure.\n   *\n   * #### Notes\n   * This is a no-op if the widget is not in the layout tree.\n   *\n   * This does not detach the widget from the parent node.\n   */\n  private _removeWidget(widget: Widget): void {\n    // Bail early if there is no layout root.\n    if (!this._root) {\n      return;\n    }\n\n    // Find the tab node which contains the given widget.\n    let tabNode = this._root.findTabNode(widget);\n\n    // Bail early if the tab node is not found.\n    if (!tabNode) {\n      return;\n    }\n\n    Private.removeAria(widget);\n\n    // If there are multiple tabs, just remove the widget's tab.\n    if (tabNode.tabBar.titles.length > 1) {\n      tabNode.tabBar.removeTab(widget.title);\n      return;\n    }\n\n    // Otherwise, the tab node needs to be removed...\n\n    // Dispose the tab bar.\n    tabNode.tabBar.dispose();\n\n    // Handle the case where the tab node is the root.\n    if (this._root === tabNode) {\n      this._root = null;\n      return;\n    }\n\n    // Otherwise, remove the tab node from its parent...\n\n    // Prevent widget resizing unless needed.\n    this._root.holdAllSizes();\n\n    // Clear the parent reference on the tab node.\n    let splitNode = tabNode.parent!;\n    tabNode.parent = null;\n\n    // Remove the tab node from its parent split node.\n    let i = ArrayExt.removeFirstOf(splitNode.children, tabNode);\n    let handle = ArrayExt.removeAt(splitNode.handles, i)!;\n    ArrayExt.removeAt(splitNode.sizers, i);\n\n    // Remove the handle from its parent DOM node.\n    if (handle.parentNode) {\n      handle.parentNode.removeChild(handle);\n    }\n\n    // If there are multiple children, just update the handles.\n    if (splitNode.children.length > 1) {\n      splitNode.syncHandles();\n      return;\n    }\n\n    // Otherwise, the split node also needs to be removed...\n\n    // Clear the parent reference on the split node.\n    let maybeParent = splitNode.parent;\n    splitNode.parent = null;\n\n    // Lookup the remaining child node and handle.\n    let childNode = splitNode.children[0];\n    let childHandle = splitNode.handles[0];\n\n    // Clear the split node data.\n    splitNode.children.length = 0;\n    splitNode.handles.length = 0;\n    splitNode.sizers.length = 0;\n\n    // Remove the child handle from its parent node.\n    if (childHandle.parentNode) {\n      childHandle.parentNode.removeChild(childHandle);\n    }\n\n    // Handle the case where the split node is the root.\n    if (this._root === splitNode) {\n      childNode.parent = null;\n      this._root = childNode;\n      return;\n    }\n\n    // Otherwise, move the child node to the parent node...\n    let parentNode = maybeParent!;\n\n    // Lookup the index of the split node.\n    let j = parentNode.children.indexOf(splitNode);\n\n    // Handle the case where the child node is a tab node.\n    if (childNode instanceof Private.TabLayoutNode) {\n      childNode.parent = parentNode;\n      parentNode.children[j] = childNode;\n      return;\n    }\n\n    // Remove the split data from the parent.\n    let splitHandle = ArrayExt.removeAt(parentNode.handles, j)!;\n    ArrayExt.removeAt(parentNode.children, j);\n    ArrayExt.removeAt(parentNode.sizers, j);\n\n    // Remove the handle from its parent node.\n    if (splitHandle.parentNode) {\n      splitHandle.parentNode.removeChild(splitHandle);\n    }\n\n    // The child node and the split parent node will have the same\n    // orientation. Merge the grand-children with the parent node.\n    for (let i = 0, n = childNode.children.length; i < n; ++i) {\n      let gChild = childNode.children[i];\n      let gHandle = childNode.handles[i];\n      let gSizer = childNode.sizers[i];\n      ArrayExt.insert(parentNode.children, j + i, gChild);\n      ArrayExt.insert(parentNode.handles, j + i, gHandle);\n      ArrayExt.insert(parentNode.sizers, j + i, gSizer);\n      gChild.parent = parentNode;\n    }\n\n    // Clear the child node.\n    childNode.children.length = 0;\n    childNode.handles.length = 0;\n    childNode.sizers.length = 0;\n    childNode.parent = null;\n\n    // Sync the handles on the parent node.\n    parentNode.syncHandles();\n  }\n\n  /**\n   * Insert a widget next to an existing tab.\n   *\n   * #### Notes\n   * This does not attach the widget to the parent widget.\n   */\n  private _insertTab(widget: Widget, ref: Widget | null, refNode: Private.TabLayoutNode | null, after: boolean): void {\n    // Do nothing if the tab is inserted next to itself.\n    if (widget === ref) {\n      return;\n    }\n\n    // Create the root if it does not exist.\n    if (!this._root) {\n      let tabNode = new Private.TabLayoutNode(this._createTabBar());\n      tabNode.tabBar.addTab(widget.title);\n      this._root = tabNode;\n      Private.addAria(widget, tabNode.tabBar);\n      return;\n    }\n\n    // Use the first tab node as the ref node if needed.\n    if (!refNode) {\n      refNode = this._root.findFirstTabNode()!;\n    }\n\n    // If the widget is not contained in the ref node, ensure it is\n    // removed from the layout and hidden before being added again.\n    if (refNode.tabBar.titles.indexOf(widget.title) === -1) {\n      this._removeWidget(widget);\n      widget.hide();\n    }\n\n    // Lookup the target index for inserting the tab.\n    let index: number;\n    if (ref) {\n      index = refNode.tabBar.titles.indexOf(ref.title);\n    } else {\n      index = refNode.tabBar.currentIndex;\n    }\n\n    // Insert the widget's tab relative to the target index.\n    refNode.tabBar.insertTab(index + (after ? 1 : 0), widget.title);\n    Private.addAria(widget, refNode.tabBar);\n  }\n\n  /**\n   * Insert a widget as a new split area.\n   *\n   * #### Notes\n   * This does not attach the widget to the parent widget.\n   */\n  private _insertSplit(widget: Widget, ref: Widget | null, refNode: Private.TabLayoutNode | null, orientation: Private.Orientation, after: boolean): void {\n    // Do nothing if there is no effective split.\n    if (widget === ref && refNode && refNode.tabBar.titles.length === 1) {\n      return;\n    }\n\n    // Ensure the widget is removed from the current layout.\n    this._removeWidget(widget);\n\n    // Create the tab layout node to hold the widget.\n    let tabNode = new Private.TabLayoutNode(this._createTabBar());\n    tabNode.tabBar.addTab(widget.title);\n    Private.addAria(widget, tabNode.tabBar);\n\n    // Set the root if it does not exist.\n    if (!this._root) {\n      this._root = tabNode;\n      return;\n    }\n\n    // If the ref node parent is null, split the root.\n    if (!refNode || !refNode.parent) {\n      // Ensure the root is split with the correct orientation.\n      let root = this._splitRoot(orientation);\n\n      // Determine the insert index for the new tab node.\n      let i = after ? root.children.length : 0;\n\n      // Normalize the split node.\n      root.normalizeSizes();\n\n      // Create the sizer for new tab node.\n      let sizer = Private.createSizer(refNode ? 1 : Private.GOLDEN_RATIO);\n\n      // Insert the tab node sized to the golden ratio.\n      ArrayExt.insert(root.children, i, tabNode);\n      ArrayExt.insert(root.sizers, i, sizer);\n      ArrayExt.insert(root.handles, i, this._createHandle());\n      tabNode.parent = root;\n\n      // Re-normalize the split node to maintain the ratios.\n      root.normalizeSizes();\n\n      // Finally, synchronize the visibility of the handles.\n      root.syncHandles();\n      return;\n    }\n\n    // Lookup the split node for the ref widget.\n    let splitNode = refNode.parent;\n\n    // If the split node already had the correct orientation,\n    // the widget can be inserted into the split node directly.\n    if (splitNode.orientation === orientation) {\n      // Find the index of the ref node.\n      let i = splitNode.children.indexOf(refNode);\n\n      // Normalize the split node.\n      splitNode.normalizeSizes();\n\n      // Consume half the space for the insert location.\n      let s = splitNode.sizers[i].sizeHint /= 2;\n\n      // Insert the tab node sized to the other half.\n      let j = i + (after ? 1 : 0);\n      ArrayExt.insert(splitNode.children, j, tabNode);\n      ArrayExt.insert(splitNode.sizers, j, Private.createSizer(s));\n      ArrayExt.insert(splitNode.handles, j, this._createHandle());\n      tabNode.parent = splitNode;\n\n      // Finally, synchronize the visibility of the handles.\n      splitNode.syncHandles();\n      return;\n    }\n\n    // Remove the ref node from the split node.\n    let i = ArrayExt.removeFirstOf(splitNode.children, refNode);\n\n    // Create a new normalized split node for the children.\n    let childNode = new Private.SplitLayoutNode(orientation);\n    childNode.normalized = true;\n\n    // Add the ref node sized to half the space.\n    childNode.children.push(refNode);\n    childNode.sizers.push(Private.createSizer(0.5));\n    childNode.handles.push(this._createHandle());\n    refNode.parent = childNode;\n\n    // Add the tab node sized to the other half.\n    let j = after ? 1 : 0;\n    ArrayExt.insert(childNode.children, j, tabNode);\n    ArrayExt.insert(childNode.sizers, j, Private.createSizer(0.5));\n    ArrayExt.insert(childNode.handles, j, this._createHandle());\n    tabNode.parent = childNode;\n\n    // Synchronize the visibility of the handles.\n    childNode.syncHandles();\n\n    // Finally, add the new child node to the original split node.\n    ArrayExt.insert(splitNode.children, i, childNode);\n    childNode.parent = splitNode;\n  }\n\n  /**\n   * Ensure the root is a split node with the given orientation.\n   */\n  private _splitRoot(orientation: Private.Orientation): Private.SplitLayoutNode {\n    // Bail early if the root already meets the requirements.\n    let oldRoot = this._root;\n    if (oldRoot instanceof Private.SplitLayoutNode) {\n      if (oldRoot.orientation === orientation) {\n        return oldRoot;\n      }\n    }\n\n    // Create a new root node with the specified orientation.\n    let newRoot = this._root = new Private.SplitLayoutNode(orientation);\n\n    // Add the old root to the new root.\n    if (oldRoot) {\n      newRoot.children.push(oldRoot);\n      newRoot.sizers.push(Private.createSizer(0));\n      newRoot.handles.push(this._createHandle());\n      oldRoot.parent = newRoot;\n    }\n\n    // Return the new root as a convenience.\n    return newRoot;\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Set up the computed minimum size.\n    let minW = 0;\n    let minH = 0;\n\n    // Update the size limits for the layout tree.\n    if (this._root) {\n      let limits = this._root.fit(this._spacing, this._items);\n      minW = limits.minWidth;\n      minH = limits.minHeight;\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = this._box = ElementExt.boxSizing(this.parent!.node);\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Bail early if there is no root layout node.\n    if (!this._root) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let x = this._box.paddingTop;\n    let y = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Update the geometry of the layout tree.\n    this._root.update(x, y, width, height, this._spacing, this._items);\n  }\n\n  /**\n   * Create a new tab bar for use by the dock layout.\n   *\n   * #### Notes\n   * The tab bar will be attached to the parent if it exists.\n   */\n  private _createTabBar(): TabBar<Widget> {\n    // Create the tab bar using the renderer.\n    let tabBar = this.renderer.createTabBar();\n\n    // Enforce necessary tab bar behavior.\n    tabBar.orientation = 'horizontal';\n\n    // Reparent and attach the tab bar to the parent if possible.\n    if (this.parent) {\n      tabBar.parent = this.parent;\n      this.attachWidget(tabBar);\n    }\n\n    // Return the initialized tab bar.\n    return tabBar;\n  }\n\n  /**\n   * Create a new handle for the dock layout.\n   *\n   * #### Notes\n   * The handle will be attached to the parent if it exists.\n   */\n  private _createHandle(): HTMLDivElement {\n    // Create the handle using the renderer.\n    let handle = this.renderer.createHandle();\n\n    // Initialize the handle layout behavior.\n    let style = handle.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n    style.width = '0';\n    style.height = '0';\n\n    // Attach the handle to the parent if it exists.\n    if (this.parent) {\n      this.parent.node.appendChild(handle);\n    }\n\n    // Return the initialized handle.\n    return handle;\n  }\n\n  private _spacing = 4;\n  private _dirty = false;\n  private _root: Private.LayoutNode | null = null;\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _items: Private.ItemMap = new Map<Widget, LayoutItem>();\n}\n\n\n/**\n * The namespace for the `DockLayout` class statics.\n */\nexport\nnamespace DockLayout {\n  /**\n   * An options object for creating a dock layout.\n   */\n  export\n  interface IOptions {\n    /**\n     * The renderer to use for the dock layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * A renderer for use with a dock layout.\n   */\n  export\n  interface IRenderer {\n    /**\n     * Create a new tab bar for use with a dock layout.\n     *\n     * @returns A new tab bar for a dock layout.\n     */\n    createTabBar(): TabBar<Widget>;\n\n    /**\n     * Create a new handle node for use with a dock layout.\n     *\n     * @returns A new handle node for a dock layout.\n     */\n    createHandle(): HTMLDivElement;\n  }\n\n  /**\n   * A type alias for the supported insertion modes.\n   *\n   * An insert mode is used to specify how a widget should be added\n   * to the dock layout relative to a reference widget.\n   */\n  export\n  type InsertMode = (\n    /**\n     * The area to the top of the reference widget.\n     *\n     * The widget will be inserted just above the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the top edge of the dock layout.\n     */\n    'split-top' |\n\n    /**\n     * The area to the left of the reference widget.\n     *\n     * The widget will be inserted just left of the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the left edge of the dock layout.\n     */\n    'split-left' |\n\n    /**\n     * The area to the right of the reference widget.\n     *\n     * The widget will be inserted just right of the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted  at the right edge of the dock layout.\n     */\n    'split-right' |\n\n    /**\n     * The area to the bottom of the reference widget.\n     *\n     * The widget will be inserted just below the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the bottom edge of the dock layout.\n     */\n    'split-bottom' |\n\n    /**\n     * The tab position before the reference widget.\n     *\n     * The widget will be added as a tab before the reference widget.\n     *\n     * If the reference widget is null or invalid, a sensible default\n     * will be used.\n     */\n    'tab-before' |\n\n    /**\n     * The tab position after the reference widget.\n     *\n     * The widget will be added as a tab after the reference widget.\n     *\n     * If the reference widget is null or invalid, a sensible default\n     * will be used.\n     */\n    'tab-after'\n  );\n\n  /**\n   * An options object for adding a widget to the dock layout.\n   */\n  export\n  interface IAddOptions {\n    /**\n     * The insertion mode for adding the widget.\n     *\n     * The default is `'tab-after'`.\n     */\n    mode?: InsertMode;\n\n    /**\n     * The reference widget for the insert location.\n     *\n     * The default is `null`.\n     */\n    ref?: Widget | null;\n  }\n\n  /**\n   * A layout config object for a tab area.\n   */\n  export\n  interface ITabAreaConfig {\n    /**\n     * The discriminated type of the config object.\n     */\n    type: 'tab-area';\n\n    /**\n     * The widgets contained in the tab area.\n     */\n    widgets: Widget[];\n\n    /**\n     * The index of the selected tab.\n     */\n    currentIndex: number;\n  }\n\n  /**\n   * A layout config object for a split area.\n   */\n  export\n  interface ISplitAreaConfig {\n    /**\n     * The discriminated type of the config object.\n     */\n    type: 'split-area';\n\n    /**\n     * The orientation of the split area.\n     */\n    orientation: 'horizontal' | 'vertical';\n\n    /**\n     * The children in the split area.\n     */\n    children: AreaConfig[];\n\n    /**\n     * The relative sizes of the children.\n     */\n    sizes: number[];\n  }\n\n  /**\n   * A type alias for a general area config.\n   */\n  export\n  type AreaConfig = ITabAreaConfig | ISplitAreaConfig;\n\n  /**\n   * A dock layout configuration object.\n   */\n  export\n  interface ILayoutConfig {\n    /**\n     * The layout config for the main dock area.\n     */\n    main: AreaConfig | null;\n  }\n\n  /**\n   * An object which represents the geometry of a tab area.\n   */\n  export\n  interface ITabAreaGeometry {\n    /**\n     * The tab bar for the tab area.\n     */\n    tabBar: TabBar<Widget>;\n\n    /**\n     * The local X position of the hit test in the dock area.\n     *\n     * #### Notes\n     * This is the distance from the left edge of the layout parent\n     * widget, to the local X coordinate of the hit test query.\n     */\n    x: number;\n\n    /**\n     * The local Y position of the hit test in the dock area.\n     *\n     * #### Notes\n     * This is the distance from the top edge of the layout parent\n     * widget, to the local Y coordinate of the hit test query.\n     */\n    y: number;\n\n    /**\n     * The local coordinate of the top edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the top edge of the layout parent\n     * widget, to the top edge of the tab area.\n     */\n    top: number;\n\n    /**\n     * The local coordinate of the left edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the left edge of the layout parent\n     * widget, to the left edge of the tab area.\n     */\n    left: number;\n\n    /**\n     * The local coordinate of the right edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the right edge of the layout parent\n     * widget, to the right edge of the tab area.\n     */\n    right: number;\n\n    /**\n     * The local coordinate of the bottom edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the bottom edge of the layout parent\n     * widget, to the bottom edge of the tab area.\n     */\n    bottom: number;\n\n    /**\n     * The width of the tab area.\n     *\n     * #### Notes\n     * This is total width allocated for the tab area.\n     */\n    width: number;\n\n    /**\n     * The height of the tab area.\n     *\n     * #### Notes\n     * This is total height allocated for the tab area.\n     */\n    height: number;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\n   */\n  export\n  const GOLDEN_RATIO = 0.618;\n\n  /**\n   * A type alias for a dock layout node.\n   */\n  export\n  type LayoutNode = TabLayoutNode | SplitLayoutNode;\n\n  /**\n   * A type alias for the orientation of a split layout node.\n   */\n  export\n  type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * A type alias for a layout item map.\n   */\n  export\n  type ItemMap = Map<Widget, LayoutItem>;\n\n  /**\n   * Create a box sizer with an initial size hint.\n   */\n  export\n  function createSizer(hint: number): BoxSizer {\n    let sizer = new BoxSizer();\n    sizer.sizeHint = hint;\n    sizer.size = hint;\n    return sizer;\n  }\n\n  /**\n   * Normalize an area config object and collect the visited widgets.\n   */\n  export\n  function normalizeAreaConfig(config: DockLayout.AreaConfig, widgetSet: Set<Widget>): DockLayout.AreaConfig | null {\n    let result: DockLayout.AreaConfig | null;\n    if (config.type === 'tab-area') {\n      result = normalizeTabAreaConfig(config, widgetSet);\n    } else {\n      result = normalizeSplitAreaConfig(config, widgetSet);\n    }\n    return result;\n  }\n\n  /**\n   * Convert a normalized area config into a layout tree.\n   */\n  export\n  function realizeAreaConfig(config: DockLayout.AreaConfig, renderer: DockLayout.IRenderer): LayoutNode {\n    let node: LayoutNode;\n    if (config.type === 'tab-area') {\n      node = realizeTabAreaConfig(config, renderer);\n    } else {\n      node = realizeSplitAreaConfig(config, renderer);\n    }\n    return node;\n  }\n\n  /**\n   * A layout node which holds the data for a tabbed area.\n   */\n  export\n  class TabLayoutNode {\n    /**\n     * Construct a new tab layout node.\n     *\n     * @param tabBar - The tab bar to use for the layout node.\n     */\n    constructor(tabBar: TabBar<Widget>) {\n      let tabSizer = new BoxSizer();\n      let widgetSizer = new BoxSizer();\n      tabSizer.stretch = 0;\n      widgetSizer.stretch = 1;\n      this.tabBar = tabBar;\n      this.sizers = [tabSizer, widgetSizer];\n    }\n\n    /**\n     * The parent of the layout node.\n     */\n    parent: SplitLayoutNode | null = null;\n\n    /**\n     * The tab bar for the layout node.\n     */\n    readonly tabBar: TabBar<Widget>;\n\n    /**\n     * The sizers for the layout node.\n     */\n    readonly sizers: [BoxSizer, BoxSizer];\n\n    /**\n     * The most recent value for the `top` edge of the layout box.\n     */\n    get top(): number {\n      return this._top;\n    }\n\n    /**\n     * The most recent value for the `left` edge of the layout box.\n     */\n    get left(): number {\n      return this._left;\n    }\n\n    /**\n     * The most recent value for the `width` of the layout box.\n     */\n    get width(): number {\n      return this._width;\n    }\n\n    /**\n     * The most recent value for the `height` of the layout box.\n     */\n    get height(): number {\n      return this._height;\n    }\n\n    /**\n     * Create an iterator for all widgets in the layout tree.\n     */\n    iterAllWidgets(): IIterator<Widget> {\n      return chain(once(this.tabBar), this.iterUserWidgets());\n    }\n\n    /**\n     * Create an iterator for the user widgets in the layout tree.\n     */\n    iterUserWidgets(): IIterator<Widget> {\n      return map(this.tabBar.titles, title => title.owner);\n    }\n\n    /**\n     * Create an iterator for the selected widgets in the layout tree.\n     */\n    iterSelectedWidgets(): IIterator<Widget> {\n      let title = this.tabBar.currentTitle;\n      return title ? once(title.owner) : empty<Widget>();\n    }\n\n    /**\n     * Create an iterator for the tab bars in the layout tree.\n     */\n    iterTabBars(): IIterator<TabBar<Widget>> {\n      return once(this.tabBar);\n    }\n\n    /**\n     * Create an iterator for the handles in the layout tree.\n     */\n    iterHandles(): IIterator<HTMLDivElement> {\n      return empty<HTMLDivElement>();\n    }\n\n    /**\n     * Find the tab layout node which contains the given widget.\n     */\n    findTabNode(widget: Widget): TabLayoutNode | null {\n      return this.tabBar.titles.indexOf(widget.title) !== -1 ? this : null;\n    }\n\n    /**\n     * Find the split layout node which contains the given handle.\n     */\n    findSplitNode(handle: HTMLDivElement): { index: number, node: SplitLayoutNode } | null {\n      return null;\n    }\n\n    /**\n     * Find the first tab layout node in a layout tree.\n     */\n    findFirstTabNode(): TabLayoutNode | null {\n      return this;\n    }\n\n    /**\n     * Find the tab layout node which contains the local point.\n     */\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\n      if (x < this._left || x >= this._left + this._width) {\n        return null;\n      }\n      if (y < this._top || y >= this._top + this._height) {\n        return null;\n      }\n      return this;\n    }\n\n    /**\n     * Create a configuration object for the layout tree.\n     */\n    createConfig(): DockLayout.ITabAreaConfig {\n      let widgets = this.tabBar.titles.map(title => title.owner);\n      let currentIndex = this.tabBar.currentIndex;\n      return { type: 'tab-area', widgets, currentIndex };\n    }\n\n    /**\n     * Recursively hold all of the sizes in the layout tree.\n     *\n     * This ignores the sizers of tab layout nodes.\n     */\n    holdAllSizes(): void {\n      return;\n    }\n\n    /**\n     * Fit the layout tree.\n     */\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\n      // Set up the limit variables.\n      let minWidth = 0;\n      let minHeight = 0;\n      let maxWidth = Infinity;\n      let maxHeight = Infinity;\n\n      // Lookup the tab bar layout item.\n      let tabBarItem = items.get(this.tabBar);\n\n      // Lookup the widget layout item.\n      let current = this.tabBar.currentTitle;\n      let widgetItem = current ? items.get(current.owner) : undefined;\n\n      // Lookup the tab bar and widget sizers.\n      let [tabBarSizer, widgetSizer] = this.sizers;\n\n      // Update the tab bar limits.\n      if (tabBarItem) {\n        tabBarItem.fit();\n      }\n\n      // Update the widget limits.\n      if (widgetItem) {\n        widgetItem.fit();\n      }\n\n      // Update the results and sizer for the tab bar.\n      if (tabBarItem && !tabBarItem.isHidden) {\n        minWidth = Math.max(minWidth, tabBarItem.minWidth);\n        minHeight += tabBarItem.minHeight;\n        tabBarSizer.minSize = tabBarItem.minHeight;\n        tabBarSizer.maxSize = tabBarItem.maxHeight;\n      } else {\n        tabBarSizer.minSize = 0;\n        tabBarSizer.maxSize = 0;\n      }\n\n      // Update the results and sizer for the current widget.\n      if (widgetItem && !widgetItem.isHidden) {\n        minWidth = Math.max(minWidth, widgetItem.minWidth);\n        minHeight += widgetItem.minHeight;\n        widgetSizer.minSize = widgetItem.minHeight;\n        widgetSizer.maxSize = Infinity;\n      } else {\n        widgetSizer.minSize = 0;\n        widgetSizer.maxSize = Infinity;\n      }\n\n      // Return the computed size limits for the layout node.\n      return { minWidth, minHeight, maxWidth, maxHeight };\n    }\n\n    /**\n     * Update the layout tree.\n     */\n    update(left: number, top: number, width: number, height: number, spacing: number, items: ItemMap): void {\n      // Update the layout box values.\n      this._top = top;\n      this._left = left;\n      this._width = width;\n      this._height = height;\n\n      // Lookup the tab bar layout item.\n      let tabBarItem = items.get(this.tabBar);\n\n      // Lookup the widget layout item.\n      let current = this.tabBar.currentTitle;\n      let widgetItem = current ? items.get(current.owner) : undefined;\n\n      // Distribute the layout space to the sizers.\n      BoxEngine.calc(this.sizers, height);\n\n      // Update the tab bar item using the computed size.\n      if (tabBarItem && !tabBarItem.isHidden) {\n        let size = this.sizers[0].size;\n        tabBarItem.update(left, top, width, size);\n        top += size;\n      }\n\n      // Layout the widget using the computed size.\n      if (widgetItem && !widgetItem.isHidden) {\n        let size = this.sizers[1].size;\n        widgetItem.update(left, top, width, size);\n      }\n    }\n\n    private _top = 0;\n    private _left = 0;\n    private _width = 0;\n    private _height = 0;\n  }\n\n  /**\n   * A layout node which holds the data for a split area.\n   */\n  export\n  class SplitLayoutNode {\n    /**\n     * Construct a new split layout node.\n     *\n     * @param orientation - The orientation of the node.\n     */\n    constructor(orientation: Orientation) {\n      this.orientation = orientation;\n    }\n\n    /**\n     * The parent of the layout node.\n     */\n    parent: SplitLayoutNode | null = null;\n\n    /**\n     * Whether the sizers have been normalized.\n     */\n    normalized = false;\n\n    /**\n     * The orientation of the node.\n     */\n    readonly orientation: Orientation;\n\n    /**\n     * The child nodes for the split node.\n     */\n    readonly children: LayoutNode[] = [];\n\n    /**\n     * The box sizers for the layout children.\n     */\n    readonly sizers: BoxSizer[] = [];\n\n    /**\n     * The handles for the layout children.\n     */\n    readonly handles: HTMLDivElement[] = [];\n\n    /**\n     * Create an iterator for all widgets in the layout tree.\n     */\n    iterAllWidgets(): IIterator<Widget> {\n      let children = map(this.children, child => child.iterAllWidgets());\n      return new ChainIterator<Widget>(children);\n    }\n\n    /**\n     * Create an iterator for the user widgets in the layout tree.\n     */\n    iterUserWidgets(): IIterator<Widget> {\n      let children = map(this.children, child => child.iterUserWidgets());\n      return new ChainIterator<Widget>(children);\n    }\n\n    /**\n     * Create an iterator for the selected widgets in the layout tree.\n     */\n    iterSelectedWidgets(): IIterator<Widget> {\n      let children = map(this.children, child => child.iterSelectedWidgets());\n      return new ChainIterator<Widget>(children);\n    }\n\n    /**\n     * Create an iterator for the tab bars in the layout tree.\n     */\n    iterTabBars(): IIterator<TabBar<Widget>> {\n      let children = map(this.children, child => child.iterTabBars());\n      return new ChainIterator<TabBar<Widget>>(children);\n    }\n\n    /**\n     * Create an iterator for the handles in the layout tree.\n     */\n    iterHandles(): IIterator<HTMLDivElement> {\n      let children = map(this.children, child => child.iterHandles());\n      return chain(this.handles, new ChainIterator<HTMLDivElement>(children));\n    }\n\n    /**\n     * Find the tab layout node which contains the given widget.\n     */\n    findTabNode(widget: Widget): TabLayoutNode | null {\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].findTabNode(widget);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find the split layout node which contains the given handle.\n     */\n    findSplitNode(handle: HTMLDivElement): { index: number, node: SplitLayoutNode } | null {\n      let index = this.handles.indexOf(handle);\n      if (index !== -1) {\n        return { index, node: this };\n      }\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].findSplitNode(handle);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find the first tab layout node in a layout tree.\n     */\n    findFirstTabNode(): TabLayoutNode | null {\n      if (this.children.length === 0) {\n        return null;\n      }\n      return this.children[0].findFirstTabNode();\n    }\n\n    /**\n     * Find the tab layout node which contains the local point.\n     */\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].hitTestTabNodes(x, y);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Create a configuration object for the layout tree.\n     */\n    createConfig(): DockLayout.ISplitAreaConfig {\n      let orientation = this.orientation;\n      let sizes = this.createNormalizedSizes();\n      let children = this.children.map(child => child.createConfig());\n      return { type: 'split-area', orientation, children, sizes };\n    }\n\n    /**\n     * Sync the visibility and orientation of the handles.\n     */\n    syncHandles(): void {\n      each(this.handles, (handle, i) => {\n        handle.setAttribute('data-orientation', this.orientation);\n        if (i === this.handles.length - 1) {\n          handle.classList.add('lm-mod-hidden');\n          /* <DEPRECATED> */\n          handle.classList.add('p-mod-hidden');\n          /* </DEPRECATED> */\n        } else {\n          handle.classList.remove('lm-mod-hidden');\n          /* <DEPRECATED> */\n          handle.classList.remove('p-mod-hidden');\n          /* </DEPRECATED> */\n        }\n      });\n    }\n\n    /**\n     * Hold the current sizes of the box sizers.\n     *\n     * This sets the size hint of each sizer to its current size.\n     */\n    holdSizes(): void {\n      each(this.sizers, sizer => { sizer.sizeHint = sizer.size; });\n    }\n\n    /**\n     * Recursively hold all of the sizes in the layout tree.\n     *\n     * This ignores the sizers of tab layout nodes.\n     */\n    holdAllSizes(): void {\n      each(this.children, child => child.holdAllSizes());\n      this.holdSizes();\n    }\n\n    /**\n     * Normalize the sizes of the split layout node.\n     */\n    normalizeSizes(): void {\n      // Bail early if the sizers are empty.\n      let n = this.sizers.length;\n      if (n === 0) {\n        return;\n      }\n\n      // Hold the current sizes of the sizers.\n      this.holdSizes();\n\n      // Compute the sum of the sizes.\n      let sum = reduce(this.sizers, (v, sizer) => v + sizer.sizeHint, 0);\n\n      // Normalize the sizes based on the sum.\n      if (sum === 0) {\n        each(this.sizers, sizer => {\n          sizer.size = sizer.sizeHint = 1 / n;\n        });\n      } else {\n        each(this.sizers, sizer => {\n          sizer.size = sizer.sizeHint /= sum;\n        });\n      }\n\n      // Mark the sizes as normalized.\n      this.normalized = true;\n    }\n\n    /**\n     * Snap the normalized sizes of the split layout node.\n     */\n    createNormalizedSizes(): number[] {\n      // Bail early if the sizers are empty.\n      let n = this.sizers.length;\n      if (n === 0) {\n        return [];\n      }\n\n      // Grab the current sizes of the sizers.\n      let sizes = this.sizers.map(sizer => sizer.size);\n\n      // Compute the sum of the sizes.\n      let sum = reduce(sizes, (v, size) => v + size, 0);\n\n      // Normalize the sizes based on the sum.\n      if (sum === 0) {\n        each(sizes, (size, i) => { sizes[i] = 1 / n; });\n      } else {\n        each(sizes, (size, i) => { sizes[i] = size / sum; });\n      }\n\n      // Return the normalized sizes.\n      return sizes;\n    }\n\n    /**\n     * Fit the layout tree.\n     */\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\n      // Compute the required fixed space.\n      let horizontal = this.orientation === 'horizontal';\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\n\n      // Set up the limit variables.\n      let minWidth = horizontal ? fixed : 0;\n      let minHeight = horizontal ? 0 : fixed;\n      let maxWidth = Infinity;\n      let maxHeight = Infinity;\n\n      // Fit the children and update the limits.\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let limits = this.children[i].fit(spacing, items);\n        if (horizontal) {\n          minHeight = Math.max(minHeight, limits.minHeight);\n          minWidth += limits.minWidth;\n          this.sizers[i].minSize = limits.minWidth;\n        } else {\n          minWidth = Math.max(minWidth, limits.minWidth);\n          minHeight += limits.minHeight;\n          this.sizers[i].minSize = limits.minHeight;\n        }\n      }\n\n      // Return the computed limits for the layout node.\n      return { minWidth, minHeight, maxWidth, maxHeight };\n    }\n\n    /**\n     * Update the layout tree.\n     */\n    update(left: number, top: number, width: number, height: number, spacing: number, items: ItemMap): void {\n      // Compute the available layout space.\n      let horizontal = this.orientation === 'horizontal';\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\n      let space = Math.max(0, (horizontal ? width : height) - fixed);\n\n      // De-normalize the sizes if needed.\n      if (this.normalized) {\n        each(this.sizers, sizer => { sizer.sizeHint *= space; });\n        this.normalized = false;\n      }\n\n      // Distribute the layout space to the sizers.\n      BoxEngine.calc(this.sizers, space);\n\n      // Update the geometry of the child nodes and handles.\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let child = this.children[i];\n        let size = this.sizers[i].size;\n        let handleStyle = this.handles[i].style;\n        if (horizontal) {\n          child.update(left, top, size, height, spacing, items);\n          left += size;\n          handleStyle.top = `${top}px`;\n          handleStyle.left = `${left}px`;\n          handleStyle.width = `${spacing}px`;\n          handleStyle.height = `${height}px`;\n          left += spacing;\n        } else {\n          child.update(left, top, width, size, spacing, items);\n          top += size;\n          handleStyle.top = `${top}px`;\n          handleStyle.left = `${left}px`;\n          handleStyle.width = `${width}px`;\n          handleStyle.height = `${spacing}px`;\n          top += spacing;\n        }\n      }\n    }\n  }\n\n  export\n  function addAria(widget: Widget, tabBar: TabBar<Widget>) {\n    widget.node.setAttribute('role', 'tabpanel');\n    let renderer = tabBar.renderer;\n    if (renderer instanceof TabBar.Renderer) {\n      let tabId = renderer.createTabKey({ title: widget.title, current: false, zIndex: 0 });\n      widget.node.setAttribute('aria-labelledby', tabId);  \n    }\n  }\n\n  export\n  function removeAria(widget: Widget) {\n    widget.node.removeAttribute('role');\n    widget.node.removeAttribute('aria-labelledby');\n  }\n\n  /**\n   * Normalize a tab area config and collect the visited widgets.\n   */\n  function normalizeTabAreaConfig(config: DockLayout.ITabAreaConfig, widgetSet: Set<Widget>): DockLayout.ITabAreaConfig | null {\n    // Bail early if there is no content.\n    if (config.widgets.length === 0) {\n      return null;\n    }\n\n    // Setup the filtered widgets array.\n    let widgets: Widget[] = [];\n\n    // Filter the config for unique widgets.\n    each(config.widgets, widget => {\n      if (!widgetSet.has(widget)) {\n        widgetSet.add(widget);\n        widgets.push(widget);\n      }\n    });\n\n    // Bail if there are no effective widgets.\n    if (widgets.length === 0) {\n      return null;\n    }\n\n    // Normalize the current index.\n    let index = config.currentIndex;\n    if (index !== -1 && (index < 0 || index >= widgets.length)) {\n      index = 0;\n    }\n\n    // Return a normalized config object.\n    return { type: 'tab-area', widgets, currentIndex: index };\n  }\n\n  /**\n   * Normalize a split area config and collect the visited widgets.\n   */\n  function normalizeSplitAreaConfig(config: DockLayout.ISplitAreaConfig, widgetSet: Set<Widget>): DockLayout.AreaConfig | null {\n    // Set up the result variables.\n    let orientation = config.orientation;\n    let children: DockLayout.AreaConfig[] = [];\n    let sizes: number[] = [];\n\n    // Normalize the config children.\n    for (let i = 0, n = config.children.length; i < n; ++i) {\n      // Normalize the child config.\n      let child = normalizeAreaConfig(config.children[i], widgetSet);\n\n      // Ignore an empty child.\n      if (!child) {\n        continue;\n      }\n\n      // Add the child or hoist its content as appropriate.\n      if (child.type === 'tab-area' || child.orientation !== orientation) {\n        children.push(child);\n        sizes.push(Math.abs(config.sizes[i] || 0));\n      } else {\n        children.push(...child.children);\n        sizes.push(...child.sizes);\n      }\n    }\n\n    // Bail if there are no effective children.\n    if (children.length === 0) {\n      return null;\n    }\n\n    // If there is only one effective child, return that child.\n    if (children.length === 1) {\n      return children[0];\n    }\n\n    // Return a normalized config object.\n    return { type: 'split-area', orientation, children, sizes };\n  }\n\n  /**\n   * Convert a normalized tab area config into a layout tree.\n   */\n  function realizeTabAreaConfig(config: DockLayout.ITabAreaConfig, renderer: DockLayout.IRenderer): TabLayoutNode {\n    // Create the tab bar for the layout node.\n    let tabBar = renderer.createTabBar();\n\n    // Hide each widget and add it to the tab bar.\n    each(config.widgets, widget => {\n      widget.hide();\n      tabBar.addTab(widget.title);\n      Private.addAria(widget, tabBar);\n    });\n\n    // Set the current index of the tab bar.\n    tabBar.currentIndex = config.currentIndex;\n\n    // Return the new tab layout node.\n    return new TabLayoutNode(tabBar);\n  }\n\n  /**\n   * Convert a normalized split area config into a layout tree.\n   */\n  function realizeSplitAreaConfig(config: DockLayout.ISplitAreaConfig, renderer: DockLayout.IRenderer): SplitLayoutNode {\n    // Create the split layout node.\n    let node = new SplitLayoutNode(config.orientation);\n\n    // Add each child to the layout node.\n    each(config.children, (child, i) => {\n      // Create the child data for the layout node.\n      let childNode = realizeAreaConfig(child, renderer);\n      let sizer = createSizer(config.sizes[i]);\n      let handle = renderer.createHandle();\n\n      // Add the child data to the layout node.\n      node.children.push(childNode);\n      node.handles.push(handle);\n      node.sizers.push(sizer);\n\n      // Update the parent for the child node.\n      childNode.parent = node;\n    });\n\n    // Synchronize the handle state for the layout node.\n    node.syncHandles();\n\n    // Normalize the sizes for the layout node.\n    node.normalizeSizes();\n\n    // Return the new layout node.\n    return node;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterator, each, find, toArray\n} from '@lumino/algorithm';\n\nimport {\n  MimeData\n} from '@lumino/coreutils';\n\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ElementExt, Platform\n} from '@lumino/domutils';\n\nimport {\n  Drag, IDragEvent\n} from '@lumino/dragdrop';\n\nimport {\n  ConflatableMessage, Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  AttachedProperty\n} from '@lumino/properties';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  DockLayout\n} from './docklayout';\n\nimport {\n  TabBar\n} from './tabbar';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which provides a flexible docking area for widgets.\n */\nexport\nclass DockPanel extends Widget {\n  /**\n   * Construct a new dock panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: DockPanel.IOptions = {}) {\n    super();\n    this.addClass('lm-DockPanel');\n    /* <DEPRECATED> */\n    this.addClass('p-DockPanel');\n    /* </DEPRECATED> */\n    this._mode = options.mode || 'multiple-document';\n    this._renderer = options.renderer || DockPanel.defaultRenderer;\n    this._edges = options.edges || Private.DEFAULT_EDGES;\n    if (options.tabsMovable !== undefined) {\n      this._tabsMovable = options.tabsMovable;\n    }\n    if(options.tabsConstrained !== undefined){\n      this._tabsConstrained = options.tabsConstrained;\n    }\n    if (options.addButtonEnabled !== undefined) {\n      this._addButtonEnabled = options.addButtonEnabled;\n    }\n\n    // Toggle the CSS mode attribute.\n    this.dataset['mode'] = this._mode;\n\n    // Create the delegate renderer for the layout.\n    let renderer: DockPanel.IRenderer = {\n      createTabBar: () => this._createTabBar(),\n      createHandle: () => this._createHandle()\n    };\n\n    // Set up the dock layout for the panel.\n    this.layout = new DockLayout({ renderer, spacing: options.spacing });\n\n    // Set up the overlay drop indicator.\n    this.overlay = options.overlay || new DockPanel.Overlay();\n    this.node.appendChild(this.overlay.node);\n  }\n\n  /**\n   * Dispose of the resources held by the panel.\n   */\n  dispose(): void {\n    // Ensure the mouse is released.\n    this._releaseMouse();\n\n    // Hide the overlay.\n    this.overlay.hide(0);\n\n    // Cancel a drag if one is in progress.\n    if (this._drag) {\n      this._drag.dispose();\n    }\n\n    // Dispose of the base class.\n    super.dispose();\n  }\n\n  /**\n   * A signal emitted when the layout configuration is modified.\n   *\n   * #### Notes\n   * This signal is emitted whenever the current layout configuration\n   * may have changed.\n   *\n   * This signal is emitted asynchronously in a collapsed fashion, so\n   * that multiple synchronous modifications results in only a single\n   * emit of the signal.\n   */\n  get layoutModified(): ISignal<this, void> {\n    return this._layoutModified;\n  }\n\n  /**\n   * A signal emitted when the add button on a tab bar is clicked.\n   *\n   */\n  get addRequested(): ISignal<this, TabBar<Widget>> {\n    return this._addRequested;\n  }\n\n  /**\n   * The overlay used by the dock panel.\n   */\n  readonly overlay: DockPanel.IOverlay;\n\n  /**\n   * The renderer used by the dock panel.\n   */\n  get renderer(): DockPanel.IRenderer {\n    return (this.layout as DockLayout).renderer;\n  }\n\n  /**\n   * Get the spacing between the widgets.\n   */\n  get spacing(): number {\n    return (this.layout as DockLayout).spacing;\n  }\n\n  /**\n   * Set the spacing between the widgets.\n   */\n  set spacing(value: number) {\n    (this.layout as DockLayout).spacing = value;\n  }\n\n  /**\n   * Get the mode for the dock panel.\n   */\n  get mode(): DockPanel.Mode {\n    return this._mode;\n  }\n\n  /**\n   * Set the mode for the dock panel.\n   *\n   * #### Notes\n   * Changing the mode is a destructive operation with respect to the\n   * panel's layout configuration. If layout state must be preserved,\n   * save the current layout config before changing the mode.\n   */\n  set mode(value: DockPanel.Mode) {\n    // Bail early if the mode does not change.\n    if (this._mode === value) {\n      return;\n    }\n\n    // Update the internal mode.\n    this._mode = value;\n\n    // Toggle the CSS mode attribute.\n    this.dataset['mode'] = value;\n\n    // Get the layout for the panel.\n    let layout = this.layout as DockLayout;\n\n    // Configure the layout for the specified mode.\n    switch (value) {\n    case 'multiple-document':\n      each(layout.tabBars(), tabBar => { tabBar.show(); });\n      break;\n    case 'single-document':\n      layout.restoreLayout(Private.createSingleDocumentConfig(this));\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Whether the tabs can be dragged / moved at runtime.\n   */\n  get tabsMovable(): boolean {\n    return this._tabsMovable;\n  }\n\n\n  /**\n   * Enable / Disable draggable / movable tabs.\n   */\n  set tabsMovable(value: boolean) {\n    this._tabsMovable = value;\n    each(this.tabBars(), (tabbar) => { tabbar.tabsMovable = value });\n  }\n\n  /**\n   * Whether the tabs are constrained to their source dock panel\n   */\n  get tabsConstrained(): boolean{\n    return this._tabsConstrained;\n  }\n\n  /**\n   * Constrain/Allow tabs to be dragged outside of this dock panel\n   */\n  set tabsConstrained(value:boolean) {\n    this._tabsConstrained = value;\n  }\n\n  /**\n   * Whether the add buttons for each tab bar are enabled.\n   */\n  get addButtonEnabled(): boolean {\n    return this._addButtonEnabled;\n  }\n\n  /**\n   * Set whether the add buttons for each tab bar are enabled.\n   */\n  set addButtonEnabled(value: boolean) {\n    this._addButtonEnabled = value;\n    each(this.tabBars(), tabbar => { tabbar.addButtonEnabled = value; });\n  }\n\n  /**\n   * Whether the dock panel is empty.\n   */\n  get isEmpty(): boolean {\n    return (this.layout as DockLayout).isEmpty;\n  }\n\n  /**\n   * Create an iterator over the user widgets in the panel.\n   *\n   * @returns A new iterator over the user widgets in the panel.\n   *\n   * #### Notes\n   * This iterator does not include the generated tab bars.\n   */\n  widgets(): IIterator<Widget> {\n    return (this.layout as DockLayout).widgets();\n  }\n\n  /**\n   * Create an iterator over the selected widgets in the panel.\n   *\n   * @returns A new iterator over the selected user widgets.\n   *\n   * #### Notes\n   * This iterator yields the widgets corresponding to the current tab\n   * of each tab bar in the panel.\n   */\n  selectedWidgets(): IIterator<Widget> {\n    return (this.layout as DockLayout).selectedWidgets();\n  }\n\n  /**\n   * Create an iterator over the tab bars in the panel.\n   *\n   * @returns A new iterator over the tab bars in the panel.\n   *\n   * #### Notes\n   * This iterator does not include the user widgets.\n   */\n  tabBars(): IIterator<TabBar<Widget>> {\n    return (this.layout as DockLayout).tabBars();\n  }\n\n  /**\n   * Create an iterator over the handles in the panel.\n   *\n   * @returns A new iterator over the handles in the panel.\n   */\n  handles(): IIterator<HTMLDivElement> {\n    return (this.layout as DockLayout).handles();\n  }\n\n  /**\n   * Select a specific widget in the dock panel.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will make the widget the current widget in its tab area.\n   */\n  selectWidget(widget: Widget): void {\n    // Find the tab bar which contains the widget.\n    let tabBar = find(this.tabBars(), bar => {\n      return bar.titles.indexOf(widget.title) !== -1;\n    });\n\n    // Throw an error if no tab bar is found.\n    if (!tabBar) {\n      throw new Error('Widget is not contained in the dock panel.');\n    }\n\n    // Ensure the widget is the current widget.\n    tabBar.currentTitle = widget.title;\n  }\n\n  /**\n   * Activate a specified widget in the dock panel.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will select and activate the given widget.\n   */\n  activateWidget(widget: Widget): void {\n    this.selectWidget(widget);\n    widget.activate();\n  }\n\n  /**\n   * Save the current layout configuration of the dock panel.\n   *\n   * @returns A new config object for the current layout state.\n   *\n   * #### Notes\n   * The return value can be provided to the `restoreLayout` method\n   * in order to restore the layout to its current configuration.\n   */\n  saveLayout(): DockPanel.ILayoutConfig {\n    return (this.layout as DockLayout).saveLayout();\n  }\n\n  /**\n   * Restore the layout to a previously saved configuration.\n   *\n   * @param config - The layout configuration to restore.\n   *\n   * #### Notes\n   * Widgets which currently belong to the layout but which are not\n   * contained in the config will be unparented.\n   *\n   * The dock panel automatically reverts to `'multiple-document'`\n   * mode when a layout config is restored.\n   */\n  restoreLayout(config: DockPanel.ILayoutConfig): void {\n    // Reset the mode.\n    this._mode = 'multiple-document';\n\n    // Restore the layout.\n    (this.layout as DockLayout).restoreLayout(config);\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Add a widget to the dock panel.\n   *\n   * @param widget - The widget to add to the dock panel.\n   *\n   * @param options - The additional options for adding the widget.\n   *\n   * #### Notes\n   * If the panel is in single document mode, the options are ignored\n   * and the widget is always added as tab in the hidden tab bar.\n   */\n  addWidget(widget: Widget, options: DockPanel.IAddOptions = {}): void {\n    // Add the widget to the layout.\n    if (this._mode === 'single-document') {\n      (this.layout as DockLayout).addWidget(widget);\n    } else {\n      (this.layout as DockLayout).addWidget(widget, options);\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Process a message sent to the widget.\n   *\n   * @param msg - The message sent to the widget.\n   */\n  processMessage(msg: Message): void {\n    if (msg.type === 'layout-modified') {\n      this._layoutModified.emit(undefined);\n    } else {\n      super.processMessage(msg);\n    }\n  }\n\n  /**\n   * Handle the DOM events for the dock panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'lm-dragenter':\n      this._evtDragEnter(event as IDragEvent);\n      break;\n    case 'lm-dragleave':\n      this._evtDragLeave(event as IDragEvent);\n      break;\n    case 'lm-dragover':\n      this._evtDragOver(event as IDragEvent);\n      break;\n    case 'lm-drop':\n      this._evtDrop(event as IDragEvent);\n      break;\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseup':\n      this._evtMouseUp(event as MouseEvent);\n      break;\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('lm-dragenter', this);\n    this.node.addEventListener('lm-dragleave', this);\n    this.node.addEventListener('lm-dragover', this);\n    this.node.addEventListener('lm-drop', this);\n    this.node.addEventListener('mousedown', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('lm-dragenter', this);\n    this.node.removeEventListener('lm-dragleave', this);\n    this.node.removeEventListener('lm-dragover', this);\n    this.node.removeEventListener('lm-drop', this);\n    this.node.removeEventListener('mousedown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    // Ignore the generated tab bars.\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\n      return;\n    }\n\n    // Add the widget class to the child.\n    msg.child.addClass('lm-DockPanel-widget');\n    /* <DEPRECATED> */\n    msg.child.addClass('p-DockPanel-widget');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    // Ignore the generated tab bars.\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\n      return;\n    }\n\n    // Remove the widget class from the child.\n    msg.child.removeClass('lm-DockPanel-widget');\n    /* <DEPRECATED> */\n    msg.child.removeClass('p-DockPanel-widget');\n    /* </DEPRECATED> */\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `'lm-dragenter'` event for the dock panel.\n   */\n  private _evtDragEnter(event: IDragEvent): void {\n    // If the factory mime type is present, mark the event as\n    // handled in order to get the rest of the drag events.\n    if (event.mimeData.hasData('application/vnd.lumino.widget-factory')) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle the `'lm-dragleave'` event for the dock panel.\n   */\n  private _evtDragLeave(event: IDragEvent): void {\n    // Mark the event as handled.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // The new target might be a descendant, so we might still handle the drop.\n    // Hide asynchronously so that if a lm-dragover event bubbles up to us, the\n    // hide is cancelled by the lm-dragover handler's show overlay logic.\n    this.overlay.hide(1)\n  }\n\n  /**\n   * Handle the `'lm-dragover'` event for the dock panel.\n   */\n  private _evtDragOver(event: IDragEvent): void {\n    // Mark the event as handled.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Show the drop indicator overlay and update the drop\n    // action based on the drop target zone under the mouse.\n    if ((this._tabsConstrained && event.source !== this) || this._showOverlay(event.clientX, event.clientY) === 'invalid') {\n      event.dropAction = 'none';\n    } else {\n      event.dropAction = event.proposedAction;\n    }\n  }\n\n  /**\n   * Handle the `'lm-drop'` event for the dock panel.\n   */\n  private _evtDrop(event: IDragEvent): void {\n    // Mark the event as handled.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Hide the drop indicator overlay.\n    this.overlay.hide(0);\n\n    // Bail if the proposed action is to do nothing.\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Find the drop target under the mouse.\n    let { clientX, clientY } = event;\n    let { zone, target } = Private.findDropTarget(\n      this,\n      clientX,\n      clientY,\n      this._edges\n    );\n\n    // Bail if the drop zone is invalid.\n    if (zone === 'invalid') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the factory mime type has invalid data.\n    let mimeData = event.mimeData;\n    let factory = mimeData.getData('application/vnd.lumino.widget-factory');\n    if (typeof factory !== 'function') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the factory does not produce a widget.\n    let widget = factory();\n    if (!(widget instanceof Widget)) {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the widget is an ancestor of the dock panel.\n    if (widget.contains(this)) {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Find the reference widget for the drop target.\n    let ref = target ? Private.getDropRef(target.tabBar) : null;\n\n    // Add the widget according to the indicated drop zone.\n    switch(zone) {\n    case 'root-all':\n      this.addWidget(widget);\n      break;\n    case 'root-top':\n      this.addWidget(widget, { mode: 'split-top' });\n      break;\n    case 'root-left':\n      this.addWidget(widget, { mode: 'split-left' });\n      break;\n    case 'root-right':\n      this.addWidget(widget, { mode: 'split-right' });\n      break;\n    case 'root-bottom':\n      this.addWidget(widget, { mode: 'split-bottom' });\n      break;\n    case 'widget-all':\n      this.addWidget(widget, { mode: 'tab-after', ref });\n      break;\n    case 'widget-top':\n      this.addWidget(widget, { mode: 'split-top', ref });\n      break;\n    case 'widget-left':\n      this.addWidget(widget, { mode: 'split-left', ref });\n      break;\n    case 'widget-right':\n      this.addWidget(widget, { mode: 'split-right', ref });\n      break;\n    case 'widget-bottom':\n      this.addWidget(widget, { mode: 'split-bottom', ref });\n      break;\n    case 'widget-tab':\n      this.addWidget(widget, { mode: 'tab-after', ref });\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Accept the proposed drop action.\n    event.dropAction = event.proposedAction;\n\n    // Activate the dropped widget.\n    this.activateWidget(widget);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the dock panel.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      // Finalize the mouse release.\n      this._releaseMouse();\n\n      // Schedule an emit of the layout modified signal.\n      MessageLoop.postMessage(this, Private.LayoutModified);\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the dock panel.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if the left mouse button is not pressed.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Find the handle which contains the mouse target, if any.\n    let layout = this.layout as DockLayout;\n    let target = event.target as HTMLElement;\n    let handle = find(layout.handles(), handle => handle.contains(target));\n    if (!handle) {\n      return;\n    }\n\n    // Stop the event when a handle is pressed.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Add the extra document listeners.\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('mouseup', this, true);\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Compute the offset deltas for the handle press.\n    let rect = handle.getBoundingClientRect();\n    let deltaX = event.clientX - rect.left;\n    let deltaY = event.clientY - rect.top;\n\n    // Override the cursor and store the press data.\n    let style = window.getComputedStyle(handle);\n    let override = Drag.overrideCursor(style.cursor!);\n    this._pressData = { handle, deltaX, deltaY, override };\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the dock panel.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Stop the event when dragging a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Compute the desired offset position for the handle.\n    let rect = this.node.getBoundingClientRect();\n    let xPos = event.clientX - rect.left - this._pressData.deltaX;\n    let yPos = event.clientY - rect.top - this._pressData.deltaY;\n\n    // Set the handle as close to the desired position as possible.\n    let layout = this.layout as DockLayout;\n    layout.moveHandle(this._pressData.handle, xPos, yPos);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the dock panel.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Do nothing if the left mouse button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event when releasing a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Finalize the mouse release.\n    this._releaseMouse();\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Release the mouse grab for the dock panel.\n   */\n  private _releaseMouse(): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the override cursor.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Remove the extra document listeners.\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('contextmenu', this, true);\n  }\n\n  /**\n   * Show the overlay indicator at the given client position.\n   *\n   * Returns the drop zone at the specified client position.\n   *\n   * #### Notes\n   * If the position is not over a valid zone, the overlay is hidden.\n   */\n  private _showOverlay(clientX: number, clientY: number): Private.DropZone {\n    // Find the dock target for the given client position.\n    let { zone, target } = Private.findDropTarget(\n      this,\n      clientX,\n      clientY,\n      this._edges\n    );\n\n    // If the drop zone is invalid, hide the overlay and bail.\n    if (zone === 'invalid') {\n      this.overlay.hide(100);\n      return zone;\n    }\n\n    // Setup the variables needed to compute the overlay geometry.\n    let top: number;\n    let left: number;\n    let right: number;\n    let bottom: number;\n    let box = ElementExt.boxSizing(this.node); // TODO cache this?\n    let rect = this.node.getBoundingClientRect();\n\n    // Compute the overlay geometry based on the dock zone.\n    switch (zone) {\n    case 'root-all':\n      top = box.paddingTop;\n      left = box.paddingLeft;\n      right = box.paddingRight;\n      bottom = box.paddingBottom;\n      break;\n    case 'root-top':\n      top = box.paddingTop;\n      left = box.paddingLeft;\n      right = box.paddingRight;\n      bottom = rect.height * Private.GOLDEN_RATIO;\n      break;\n    case 'root-left':\n      top = box.paddingTop;\n      left = box.paddingLeft;\n      right = rect.width * Private.GOLDEN_RATIO;\n      bottom = box.paddingBottom;\n      break;\n    case 'root-right':\n      top = box.paddingTop;\n      left = rect.width * Private.GOLDEN_RATIO;\n      right = box.paddingRight;\n      bottom = box.paddingBottom;\n      break;\n    case 'root-bottom':\n      top = rect.height * Private.GOLDEN_RATIO;\n      left = box.paddingLeft;\n      right = box.paddingRight;\n      bottom = box.paddingBottom;\n      break;\n    case 'widget-all':\n      top = target!.top;\n      left = target!.left;\n      right = target!.right;\n      bottom = target!.bottom;\n      break;\n    case 'widget-top':\n      top = target!.top;\n      left = target!.left;\n      right = target!.right;\n      bottom = target!.bottom + target!.height / 2;\n      break;\n    case 'widget-left':\n      top = target!.top;\n      left = target!.left;\n      right = target!.right + target!.width / 2;\n      bottom = target!.bottom;\n      break;\n    case 'widget-right':\n      top = target!.top;\n      left = target!.left + target!.width / 2;\n      right = target!.right;\n      bottom = target!.bottom;\n      break;\n    case 'widget-bottom':\n      top = target!.top + target!.height / 2;\n      left = target!.left;\n      right = target!.right;\n      bottom = target!.bottom;\n      break;\n    case 'widget-tab':\n      const tabHeight = target!.tabBar.node.getBoundingClientRect().height;\n      top = target!.top;\n      left = target!.left;\n      right = target!.right;\n      bottom = target!.bottom + target!.height - tabHeight;\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Show the overlay with the computed geometry.\n    this.overlay.show({ top, left, right, bottom });\n\n    // Finally, return the computed drop zone.\n    return zone;\n  }\n\n  /**\n   * Create a new tab bar for use by the panel.\n   */\n  private _createTabBar(): TabBar<Widget> {\n    // Create the tab bar.\n    let tabBar = this._renderer.createTabBar();\n\n    // Set the generated tab bar property for the tab bar.\n    Private.isGeneratedTabBarProperty.set(tabBar, true);\n\n    // Hide the tab bar when in single document mode.\n    if (this._mode === 'single-document') {\n      tabBar.hide();\n    }\n\n    // Enforce necessary tab bar behavior.\n    // TODO do we really want to enforce *all* of these?\n    tabBar.tabsMovable = this._tabsMovable;\n    tabBar.allowDeselect = false;\n    tabBar.addButtonEnabled = this._addButtonEnabled;\n    tabBar.removeBehavior = 'select-previous-tab';\n    tabBar.insertBehavior = 'select-tab-if-needed';\n\n    // Connect the signal handlers for the tab bar.\n    tabBar.tabMoved.connect(this._onTabMoved, this);\n    tabBar.currentChanged.connect(this._onCurrentChanged, this);\n    tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\n    tabBar.tabDetachRequested.connect(this._onTabDetachRequested, this);\n    tabBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\n    tabBar.addRequested.connect(this._onTabAddRequested, this);\n\n    // Return the initialized tab bar.\n    return tabBar;\n  }\n\n  /**\n   * Create a new handle for use by the panel.\n   */\n  private _createHandle(): HTMLDivElement {\n    return this._renderer.createHandle();\n  }\n\n  /**\n   * Handle the `tabMoved` signal from a tab bar.\n   */\n  private _onTabMoved(): void {\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `currentChanged` signal from a tab bar.\n   */\n  private _onCurrentChanged(sender: TabBar<Widget>, args: TabBar.ICurrentChangedArgs<Widget>): void {\n    // Extract the previous and current title from the args.\n    let { previousTitle, currentTitle } = args;\n\n    // Hide the previous widget.\n    if (previousTitle) {\n      previousTitle.owner.hide();\n    }\n\n    // Show the current widget.\n    if (currentTitle) {\n      currentTitle.owner.show();\n    }\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `addRequested` signal from a tab bar.\n   */\n  private _onTabAddRequested(sender: TabBar<Widget>): void {\n    this._addRequested.emit(sender);\n  }\n\n  /**\n   * Handle the `tabActivateRequested` signal from a tab bar.\n   */\n  private _onTabActivateRequested(sender: TabBar<Widget>, args: TabBar.ITabActivateRequestedArgs<Widget>): void {\n    args.title.owner.activate();\n  }\n\n  /**\n   * Handle the `tabCloseRequested` signal from a tab bar.\n   */\n  private _onTabCloseRequested(sender: TabBar<Widget>, args: TabBar.ITabCloseRequestedArgs<Widget>): void {\n    args.title.owner.close();\n  }\n\n  /**\n   * Handle the `tabDetachRequested` signal from a tab bar.\n   */\n  private _onTabDetachRequested(sender: TabBar<Widget>, args: TabBar.ITabDetachRequestedArgs<Widget>): void {\n    // Do nothing if a drag is already in progress.\n    if (this._drag) {\n      return;\n    }\n\n    // Release the tab bar's hold on the mouse.\n    sender.releaseMouse();\n\n    // Extract the data from the args.\n    let { title, tab, clientX, clientY } = args;\n\n    // Setup the mime data for the drag operation.\n    let mimeData = new MimeData();\n    let factory = () => title.owner;\n    mimeData.setData('application/vnd.lumino.widget-factory', factory);\n\n    // Create the drag image for the drag operation.\n    let dragImage = tab.cloneNode(true) as HTMLElement;\n\n    // Create the drag object to manage the drag-drop operation.\n    this._drag = new Drag({\n      mimeData, dragImage,\n      proposedAction: 'move',\n      supportedActions: 'move',\n      source: this\n    });\n\n    // Hide the tab node in the original tab.\n    tab.classList.add('lm-mod-hidden');\n    /* <DEPRECATED> */\n    tab.classList.add('p-mod-hidden');\n    /* </DEPRECATED> */;\n\n    // Create the cleanup callback.\n    let cleanup = (() => {\n      this._drag = null;\n      tab.classList.remove('lm-mod-hidden');\n      /* <DEPRECATED> */\n      tab.classList.remove('p-mod-hidden');\n      /* </DEPRECATED> */;\n    });\n\n    // Start the drag operation and cleanup when done.\n    this._drag.start(clientX, clientY).then(cleanup);\n  }\n\n  private _edges: DockPanel.IEdges;\n  private _mode: DockPanel.Mode;\n  private _drag: Drag | null = null;\n  private _renderer: DockPanel.IRenderer;\n  private _tabsMovable: boolean = true;\n  private _tabsConstrained: boolean = false;\n  private _addButtonEnabled: boolean = false;\n  private _pressData: Private.IPressData | null = null;\n  private _layoutModified = new Signal<this, void>(this);\n\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\n\n}\n\n\n/**\n * The namespace for the `DockPanel` class statics.\n */\nexport\nnamespace DockPanel {\n  /**\n   * An options object for creating a dock panel.\n   */\n  export\n  interface IOptions {\n    /**\n     * The overlay to use with the dock panel.\n     *\n     * The default is a new `Overlay` instance.\n     */\n    overlay?: IOverlay;\n\n    /**\n     * The renderer to use for the dock panel.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n\n    /**\n     * The spacing between the items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The mode for the dock panel.\n     *\n     * The default is `'multiple-document'`.\n     */\n    mode?: DockPanel.Mode;\n\n    /**\n     * The sizes of the edge drop zones, in pixels.\n     * If not given, default values will be used.\n     */\n    edges?: IEdges;\n\n    /**\n     * Allow tabs to be draggable / movable by user.\n     *\n     * The default is `'true'`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Constrain tabs to this dock panel\n     *\n     * The default is `'false'`.\n     */\n    tabsConstrained?: boolean;\n\n    /**\n     * Enable add buttons in each of the dock panel's tab bars.\n     *\n     * The default is `'false'`.\n     */\n    addButtonEnabled?: boolean;\n  }\n\n  /**\n   * The sizes of the edge drop zones, in pixels.\n   */\n  export interface IEdges {\n    /**\n     * The size of the top edge drop zone.\n     */\n    top: number;\n\n    /**\n     * The size of the right edge drop zone.\n     */\n    right: number;\n\n    /**\n     * The size of the bottom edge drop zone.\n     */\n    bottom: number;\n\n    /**\n     * The size of the left edge drop zone.\n     */\n    left: number;\n  };\n\n  /**\n   * A type alias for the supported dock panel modes.\n   */\n  export\n  type Mode = (\n    /**\n     * The single document mode.\n     *\n     * In this mode, only a single widget is visible at a time, and that\n     * widget fills the available layout space. No tab bars are visible.\n     */\n    'single-document' |\n\n    /**\n     * The multiple document mode.\n     *\n     * In this mode, multiple documents are displayed in separate tab\n     * areas, and those areas can be individually resized by the user.\n     */\n    'multiple-document'\n  );\n\n  /**\n   * A type alias for a layout configuration object.\n   */\n  export\n  type ILayoutConfig = DockLayout.ILayoutConfig;\n\n  /**\n   * A type alias for the supported insertion modes.\n   */\n  export\n  type InsertMode = DockLayout.InsertMode;\n\n  /**\n   * A type alias for the add widget options.\n   */\n  export\n  type IAddOptions = DockLayout.IAddOptions;\n\n  /**\n   * An object which holds the geometry for overlay positioning.\n   */\n  export\n  interface IOverlayGeometry {\n    /**\n     * The distance between the overlay and parent top edges.\n     */\n    top: number;\n\n    /**\n     * The distance between the overlay and parent left edges.\n     */\n    left: number;\n\n    /**\n     * The distance between the overlay and parent right edges.\n     */\n    right: number;\n\n    /**\n     * The distance between the overlay and parent bottom edges.\n     */\n    bottom: number;\n  }\n\n  /**\n   * An object which manages the overlay node for a dock panel.\n   */\n  export\n  interface IOverlay {\n    /**\n     * The DOM node for the overlay.\n     */\n    readonly node: HTMLDivElement;\n\n    /**\n     * Show the overlay using the given overlay geometry.\n     *\n     * @param geo - The desired geometry for the overlay.\n     *\n     * #### Notes\n     * The given geometry values assume the node will use absolute\n     * positioning.\n     *\n     * This is called on every mouse move event during a drag in order\n     * to update the position of the overlay. It should be efficient.\n     */\n    show(geo: IOverlayGeometry): void;\n\n    /**\n     * Hide the overlay node.\n     *\n     * @param delay - The delay (in ms) before hiding the overlay.\n     *   A delay value <= 0 should hide the overlay immediately.\n     *\n     * #### Notes\n     * This is called whenever the overlay node should been hidden.\n     */\n    hide(delay: number): void;\n  }\n\n  /**\n   * A concrete implementation of `IOverlay`.\n   *\n   * This is the default overlay implementation for a dock panel.\n   */\n  export\n  class Overlay implements IOverlay {\n    /**\n     * Construct a new overlay.\n     */\n    constructor() {\n      this.node = document.createElement('div');\n      this.node.classList.add('lm-DockPanel-overlay');\n      this.node.classList.add('lm-mod-hidden');\n      /* <DEPRECATED> */\n      this.node.classList.add('p-DockPanel-overlay');\n      this.node.classList.add('p-mod-hidden');\n      /* </DEPRECATED> */;\n      this.node.style.position = 'absolute';\n    }\n\n    /**\n     * The DOM node for the overlay.\n     */\n    readonly node: HTMLDivElement;\n\n    /**\n     * Show the overlay using the given overlay geometry.\n     *\n     * @param geo - The desired geometry for the overlay.\n     */\n    show(geo: IOverlayGeometry): void {\n      // Update the position of the overlay.\n      let style = this.node.style;\n      style.top = `${geo.top}px`;\n      style.left = `${geo.left}px`;\n      style.right = `${geo.right}px`;\n      style.bottom = `${geo.bottom}px`;\n\n      // Clear any pending hide timer.\n      clearTimeout(this._timer);\n      this._timer = -1;\n\n      // If the overlay is already visible, we're done.\n      if (!this._hidden) {\n        return;\n      }\n\n      // Clear the hidden flag.\n      this._hidden = false;\n\n      // Finally, show the overlay.\n      this.node.classList.remove('lm-mod-hidden');\n      /* <DEPRECATED> */\n      this.node.classList.remove('p-mod-hidden');\n      /* </DEPRECATED> */;\n    }\n\n    /**\n     * Hide the overlay node.\n     *\n     * @param delay - The delay (in ms) before hiding the overlay.\n     *   A delay value <= 0 will hide the overlay immediately.\n     */\n    hide(delay: number): void {\n      // Do nothing if the overlay is already hidden.\n      if (this._hidden) {\n        return;\n      }\n\n      // Hide immediately if the delay is <= 0.\n      if (delay <= 0) {\n        clearTimeout(this._timer);\n        this._timer = -1;\n        this._hidden = true;\n        this.node.classList.add('lm-mod-hidden');\n        /* <DEPRECATED> */\n        this.node.classList.add('p-mod-hidden');\n        /* </DEPRECATED> */;\n        return;\n      }\n\n      // Do nothing if a hide is already pending.\n      if (this._timer !== -1) {\n        return;\n      }\n\n      // Otherwise setup the hide timer.\n      this._timer = window.setTimeout(() => {\n        this._timer = -1;\n        this._hidden = true;\n        this.node.classList.add('lm-mod-hidden');\n        /* <DEPRECATED> */\n        this.node.classList.add('p-mod-hidden');\n        /* </DEPRECATED> */;\n      }, delay);\n    }\n\n    private _timer = -1;\n    private _hidden = true;\n  }\n\n  /**\n   * A type alias for a dock panel renderer;\n   */\n  export\n  type IRenderer = DockLayout.IRenderer;\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export\n  class Renderer implements IRenderer {\n    /**\n     * Create a new tab bar for use with a dock panel.\n     *\n     * @returns A new tab bar for a dock panel.\n     */\n    createTabBar(): TabBar<Widget> {\n      let bar = new TabBar<Widget>();\n      bar.addClass('lm-DockPanel-tabBar');\n      /* <DEPRECATED> */\n      bar.addClass('p-DockPanel-tabBar');\n      /* </DEPRECATED> */\n      return bar;\n    }\n\n    /**\n     * Create a new handle node for use with a dock panel.\n     *\n     * @returns A new handle node for a dock panel.\n     */\n    createHandle(): HTMLDivElement {\n      let handle = document.createElement('div');\n      handle.className = 'lm-DockPanel-handle';\n      /* <DEPRECATED> */\n      handle.classList.add('p-DockPanel-handle');\n      /* </DEPRECATED> */;\n      return handle;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export\n  const defaultRenderer = new Renderer();\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\n   */\n  export\n  const GOLDEN_RATIO = 0.618;\n\n  /**\n   * The default sizes for the edge drop zones, in pixels.\n   */\n  export const DEFAULT_EDGES = {\n    /**\n     * The size of the top edge dock zone for the root panel, in pixels.\n     * This is different from the others to distinguish between the top\n     * tab bar and the top root zone.\n     */\n    top: 12,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    right: 40,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    bottom: 40,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    left: 40\n  };\n\n  /**\n   * A singleton `'layout-modified'` conflatable message.\n   */\n  export\n  const LayoutModified = new ConflatableMessage('layout-modified');\n\n  /**\n   * An object which holds mouse press data.\n   */\n  export\n  interface IPressData {\n    /**\n     * The handle which was pressed.\n     */\n    handle: HTMLDivElement;\n\n    /**\n     * The X offset of the press in handle coordinates.\n     */\n    deltaX: number;\n\n    /**\n     * The Y offset of the press in handle coordinates.\n     */\n    deltaY: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n  }\n\n  /**\n   * A type alias for a drop zone.\n   */\n  export\n  type DropZone = (\n    /**\n     * An invalid drop zone.\n     */\n    'invalid' |\n\n    /**\n     * The entirety of the root dock area.\n     */\n    'root-all' |\n\n    /**\n     * The top portion of the root dock area.\n     */\n    'root-top' |\n\n    /**\n     * The left portion of the root dock area.\n     */\n    'root-left' |\n\n    /**\n     * The right portion of the root dock area.\n     */\n    'root-right' |\n\n    /**\n     * The bottom portion of the root dock area.\n     */\n    'root-bottom' |\n\n    /**\n     * The entirety of a tabbed widget area.\n     */\n    'widget-all' |\n\n    /**\n     * The top portion of tabbed widget area.\n     */\n    'widget-top' |\n\n    /**\n     * The left portion of tabbed widget area.\n     */\n    'widget-left' |\n\n    /**\n     * The right portion of tabbed widget area.\n     */\n    'widget-right' |\n\n    /**\n     * The bottom portion of tabbed widget area.\n     */\n    'widget-bottom' |\n\n    /**\n     * The the bar of a tabbed widget area.\n     */\n    'widget-tab'\n  );\n\n  /**\n   * An object which holds the drop target zone and widget.\n   */\n  export\n  interface IDropTarget {\n    /**\n     * The semantic zone for the mouse position.\n     */\n    zone: DropZone;\n\n    /**\n     * The tab area geometry for the drop zone, or `null`.\n     */\n    target: DockLayout.ITabAreaGeometry | null;\n  }\n\n  /**\n   * An attached property used to track generated tab bars.\n   */\n  export\n  const isGeneratedTabBarProperty = new AttachedProperty<Widget, boolean>({\n    name: 'isGeneratedTabBar',\n    create: () => false\n  });\n\n  /**\n   * Create a single document config for the widgets in a dock panel.\n   */\n  export\n  function createSingleDocumentConfig(panel: DockPanel): DockPanel.ILayoutConfig {\n    // Return an empty config if the panel is empty.\n    if (panel.isEmpty) {\n      return { main: null };\n    }\n\n    // Get a flat array of the widgets in the panel.\n    let widgets = toArray(panel.widgets());\n\n    // Get the first selected widget in the panel.\n    let selected = panel.selectedWidgets().next();\n\n    // Compute the current index for the new config.\n    let currentIndex = selected ? widgets.indexOf(selected) : -1;\n\n    // Return the single document config.\n    return { main: { type: 'tab-area', widgets, currentIndex } };\n  }\n\n  /**\n   * Find the drop target at the given client position.\n   */\n  export\n  function findDropTarget(\n    panel: DockPanel,\n    clientX: number,\n    clientY: number,\n    edges: DockPanel.IEdges\n  ): IDropTarget {\n    // Bail if the mouse is not over the dock panel.\n    if (!ElementExt.hitTest(panel.node, clientX, clientY)) {\n      return { zone: 'invalid', target: null };\n    }\n\n    // Look up the layout for the panel.\n    let layout = panel.layout as DockLayout;\n\n    // If the layout is empty, indicate the entire root drop zone.\n    if (layout.isEmpty) {\n      return { zone: 'root-all', target: null };\n    }\n\n    // Test the edge zones when in multiple document mode.\n    if (panel.mode === 'multiple-document') {\n      // Get the client rect for the dock panel.\n      let panelRect = panel.node.getBoundingClientRect();\n\n      // Compute the distance to each edge of the panel.\n      let pl = clientX - panelRect.left + 1;\n      let pt = clientY - panelRect.top + 1;\n      let pr = panelRect.right - clientX;\n      let pb = panelRect.bottom - clientY;\n\n      // Find the minimum distance to an edge.\n      let pd = Math.min(pt, pr, pb, pl);\n\n      // Return a root zone if the mouse is within an edge.\n      switch (pd) {\n        case pt:\n          if (pt < edges.top) {\n            return { zone: 'root-top', target: null };\n          }\n          break;\n        case pr:\n          if (pr < edges.right) {\n            return { zone: 'root-right', target: null };\n          }\n          break;\n        case pb:\n          if (pb < edges.bottom) {\n            return { zone: 'root-bottom', target: null };\n          }\n          break;\n        case pl:\n          if (pl < edges.left) {\n            return { zone: 'root-left', target: null };\n          }\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n\n    // Hit test the dock layout at the given client position.\n    let target = layout.hitTestTabAreas(clientX, clientY);\n\n    // Bail if no target area was found.\n    if (!target) {\n      return { zone: 'invalid', target: null };\n    }\n\n    // Return the whole tab area when in single document mode.\n    if (panel.mode === 'single-document') {\n      return { zone: 'widget-all', target };\n    }\n\n    // Compute the distance to each edge of the tab area.\n    let al = target.x - target.left + 1;\n    let at = target.y - target.top + 1;\n    let ar = target.left + target.width - target.x;\n    let ab = target.top + target.height - target.y;\n\n    const tabHeight = target.tabBar.node.getBoundingClientRect().height;\n    if (at < tabHeight) {\n      return { zone: 'widget-tab', target };\n    }\n\n    // Get the X and Y edge sizes for the area.\n    let rx = Math.round(target.width / 3);\n    let ry = Math.round(target.height / 3);\n\n    // If the mouse is not within an edge, indicate the entire area.\n    if (al > rx && ar > rx && at > ry && ab > ry) {\n      return { zone: 'widget-all', target };\n    }\n\n    // Scale the distances by the slenderness ratio.\n    al /= rx;\n    at /= ry;\n    ar /= rx;\n    ab /= ry;\n\n    // Find the minimum distance to the area edge.\n    let ad = Math.min(al, at, ar, ab);\n\n    // Find the widget zone for the area edge.\n    let zone: DropZone;\n    switch (ad) {\n    case al:\n      zone = 'widget-left';\n      break;\n    case at:\n      zone = 'widget-top';\n      break;\n    case ar:\n      zone = 'widget-right';\n      break;\n    case ab:\n      zone = 'widget-bottom';\n      break;\n    default:\n      throw 'unreachable';\n    }\n\n    // Return the final drop target.\n    return { zone, target };\n  }\n\n  /**\n   * Get the drop reference widget for a tab bar.\n   */\n  export\n  function getDropRef(tabBar: TabBar<Widget>): Widget | null {\n    if (tabBar.titles.length === 0) {\n      return null;\n    }\n    if (tabBar.currentTitle) {\n      return tabBar.currentTitle.owner;\n    }\n    return tabBar.titles[tabBar.titles.length - 1].owner;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, each, filter, find, max\n} from '@lumino/algorithm';\n\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A class which tracks focus among a set of widgets.\n *\n * This class is useful when code needs to keep track of the most\n * recently focused widget(s) among a set of related widgets.\n */\nexport\nclass FocusTracker<T extends Widget> implements IDisposable {\n  /**\n   * Construct a new focus tracker.\n   */\n  constructor() { }\n\n  /**\n   * Dispose of the resources held by the tracker.\n   */\n  dispose(): void {\n    // Do nothing if the tracker is already disposed.\n    if (this._counter < 0) {\n      return;\n    }\n\n    // Mark the tracker as disposed.\n    this._counter = -1;\n\n    // Clear the connections for the tracker.\n    Signal.clearData(this);\n\n    // Remove all event listeners.\n    each(this._widgets, w => {\n      w.node.removeEventListener('focus', this, true);\n      w.node.removeEventListener('blur', this, true);\n    });\n\n    // Clear the internal data structures.\n    this._activeWidget = null;\n    this._currentWidget = null;\n    this._nodes.clear();\n    this._numbers.clear();\n    this._widgets.length = 0;\n  }\n\n  /**\n   * A signal emitted when the current widget has changed.\n   */\n  get currentChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\n    return this._currentChanged;\n  }\n\n  /**\n   * A signal emitted when the active widget has changed.\n   */\n  get activeChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\n    return this._activeChanged;\n  }\n\n  /**\n   * A flag indicating whether the tracker is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._counter < 0;\n  }\n\n  /**\n   * The current widget in the tracker.\n   *\n   * #### Notes\n   * The current widget is the widget among the tracked widgets which\n   * has the *descendant node* which has most recently been focused.\n   *\n   * The current widget will not be updated if the node loses focus. It\n   * will only be updated when a different tracked widget gains focus.\n   *\n   * If the current widget is removed from the tracker, the previous\n   * current widget will be restored.\n   *\n   * This behavior is intended to follow a user's conceptual model of\n   * a semantically \"current\" widget, where the \"last thing of type X\"\n   * to be interacted with is the \"current instance of X\", regardless\n   * of whether that instance still has focus.\n   */\n  get currentWidget(): T | null {\n    return this._currentWidget;\n  }\n\n  /**\n   * The active widget in the tracker.\n   *\n   * #### Notes\n   * The active widget is the widget among the tracked widgets which\n   * has the *descendant node* which is currently focused.\n   */\n  get activeWidget(): T | null {\n    return this._activeWidget;\n  }\n\n  /**\n   * A read only array of the widgets being tracked.\n   */\n  get widgets(): ReadonlyArray<T> {\n    return this._widgets;\n  }\n\n  /**\n   * Get the focus number for a particular widget in the tracker.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The focus number for the given widget, or `-1` if the\n   *   widget has not had focus since being added to the tracker, or\n   *   is not contained by the tracker.\n   *\n   * #### Notes\n   * The focus number indicates the relative order in which the widgets\n   * have gained focus. A widget with a larger number has gained focus\n   * more recently than a widget with a smaller number.\n   *\n   * The `currentWidget` will always have the largest focus number.\n   *\n   * All widgets start with a focus number of `-1`, which indicates that\n   * the widget has not been focused since being added to the tracker.\n   */\n  focusNumber(widget: T): number {\n    let n = this._numbers.get(widget);\n    return n === undefined ? -1 : n;\n  }\n\n  /**\n   * Test whether the focus tracker contains a given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns `true` if the widget is tracked, `false` otherwise.\n   */\n  has(widget: T): boolean {\n    return this._numbers.has(widget);\n  }\n\n  /**\n   * Add a widget to the focus tracker.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * A widget will be automatically removed from the tracker if it\n   * is disposed after being added.\n   *\n   * If the widget is already tracked, this is a no-op.\n   */\n  add(widget: T): void {\n    // Do nothing if the widget is already tracked.\n    if (this._numbers.has(widget)) {\n      return;\n    }\n\n    // Test whether the widget has focus.\n    let focused = widget.node.contains(document.activeElement);\n\n    // Set up the initial focus number.\n    let n = focused ? this._counter++ : -1;\n\n    // Add the widget to the internal data structures.\n    this._widgets.push(widget);\n    this._numbers.set(widget, n);\n    this._nodes.set(widget.node, widget);\n\n    // Set up the event listeners. The capturing phase must be used\n    // since the 'focus' and 'blur' events don't bubble and Firefox\n    // doesn't support the 'focusin' or 'focusout' events.\n    widget.node.addEventListener('focus', this, true);\n    widget.node.addEventListener('blur', this, true);\n\n    // Connect the disposed signal handler.\n    widget.disposed.connect(this._onWidgetDisposed, this);\n\n    // Set the current and active widgets if needed.\n    if (focused) {\n      this._setWidgets(widget, widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the focus tracker.\n   *\n   * #### Notes\n   * If the widget is the `currentWidget`, the previous current widget\n   * will become the new `currentWidget`.\n   *\n   * A widget will be automatically removed from the tracker if it\n   * is disposed after being added.\n   *\n   * If the widget is not tracked, this is a no-op.\n   */\n  remove(widget: T): void {\n    // Bail early if the widget is not tracked.\n    if (!this._numbers.has(widget)) {\n      return;\n    }\n\n    // Disconnect the disposed signal handler.\n    widget.disposed.disconnect(this._onWidgetDisposed, this);\n\n    // Remove the event listeners.\n    widget.node.removeEventListener('focus', this, true);\n    widget.node.removeEventListener('blur', this, true);\n\n    // Remove the widget from the internal data structures.\n    ArrayExt.removeFirstOf(this._widgets, widget);\n    this._nodes.delete(widget.node);\n    this._numbers.delete(widget);\n\n    // Bail early if the widget is not the current widget.\n    if (this._currentWidget !== widget) {\n      return;\n    }\n\n    // Filter the widgets for those which have had focus.\n    let valid = filter(this._widgets, w => this._numbers.get(w) !== -1);\n\n    // Get the valid widget with the max focus number.\n    let previous = max(valid, (first, second) => {\n      let a = this._numbers.get(first)!;\n      let b = this._numbers.get(second)!;\n      return a - b;\n    }) || null;\n\n    // Set the current and active widgets.\n    this._setWidgets(previous, null);\n  }\n\n  /**\n   * Handle the DOM events for the focus tracker.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the tracked nodes. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'focus':\n      this._evtFocus(event as FocusEvent);\n      break;\n    case 'blur':\n      this._evtBlur(event as FocusEvent);\n      break;\n    }\n  }\n\n  /**\n   * Set the current and active widgets for the tracker.\n   */\n  private _setWidgets(current: T | null, active: T | null): void {\n    // Swap the current widget.\n    let oldCurrent = this._currentWidget;\n    this._currentWidget = current;\n\n    // Swap the active widget.\n    let oldActive = this._activeWidget;\n    this._activeWidget = active;\n\n    // Emit the `currentChanged` signal if needed.\n    if (oldCurrent !== current) {\n      this._currentChanged.emit({ oldValue: oldCurrent, newValue: current });\n    }\n\n    // Emit the `activeChanged` signal if needed.\n    if (oldActive !== active) {\n      this._activeChanged.emit({ oldValue: oldActive, newValue: active });\n    }\n  }\n\n  /**\n   * Handle the `'focus'` event for a tracked widget.\n   */\n  private _evtFocus(event: FocusEvent): void {\n    // Find the widget which gained focus, which is known to exist.\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\n\n    // Update the focus number if necessary.\n    if (widget !== this._currentWidget) {\n      this._numbers.set(widget, this._counter++);\n    }\n\n    // Set the current and active widgets.\n    this._setWidgets(widget, widget);\n  }\n\n  /**\n   * Handle the `'blur'` event for a tracked widget.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    // Find the widget which lost focus, which is known to exist.\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\n\n    // Get the node which being focused after this blur.\n    let focusTarget = event.relatedTarget as HTMLElement;\n\n    // If no other node is being focused, clear the active widget.\n    if (!focusTarget) {\n      this._setWidgets(this._currentWidget, null);\n      return;\n    }\n\n    // Bail if the focus widget is not changing.\n    if (widget.node.contains(focusTarget)) {\n      return;\n    }\n\n    // If no tracked widget is being focused, clear the active widget.\n    if (!find(this._widgets, w => w.node.contains(focusTarget))) {\n      this._setWidgets(this._currentWidget, null);\n      return;\n    }\n  }\n\n  /**\n   * Handle the `disposed` signal for a tracked widget.\n   */\n  private _onWidgetDisposed(sender: T): void {\n    this.remove(sender);\n  }\n\n  private _counter = 0;\n  private _widgets: T[] = [];\n  private _activeWidget: T | null = null;\n  private _currentWidget: T | null = null;\n  private _numbers = new Map<T, number>();\n  private _nodes = new Map<HTMLElement, T>();\n  private _activeChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(this);\n  private _currentChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(this);\n}\n\n\n/**\n * The namespace for the `FocusTracker` class statics.\n */\nexport\nnamespace FocusTracker {\n  /**\n   * An arguments object for the changed signals.\n   */\n  export\n  interface IChangedArgs<T extends Widget> {\n    /**\n     * The old value for the widget.\n     */\n    oldValue: T | null;\n\n    /**\n     * The new value for the widget.\n     */\n    newValue: T | null;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, IIterator, each, map\n} from '@lumino/algorithm';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  AttachedProperty\n} from '@lumino/properties';\n\nimport {\n  BoxEngine, BoxSizer\n} from './boxengine';\n\nimport {\n Layout, LayoutItem\n} from './layout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A layout which arranges its widgets in a grid.\n */\nexport\nclass GridLayout extends Layout {\n  /**\n   * Construct a new grid layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: GridLayout.IOptions = {}) {\n    super(options);\n    if (options.rowCount !== undefined) {\n      Private.reallocSizers(this._rowSizers, options.rowCount);\n    }\n    if (options.columnCount !== undefined) {\n      Private.reallocSizers(this._columnSizers, options.columnCount);\n    }\n    if (options.rowSpacing !== undefined) {\n      this._rowSpacing = Private.clampValue(options.rowSpacing);\n    }\n    if (options.columnSpacing !== undefined) {\n      this._columnSpacing = Private.clampValue(options.columnSpacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the widgets and layout items.\n    each(this._items, item => {\n      let widget = item.widget;\n      item.dispose();\n      widget.dispose();\n    });\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._rowStarts.length = 0;\n    this._rowSizers.length = 0;\n    this._columnStarts.length = 0;\n    this._columnSizers.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Get the number of rows in the layout.\n   */\n  get rowCount(): number {\n    return this._rowSizers.length;\n  }\n\n  /**\n   * Set the number of rows in the layout.\n   *\n   * #### Notes\n   * The minimum row count is `1`.\n   */\n  set rowCount(value: number) {\n    // Do nothing if the row count does not change.\n    if (value === this.rowCount) {\n      return;\n    }\n\n    // Reallocate the row sizers.\n    Private.reallocSizers(this._rowSizers, value);\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the number of columns in the layout.\n   */\n  get columnCount(): number {\n    return this._columnSizers.length;\n  }\n\n  /**\n   * Set the number of columns in the layout.\n   *\n   * #### Notes\n   * The minimum column count is `1`.\n   */\n  set columnCount(value: number) {\n    // Do nothing if the column count does not change.\n    if (value === this.columnCount) {\n      return;\n    }\n\n    // Reallocate the column sizers.\n    Private.reallocSizers(this._columnSizers, value);\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the row spacing for the layout.\n   */\n  get rowSpacing(): number {\n    return this._rowSpacing;\n  }\n\n  /**\n   * Set the row spacing for the layout.\n   */\n  set rowSpacing(value: number) {\n    // Clamp the spacing to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the spacing does not change\n    if (this._rowSpacing === value) {\n      return;\n    }\n\n    // Update the internal spacing.\n    this._rowSpacing = value;\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the column spacing for the layout.\n   */\n  get columnSpacing(): number {\n    return this._columnSpacing;\n  }\n\n  /**\n   * Set the col spacing for the layout.\n   */\n  set columnSpacing(value: number) {\n    // Clamp the spacing to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the spacing does not change\n    if (this._columnSpacing === value) {\n      return;\n    }\n\n    // Update the internal spacing.\n    this._columnSpacing = value;\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the stretch factor for a specific row.\n   *\n   * @param index - The row index of interest.\n   *\n   * @returns The stretch factor for the row.\n   *\n   * #### Notes\n   * This returns `-1` if the index is out of range.\n   */\n  rowStretch(index: number): number {\n    let sizer = this._rowSizers[index];\n    return sizer ? sizer.stretch : -1;\n  }\n\n  /**\n   * Set the stretch factor for a specific row.\n   *\n   * @param index - The row index of interest.\n   *\n   * @param value - The stretch factor for the row.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  setRowStretch(index: number, value: number): void {\n    // Look up the row sizer.\n    let sizer = this._rowSizers[index];\n\n    // Bail if the index is out of range.\n    if (!sizer) {\n      return;\n    }\n\n    // Clamp the value to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the stretch does not change.\n    if (sizer.stretch === value) {\n      return;\n    }\n\n    // Update the sizer stretch.\n    sizer.stretch = value;\n\n    // Schedule an update of the parent.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Get the stretch factor for a specific column.\n   *\n   * @param index - The column index of interest.\n   *\n   * @returns The stretch factor for the column.\n   *\n   * #### Notes\n   * This returns `-1` if the index is out of range.\n   */\n  columnStretch(index: number): number {\n    let sizer = this._columnSizers[index];\n    return sizer ? sizer.stretch : -1;\n  }\n\n  /**\n   * Set the stretch factor for a specific column.\n   *\n   * @param index - The column index of interest.\n   *\n   * @param value - The stretch factor for the column.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  setColumnStretch(index: number, value: number): void {\n    // Look up the column sizer.\n    let sizer = this._columnSizers[index];\n\n    // Bail if the index is out of range.\n    if (!sizer) {\n      return;\n    }\n\n    // Clamp the value to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the stretch does not change.\n    if (sizer.stretch === value) {\n      return;\n    }\n\n    // Update the sizer stretch.\n    sizer.stretch = value;\n\n    // Schedule an update of the parent.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  iter(): IIterator<Widget> {\n    return map(this._items, item => item.widget);\n  }\n\n  /**\n   * Add a widget to the grid layout.\n   *\n   * @param widget - The widget to add to the layout.\n   *\n   * #### Notes\n   * If the widget is already contained in the layout, this is no-op.\n   */\n  addWidget(widget: Widget): void {\n    // Look up the index for the widget.\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\n\n    // Bail if the widget is already in the layout.\n    if (i !== -1) {\n      return;\n    }\n\n    // Add the widget to the layout.\n    this._items.push(new LayoutItem(widget));\n\n    // Attach the widget to the parent.\n    if (this.parent) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the grid layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Look up the index for the widget.\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\n\n    // Bail if the widget is not in the layout.\n    if (i === -1) {\n      return;\n    }\n\n    // Remove the widget from the layout.\n    let item = ArrayExt.removeAt(this._items, i)!;\n\n    // Detach the widget from the parent.\n    if (this.parent) {\n      this.detachWidget(widget);\n    }\n\n    // Dispose the layout item.\n    item.dispose();\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    each(this, widget => { this.attachWidget(widget); });\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param widget - The widget to attach to the parent.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param widget - The widget to detach from the parent.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Reset the min sizes of the sizers.\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\n      this._rowSizers[i].minSize = 0;\n    }\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\n      this._columnSizers[i].minSize = 0;\n    }\n\n    // Filter for the visible layout items.\n    let items = this._items.filter(it => !it.isHidden);\n\n    // Fit the layout items.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      items[i].fit();\n    }\n\n    // Get the max row and column index.\n    let maxRow = this.rowCount - 1;\n    let maxCol = this.columnCount - 1;\n\n    // Sort the items by row span.\n    items.sort(Private.rowSpanCmp);\n\n    // Update the min sizes of the row sizers.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = items[i];\n\n      // Get the row bounds for the item.\n      let config = GridLayout.getCellConfig(item.widget);\n      let r1 = Math.min(config.row, maxRow);\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\n\n      // Distribute the minimum height to the sizers as needed.\n      Private.distributeMin(this._rowSizers, r1, r2, item.minHeight);\n    }\n\n    // Sort the items by column span.\n    items.sort(Private.columnSpanCmp);\n\n    // Update the min sizes of the column sizers.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = items[i];\n\n      // Get the column bounds for the item.\n      let config = GridLayout.getCellConfig(item.widget);\n      let c1 = Math.min(config.column, maxCol);\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\n\n      // Distribute the minimum width to the sizers as needed.\n      Private.distributeMin(this._columnSizers, c1, c2, item.minWidth);\n    }\n\n    // If no size constraint is needed, just update the parent.\n    if (this.fitPolicy === 'set-no-constraint') {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n      return;\n    }\n\n    // Set up the computed min size.\n    let minH = maxRow * this._rowSpacing;\n    let minW = maxCol * this._columnSpacing;\n\n    // Add the sizer minimums to the computed min size.\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\n      minH += this._rowSizers[i].minSize;\n    }\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\n      minW += this._columnSizers[i].minSize;\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = this._box = ElementExt.boxSizing(this.parent!.node);\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the layout area adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Get the max row and column index.\n    let maxRow = this.rowCount - 1;\n    let maxCol = this.columnCount - 1;\n\n    // Compute the total fixed row and column space.\n    let fixedRowSpace = maxRow * this._rowSpacing;\n    let fixedColSpace = maxCol * this._columnSpacing;\n\n    // Distribute the available space to the box sizers.\n    BoxEngine.calc(this._rowSizers, Math.max(0, height - fixedRowSpace));\n    BoxEngine.calc(this._columnSizers, Math.max(0, width - fixedColSpace));\n\n    // Update the row start positions.\n    for (let i = 0, pos = top, n = this.rowCount; i < n; ++i) {\n      this._rowStarts[i] = pos;\n      pos += this._rowSizers[i].size + this._rowSpacing;\n    }\n\n    // Update the column start positions.\n    for (let i = 0, pos = left, n = this.columnCount; i < n; ++i) {\n      this._columnStarts[i] = pos;\n      pos += this._columnSizers[i].size + this._columnSpacing;\n    }\n\n    // Update the geometry of the layout items.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Fetch the cell bounds for the widget.\n      let config = GridLayout.getCellConfig(item.widget);\n      let r1 = Math.min(config.row, maxRow);\n      let c1 = Math.min(config.column, maxCol);\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\n\n      // Compute the cell geometry.\n      let x = this._columnStarts[c1];\n      let y = this._rowStarts[r1];\n      let w = this._columnStarts[c2] + this._columnSizers[c2].size - x;\n      let h = this._rowStarts[r2] + this._rowSizers[r2].size - y;\n\n      // Update the geometry of the layout item.\n      item.update(x, y, w, h);\n    }\n  }\n\n  private _dirty = false;\n  private _rowSpacing = 4;\n  private _columnSpacing = 4;\n  private _items: LayoutItem[] = [];\n  private _rowStarts: number[] = [];\n  private _columnStarts: number[] = [];\n  private _rowSizers: BoxSizer[] = [new BoxSizer()];\n  private _columnSizers: BoxSizer[] = [new BoxSizer()];\n  private _box: ElementExt.IBoxSizing | null = null;\n}\n\n\n/**\n * The namespace for the `GridLayout` class statics.\n */\nexport\nnamespace GridLayout {\n  /**\n   * An options object for initializing a grid layout.\n   */\n  export\n  interface IOptions extends Layout.IOptions {\n    /**\n     * The initial row count for the layout.\n     *\n     * The default is `1`.\n     */\n    rowCount?: number;\n\n    /**\n     * The initial column count for the layout.\n     *\n     * The default is `1`.\n     */\n    columnCount?: number;\n\n    /**\n     * The spacing between rows in the layout.\n     *\n     * The default is `4`.\n     */\n    rowSpacing?: number;\n\n    /**\n     * The spacing between columns in the layout.\n     *\n     * The default is `4`.\n     */\n    columnSpacing?: number;\n  }\n\n  /**\n   * An object which holds the cell configuration for a widget.\n   */\n  export\n  interface ICellConfig {\n    /**\n     * The row index for the widget.\n     */\n    readonly row: number;\n\n    /**\n     * The column index for the widget.\n     */\n    readonly column: number;\n\n    /**\n     * The row span for the widget.\n     */\n    readonly rowSpan: number;\n\n    /**\n     * The column span for the widget.\n     */\n    readonly columnSpan: number;\n  }\n\n  /**\n   * Get the cell config for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The cell config for the widget.\n   */\n  export\n  function getCellConfig(widget: Widget): ICellConfig {\n    return Private.cellConfigProperty.get(widget);\n  }\n\n  /**\n   * Set the cell config for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the cell config.\n   */\n  export\n  function setCellConfig(widget: Widget, value: Partial<ICellConfig>): void {\n    Private.cellConfigProperty.set(widget, Private.normalizeConfig(value));\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for the widget cell config.\n   */\n  export\n  const cellConfigProperty = new AttachedProperty<Widget, GridLayout.ICellConfig>({\n    name: 'cellConfig',\n    create: () => ({ row: 0, column: 0, rowSpan: 1, columnSpan: 1 }),\n    changed: onChildCellConfigChanged\n  });\n\n  /**\n   * Normalize a partial cell config object.\n   */\n  export\n  function normalizeConfig(config: Partial<GridLayout.ICellConfig>): GridLayout.ICellConfig {\n    let row = Math.max(0, Math.floor(config.row || 0));\n    let column = Math.max(0, Math.floor(config.column || 0));\n    let rowSpan = Math.max(1, Math.floor(config.rowSpan || 0));\n    let columnSpan = Math.max(1, Math.floor(config.columnSpan || 0));\n    return { row, column, rowSpan, columnSpan };\n  }\n\n  /**\n   * Clamp a value to an integer >= 0.\n   */\n  export\n  function clampValue(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n\n  /**\n   * A sort comparison function for row spans.\n   */\n  export\n  function rowSpanCmp(a: LayoutItem, b: LayoutItem): number {\n    let c1 = cellConfigProperty.get(a.widget);\n    let c2 = cellConfigProperty.get(b.widget);\n    return c1.rowSpan - c2.rowSpan;\n  }\n\n  /**\n   * A sort comparison function for column spans.\n   */\n  export\n  function columnSpanCmp(a: LayoutItem, b: LayoutItem): number {\n    let c1 = cellConfigProperty.get(a.widget);\n    let c2 = cellConfigProperty.get(b.widget);\n    return c1.columnSpan - c2.columnSpan;\n  }\n\n  /**\n   * Reallocate the box sizers for the given grid dimensions.\n   */\n  export\n  function reallocSizers(sizers: BoxSizer[], count: number): void {\n    // Coerce the count to the valid range.\n    count = Math.max(1, Math.floor(count));\n\n    // Add the missing sizers.\n    while (sizers.length < count) {\n      sizers.push(new BoxSizer());\n    }\n\n    // Remove the extra sizers.\n    if (sizers.length > count) {\n      sizers.length = count;\n    }\n  }\n\n  /**\n   * Distribute a min size constraint across a range of sizers.\n   */\n  export\n  function distributeMin(sizers: BoxSizer[], i1: number, i2: number, minSize: number): void {\n    // Sanity check the indices.\n    if (i2 < i1) {\n      return;\n    }\n\n    // Handle the simple case of no cell span.\n    if (i1 === i2) {\n      let sizer = sizers[i1];\n      sizer.minSize = Math.max(sizer.minSize, minSize);\n      return;\n    }\n\n    // Compute the total current min size of the span.\n    let totalMin = 0;\n    for (let i = i1; i <= i2; ++i) {\n      totalMin += sizers[i].minSize;\n    }\n\n    // Do nothing if the total is greater than the required.\n    if (totalMin >= minSize) {\n      return;\n    }\n\n    // Compute the portion of the space to allocate to each sizer.\n    let portion = (minSize - totalMin) / (i2 - i1 + 1);\n\n    // Add the portion to each sizer.\n    for (let i = i1; i <= i2; ++i) {\n      sizers[i].minSize += portion;\n    }\n  }\n\n  /**\n   * The change handler for the child cell config property.\n   */\n  function onChildCellConfigChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof GridLayout) {\n      child.parent.fit();\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt\n} from '@lumino/algorithm';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  getKeyboardLayout\n} from '@lumino/keyboard';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  ElementARIAAttrs, ElementDataset, VirtualDOM, VirtualElement, h\n} from '@lumino/virtualdom';\n\nimport {\n  Menu\n} from './menu';\n\nimport {\n  Title\n} from './title';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which displays menus as a canonical menu bar.\n */\nexport\nclass MenuBar extends Widget {\n  /**\n   * Construct a new menu bar.\n   *\n   * @param options - The options for initializing the menu bar.\n   */\n  constructor(options: MenuBar.IOptions = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-MenuBar');\n    /* <DEPRECATED> */\n    this.addClass('p-MenuBar');\n    /* </DEPRECATED> */\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.renderer = options.renderer || MenuBar.defaultRenderer;\n    this._forceItemsPosition = options.forceItemsPosition || { forceX: true, forceY: true };\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._closeChildMenu();\n    this._menus.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the menu bar.\n   */\n  readonly renderer: MenuBar.IRenderer;\n\n  /**\n   * The child menu of the menu bar.\n   *\n   * #### Notes\n   * This will be `null` if the menu bar does not have an open menu.\n   */\n  get childMenu(): Menu | null {\n    return this._childMenu;\n  }\n\n  /**\n   * Get the menu bar content node.\n   *\n   * #### Notes\n   * This is the node which holds the menu title nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName('lm-MenuBar-content')[0] as HTMLUListElement;\n  }\n\n  /**\n   * Get the currently active menu.\n   */\n  get activeMenu(): Menu | null {\n    return this._menus[this._activeIndex] || null;\n  }\n\n  /**\n   * Set the currently active menu.\n   *\n   * #### Notes\n   * If the menu does not exist, the menu will be set to `null`.\n   */\n  set activeMenu(value: Menu | null) {\n    this.activeIndex = value ? this._menus.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently active menu.\n   *\n   * #### Notes\n   * This will be `-1` if no menu is active.\n   */\n  get activeIndex(): number {\n    return this._activeIndex;\n  }\n\n  /**\n   * Set the index of the currently active menu.\n   *\n   * #### Notes\n   * If the menu cannot be activated, the index will be set to `-1`.\n   */\n  set activeIndex(value: number) {\n    // Adjust the value for an out of range index.\n    if (value < 0 || value >= this._menus.length) {\n      value = -1;\n    }\n\n    // Bail early if the index will not change.\n    if (this._activeIndex === value) {\n      return;\n    }\n\n    // Update the active index.\n    this._activeIndex = value;\n\n    // Update focus to new active index\n    if (this._activeIndex >= 0 && this.contentNode.childNodes[this._activeIndex]) {\n      (this.contentNode.childNodes[this._activeIndex] as HTMLElement).focus();\n    }\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * A read-only array of the menus in the menu bar.\n   */\n  get menus(): ReadonlyArray<Menu> {\n    return this._menus;\n  }\n\n  /**\n   * Open the active menu and activate its first menu item.\n   *\n   * #### Notes\n   * If there is no active menu, this is a no-op.\n   */\n  openActiveMenu(): void {\n    // Bail early if there is no active item.\n    if (this._activeIndex === -1) {\n      return;\n    }\n\n    // Open the child menu.\n    this._openChildMenu();\n\n    // Activate the first item in the child menu.\n    if (this._childMenu) {\n      this._childMenu.activeIndex = -1;\n      this._childMenu.activateNextItem();\n    }\n  }\n\n  /**\n   * Add a menu to the end of the menu bar.\n   *\n   * @param menu - The menu to add to the menu bar.\n   *\n   * #### Notes\n   * If the menu is already added to the menu bar, it will be moved.\n   */\n  addMenu(menu: Menu): void {\n    this.insertMenu(this._menus.length, menu);\n  }\n\n  /**\n   * Insert a menu into the menu bar at the specified index.\n   *\n   * @param index - The index at which to insert the menu.\n   *\n   * @param menu - The menu to insert into the menu bar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the menus.\n   *\n   * If the menu is already added to the menu bar, it will be moved.\n   */\n  insertMenu(index: number, menu: Menu): void {\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Look up the index of the menu.\n    let i = this._menus.indexOf(menu);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._menus.length));\n\n    // If the menu is not in the array, insert it.\n    if (i === -1) {\n      // Insert the menu into the array.\n      ArrayExt.insert(this._menus, j, menu);\n\n      // Add the styling class to the menu.\n      menu.addClass('lm-MenuBar-menu');\n      /* <DEPRECATED> */\n      menu.addClass('p-MenuBar-menu');\n      /* </DEPRECATED> */\n\n      // Connect to the menu signals.\n      menu.aboutToClose.connect(this._onMenuAboutToClose, this);\n      menu.menuRequested.connect(this._onMenuMenuRequested, this);\n      menu.title.changed.connect(this._onTitleChanged, this);\n\n      // Schedule an update of the items.\n      this.update();\n\n      // There is nothing more to do.\n      return;\n    }\n\n    // Otherwise, the menu exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._menus.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return;\n    }\n\n    // Move the menu to the new locations.\n    ArrayExt.move(this._menus, i, j);\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Remove a menu from the menu bar.\n   *\n   * @param menu - The menu to remove from the menu bar.\n   *\n   * #### Notes\n   * This is a no-op if the menu is not in the menu bar.\n   */\n  removeMenu(menu: Menu): void {\n    this.removeMenuAt(this._menus.indexOf(menu));\n  }\n\n  /**\n   * Remove the menu at a given index from the menu bar.\n   *\n   * @param index - The index of the menu to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeMenuAt(index: number): void {\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Remove the menu from the array.\n    let menu = ArrayExt.removeAt(this._menus, index);\n\n    // Bail if the index is out of range.\n    if (!menu) {\n      return;\n    }\n\n    // Disconnect from the menu signals.\n    menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\n    menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\n    menu.title.changed.disconnect(this._onTitleChanged, this);\n\n    // Remove the styling class from the menu.\n    menu.removeClass('lm-MenuBar-menu');\n    /* <DEPRECATED> */\n    menu.removeClass('p-MenuBar-menu');\n    /* </DEPRECATED> */\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Remove all menus from the menu bar.\n   */\n  clearMenus(): void {\n    // Bail if there is nothing to remove.\n    if (this._menus.length === 0) {\n      return;\n    }\n\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Disconnect from the menu signals and remove the styling class.\n    for (let menu of this._menus) {\n      menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\n      menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\n      menu.title.changed.disconnect(this._onTitleChanged, this);\n      menu.removeClass('lm-MenuBar-menu');\n      /* <DEPRECATED> */\n      menu.removeClass('p-MenuBar-menu');\n      /* </DEPRECATED> */\n    }\n\n    // Clear the menus array.\n    this._menus.length = 0;\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Handle the DOM events for the menu bar.\n   *\n   * @param event - The DOM event sent to the menu bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the menu bar's DOM nodes. It\n   * should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseleave':\n      this._evtMouseLeave(event as MouseEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('mousedown', this);\n    this.node.addEventListener('mousemove', this);\n    this.node.addEventListener('mouseleave', this);\n    this.node.addEventListener('contextmenu', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('mousedown', this);\n    this.node.removeEventListener('mousemove', this);\n    this.node.removeEventListener('mouseleave', this);\n    this.node.removeEventListener('contextmenu', this);\n    this._closeChildMenu();\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let menus = this._menus;\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let content = new Array<VirtualElement>(menus.length);\n    for (let i = 0, n = menus.length; i < n; ++i) {\n      let title = menus[i].title;\n      let active = i === activeIndex;\n      content[i] = renderer.renderItem({\n        title,\n        active,\n        onfocus: () => {\n          this.activeIndex = i;\n        }\n      });\n    }\n    VirtualDOM.render(content, this.contentNode);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the menu bar.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // A menu bar handles all keydown events.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the key code for the event.\n    let kc = event.keyCode;\n\n    // Enter, Up Arrow, Down Arrow\n    if (kc === 13 || kc === 38 || kc === 40) {\n      this.openActiveMenu();\n      return;\n    }\n\n    // Escape\n    if (kc === 27) {\n      this._closeChildMenu();\n      this.activeIndex = -1;\n      this.node.blur();\n      return;\n    }\n\n    // Left Arrow\n    if (kc === 37) {\n      let i = this._activeIndex;\n      let n = this._menus.length;\n      this.activeIndex = i === 0 ? n - 1 : i - 1;\n      return;\n    }\n\n    // Right Arrow\n    if (kc === 39) {\n      let i = this._activeIndex;\n      let n = this._menus.length;\n      this.activeIndex = i === n - 1 ? 0 : i + 1;\n      return;\n    }\n\n    // Get the pressed key character.\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\n\n    // Bail if the key is not valid.\n    if (!key) {\n      return;\n    }\n\n    // Search for the next best matching mnemonic item.\n    let start = this._activeIndex + 1;\n    let result = Private.findMnemonic(this._menus, key, start);\n\n    // Handle the requested mnemonic based on the search results.\n    // If exactly one mnemonic is matched, that menu is opened.\n    // Otherwise, the next mnemonic is activated if available,\n    // followed by the auto mnemonic if available.\n    if (result.index !== -1 && !result.multiple) {\n      this.activeIndex = result.index;\n      this.openActiveMenu();\n    } else if (result.index !== -1) {\n      this.activeIndex = result.index;\n    } else if (result.auto !== -1) {\n      this.activeIndex = result.auto;\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the menu bar.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Bail if the mouse press was not on the menu bar. This can occur\n    // when the document listener is installed for an active menu bar.\n    if (!ElementExt.hitTest(this.node, event.clientX, event.clientY)) {\n      return;\n    }\n\n    // Stop the propagation of the event. Immediate propagation is\n    // also stopped so that an open menu does not handle the event.\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    // Check if the mouse is over one of the menu items.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // If the press was not on an item, close the child menu.\n    if (index === -1) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // If the press was not the left mouse button, do nothing further.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Otherwise, toggle the open state of the child menu.\n    if (this._childMenu) {\n      this._closeChildMenu();\n      this.activeIndex = index;\n    } else {\n      this.activeIndex = index;\n      this._openChildMenu();\n    }\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the menu bar.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Check if the mouse is over one of the menu items.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // Bail early if the active index will not change.\n    if (index === this._activeIndex) {\n      return;\n    }\n\n    // Bail early if a child menu is open and the mouse is not over\n    // an item. This allows the child menu to be kept open when the\n    // mouse is over the empty part of the menu bar.\n    if (index === -1 && this._childMenu) {\n      return;\n    }\n\n    // Update the active index to the hovered item.\n    this.activeIndex = index;\n\n    // Open the new menu if a menu is already open.\n    if (this._childMenu) {\n      this._openChildMenu();\n    }\n  }\n\n  /**\n   * Handle the `'mouseleave'` event for the menu bar.\n   */\n  private _evtMouseLeave(event: MouseEvent): void {\n    // Reset the active index if there is no open menu.\n    if (!this._childMenu) {\n      this.activeIndex = -1;\n    }\n  }\n\n  /**\n   * Open the child menu at the active index immediately.\n   *\n   * If a different child menu is already open, it will be closed,\n   * even if there is no active menu.\n   */\n  private _openChildMenu(): void {\n    // If there is no active menu, close the current menu.\n    let newMenu = this.activeMenu;\n    if (!newMenu) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // Bail if there is no effective menu change.\n    let oldMenu = this._childMenu;\n    if (oldMenu === newMenu) {\n      return;\n    }\n\n    // Swap the internal menu reference.\n    this._childMenu = newMenu;\n\n    // Close the current menu, or setup for the new menu.\n    if (oldMenu) {\n      oldMenu.close();\n    } else {\n      this.addClass('lm-mod-active');\n      /* <DEPRECATED> */\n      this.addClass('p-mod-active');\n      /* </DEPRECATED> */\n      document.addEventListener('mousedown', this, true);\n    }\n\n    // Ensure the menu bar is updated and look up the item node.\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n    let itemNode = this.contentNode.children[this._activeIndex];\n\n    // Get the positioning data for the new menu.\n    let { left, bottom } = (itemNode as HTMLElement).getBoundingClientRect();\n\n    // Open the new menu at the computed location.\n    newMenu.open(left, bottom, this._forceItemsPosition);\n  }\n\n  /**\n   * Close the child menu immediately.\n   *\n   * This is a no-op if a child menu is not open.\n   */\n  private _closeChildMenu(): void {\n    // Bail if no child menu is open.\n    if (!this._childMenu) {\n      return;\n    }\n\n    // Remove the active class from the menu bar.\n    this.removeClass('lm-mod-active');\n    /* <DEPRECATED> */\n    this.removeClass('p-mod-active');\n    /* </DEPRECATED> */\n\n    // Remove the document listeners.\n    document.removeEventListener('mousedown', this, true);\n\n    // Clear the internal menu reference.\n    let menu = this._childMenu;\n    this._childMenu = null;\n\n    // Close the menu.\n    menu.close();\n\n    // Reset the active index.\n    this.activeIndex = -1;\n  }\n\n  /**\n   * Handle the `aboutToClose` signal of a menu.\n   */\n  private _onMenuAboutToClose(sender: Menu): void {\n    // Bail if the sender is not the child menu.\n    if (sender !== this._childMenu) {\n      return;\n    }\n\n    // Remove the active class from the menu bar.\n    this.removeClass('lm-mod-active');\n    /* <DEPRECATED> */\n    this.removeClass('p-mod-active');\n    /* </DEPRECATED> */\n\n    // Remove the document listeners.\n    document.removeEventListener('mousedown', this, true);\n\n    // Clear the internal menu reference.\n    this._childMenu = null;\n\n    // Reset the active index.\n    this.activeIndex = -1;\n  }\n\n  /**\n   * Handle the `menuRequested` signal of a child menu.\n   */\n  private _onMenuMenuRequested(sender: Menu, args: 'next' | 'previous'): void {\n    // Bail if the sender is not the child menu.\n    if (sender !== this._childMenu) {\n      return;\n    }\n\n    // Look up the active index and menu count.\n    let i = this._activeIndex;\n    let n = this._menus.length;\n\n    // Active the next requested index.\n    switch (args) {\n    case 'next':\n      this.activeIndex = i === n - 1 ? 0 : i + 1;\n      break;\n    case 'previous':\n      this.activeIndex = i === 0 ? n - 1 : i - 1;\n      break;\n    }\n\n    // Open the active menu.\n    this.openActiveMenu();\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(): void {\n    this.update();\n  }\n\n  private _activeIndex = -1;\n  private _forceItemsPosition: Menu.IOpenOptions;\n  private _menus: Menu[] = [];\n  private _childMenu: Menu | null = null;\n}\n\n\n/**\n * The namespace for the `MenuBar` class statics.\n */\nexport\nnamespace MenuBar {\n  /**\n   * An options object for creating a menu bar.\n   */\n  export\n  interface IOptions {\n    /**\n     * A custom renderer for creating menu bar content.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n    /**\n     * Whether to force the position of the menu. The MenuBar forces the\n     * coordinates of its menus by default. With this option you can disable it.\n     *\n     * Setting to `false` will enable the logic which repositions the\n     * coordinates of the menu if it will not fit entirely on screen.\n     *\n     * The default is `true`.\n     */\n    forceItemsPosition?: Menu.IOpenOptions;\n  }\n\n  /**\n   * An object which holds the data to render a menu bar item.\n   */\n  export\n  interface IRenderData {\n    /**\n     * The title to be rendered.\n     */\n    readonly title: Title<Widget>;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n\n    readonly onfocus?: (event: FocusEvent) => void;\n  }\n\n  /**\n   * A renderer for use with a menu bar.\n   */\n  export\n  interface IRenderer {\n    /**\n     * Render the virtual element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export\n  class Renderer implements IRenderer {\n    /**\n     * Construct a new renderer.\n     */\n    constructor() { }\n\n    /**\n     * Render the virtual element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      let aria = this.createItemARIA(data);\n      return (\n        h.li({ className, dataset, tabindex: '0', onfocus: data.onfocus, ...aria },\n          this.renderIcon(data),\n          this.renderLabel(data)\n        )\n      );\n    }\n\n    /**\n     * Render the icon element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the item icon.\n     */\n    renderIcon(data: IRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      /* <DEPRECATED> */\n      if (typeof data.title.icon === 'string') {\n        return h.div({className}, data.title.iconLabel);\n      }\n      /* </DEPRECATED> */\n\n      // if data.title.icon is undefined, it will be ignored\n      return h.div({className}, data.title.icon!, data.title.iconLabel);\n    }\n\n    /**\n     * Render the label element for a menu item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the item label.\n     */\n    renderLabel(data: IRenderData): VirtualElement {\n      let content = this.formatLabel(data);\n      return h.div({ className:\n        'lm-MenuBar-itemLabel'\n          /* <DEPRECATED> */\n            + ' p-MenuBar-itemLabel'\n          /* </DEPRECATED> */\n      }, content);\n    }\n\n    /**\n     * Create the class name for the menu bar item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the menu item.\n     */\n    createItemClass(data: IRenderData): string {\n      let name = 'lm-MenuBar-item';\n      /* <DEPRECATED> */\n      name += ' p-MenuBar-item';\n      /* </DEPRECATED> */\n      if (data.title.className) {\n        name += ` ${data.title.className}`;\n      }\n      if (data.active) {\n        name += ' lm-mod-active';\n      /* <DEPRECATED> */\n      name += ' p-mod-active';\n      /* </DEPRECATED> */\n      }\n      return name;\n    }\n\n    /**\n     * Create the dataset for a menu bar item.\n     *\n     * @param data - The data to use for the item.\n     *\n     * @returns The dataset for the menu bar item.\n     */\n    createItemDataset(data: IRenderData): ElementDataset {\n      return data.title.dataset;\n    }\n\n    /**\n     * Create the aria attributes for menu bar item.\n     * \n     * @param data - The data to use for the aria attributes.\n     * \n     * @returns The aria attributes object for the item.\n     */\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\n      return {role: 'menuitem', 'aria-haspopup': 'true'};\n    }\n\n    /**\n     * Create the class name for the menu bar item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IRenderData): string {\n      let name = 'lm-MenuBar-itemIcon';\n      /* <DEPRECATED> */\n      name += ' p-MenuBar-itemIcon';\n      /* </DEPRECATED> */\n      let extra = data.title.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    /**\n     * Create the render content for the label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatLabel(data: IRenderData): h.Child {\n      // Fetch the label text and mnemonic index.\n      let { label, mnemonic } = data.title;\n\n      // If the index is out of range, do not modify the label.\n      if (mnemonic < 0 || mnemonic >= label.length) {\n        return label;\n      }\n\n      // Split the label into parts.\n      let prefix = label.slice(0, mnemonic);\n      let suffix = label.slice(mnemonic + 1);\n      let char = label[mnemonic];\n\n      // Wrap the mnemonic character in a span.\n      let span = h.span({\n        className: 'lm-MenuBar-itemMnemonic'\n          /* <DEPRECATED> */\n          + ' p-MenuBar-itemMnemonic'\n          /* </DEPRECATED> */\n      }, char);\n\n      // Return the content parts.\n      return [prefix, span, suffix];\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export\n  const defaultRenderer = new Renderer();\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create the DOM node for a menu bar.\n   */\n  export\n  function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.className = 'lm-MenuBar-content';\n    /* <DEPRECATED> */\n    content.classList.add('p-MenuBar-content');\n    /* </DEPRECATED> */\n    node.appendChild(content);\n    content.setAttribute('role', 'menubar');\n    node.tabIndex = 0;\n    content.tabIndex = 0;\n    return node;\n  }\n\n  /**\n   * The results of a mnemonic search.\n   */\n  export\n  interface IMnemonicResult {\n    /**\n     * The index of the first matching mnemonic item, or `-1`.\n     */\n    index: number;\n\n    /**\n     * Whether multiple mnemonic items matched.\n     */\n    multiple: boolean;\n\n    /**\n     * The index of the first auto matched non-mnemonic item.\n     */\n    auto: number;\n  }\n\n  /**\n   * Find the best matching mnemonic item.\n   *\n   * The search starts at the given index and wraps around.\n   */\n  export\n  function findMnemonic(menus: ReadonlyArray<Menu>, key: string, start: number): IMnemonicResult {\n    // Setup the result variables.\n    let index = -1;\n    let auto = -1;\n    let multiple = false;\n\n    // Normalize the key to upper case.\n    let upperKey = key.toUpperCase();\n\n    // Search the items from the given start index.\n    for (let i = 0, n = menus.length; i < n; ++i) {\n      // Compute the wrapped index.\n      let k = (i + start) % n;\n\n      // Look up the menu title.\n      let title = menus[k].title;\n\n      // Ignore titles with an empty label.\n      if (title.label.length === 0) {\n        continue;\n      }\n\n      // Look up the mnemonic index for the label.\n      let mn = title.mnemonic;\n\n      // Handle a valid mnemonic index.\n      if (mn >= 0 && mn < title.label.length) {\n        if (title.label[mn].toUpperCase() === upperKey) {\n          if (index === -1) {\n            index = k;\n          } else {\n            multiple = true;\n          }\n        }\n        continue;\n      }\n\n      // Finally, handle the auto index if possible.\n      if (auto === -1 && title.label[0].toUpperCase() === upperKey) {\n        auto = k;\n      }\n    }\n\n    // Return the search results.\n    return { index, multiple, auto };\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IDisposable\n} from '@lumino/disposable';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Drag\n} from '@lumino/dragdrop';\n\nimport {\n  Message\n} from '@lumino/messaging';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which implements a canonical scroll bar.\n */\nexport\nclass ScrollBar extends Widget {\n  /**\n   * Construct a new scroll bar.\n   *\n   * @param options - The options for initializing the scroll bar.\n   */\n  constructor(options: ScrollBar.IOptions = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-ScrollBar');\n    /* <DEPRECATED> */\n    this.addClass('p-ScrollBar');\n    /* </DEPRECATED> */\n    this.setFlag(Widget.Flag.DisallowLayout);\n\n    // Set the orientation.\n    this._orientation = options.orientation || 'vertical';\n    this.dataset['orientation'] = this._orientation;\n\n    // Parse the rest of the options.\n    if (options.maximum !== undefined) {\n      this._maximum = Math.max(0, options.maximum);\n    }\n    if (options.page !== undefined) {\n      this._page = Math.max(0, options.page);\n    }\n    if (options.value !== undefined) {\n      this._value = Math.max(0, Math.min(options.value, this._maximum));\n    }\n  }\n\n  /**\n   * A signal emitted when the user moves the scroll thumb.\n   *\n   * #### Notes\n   * The payload is the current value of the scroll bar.\n   */\n  get thumbMoved(): ISignal<this, number> {\n    return this._thumbMoved;\n  }\n\n  /**\n   * A signal emitted when the user clicks a step button.\n   *\n   * #### Notes\n   * The payload is whether a decrease or increase is requested.\n   */\n  get stepRequested(): ISignal<this, 'decrement' | 'increment'> {\n    return this._stepRequested;\n  }\n\n  /**\n   * A signal emitted when the user clicks the scroll track.\n   *\n   * #### Notes\n   * The payload is whether a decrease or increase is requested.\n   */\n  get pageRequested(): ISignal<this, 'decrement' | 'increment'> {\n    return this._pageRequested;\n  }\n\n  /**\n   * Get the orientation of the scroll bar.\n   */\n  get orientation(): ScrollBar.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the orientation of the scroll bar.\n   */\n  set orientation(value: ScrollBar.Orientation) {\n    // Do nothing if the orientation does not change.\n    if (this._orientation === value) {\n      return;\n    }\n\n    // Release the mouse before making changes.\n    this._releaseMouse();\n\n    // Update the internal orientation.\n    this._orientation = value;\n    this.dataset['orientation'] = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the current value of the scroll bar.\n   */\n  get value(): number {\n    return this._value;\n  }\n\n  /**\n   * Set the current value of the scroll bar.\n   *\n   * #### Notes\n   * The value will be clamped to the range `[0, maximum]`.\n   */\n  set value(value: number) {\n    // Clamp the value to the allowable range.\n    value = Math.max(0, Math.min(value, this._maximum));\n\n    // Do nothing if the value does not change.\n    if (this._value === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._value = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the page size of the scroll bar.\n   *\n   * #### Notes\n   * The page size is the amount of visible content in the scrolled\n   * region, expressed in data units. It determines the size of the\n   * scroll bar thumb.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * Set the page size of the scroll bar.\n   *\n   * #### Notes\n   * The page size will be clamped to the range `[0, Infinity]`.\n   */\n  set page(value: number) {\n    // Clamp the page size to the allowable range.\n    value = Math.max(0, value);\n\n    // Do nothing if the value does not change.\n    if (this._page === value) {\n      return;\n    }\n\n    // Update the internal page size.\n    this._page = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the maximum value of the scroll bar.\n   */\n  get maximum(): number {\n    return this._maximum;\n  }\n\n  /**\n   * Set the maximum value of the scroll bar.\n   *\n   * #### Notes\n   * The max size will be clamped to the range `[0, Infinity]`.\n   */\n  set maximum(value: number) {\n    // Clamp the value to the allowable range.\n    value = Math.max(0, value);\n\n    // Do nothing if the value does not change.\n    if (this._maximum === value) {\n      return;\n    }\n\n    // Update the internal values.\n    this._maximum = value;\n\n    // Clamp the current value to the new range.\n    this._value = Math.min(this._value, value);\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * The scroll bar decrement button node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get decrementNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-ScrollBar-button')[0] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar increment button node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get incrementNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-ScrollBar-button')[1] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar track node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get trackNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-ScrollBar-track')[0] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar thumb node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get thumbNode(): HTMLDivElement {\n    return this.node.getElementsByClassName('lm-ScrollBar-thumb')[0] as HTMLDivElement;\n  }\n\n  /**\n   * Handle the DOM events for the scroll bar.\n   *\n   * @param event - The DOM event sent to the scroll bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the scroll bar's DOM node.\n   *\n   * This should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n    case 'mousedown':\n      this._evtMouseDown(event as MouseEvent);\n      break;\n    case 'mousemove':\n      this._evtMouseMove(event as MouseEvent);\n      break;\n    case 'mouseup':\n      this._evtMouseUp(event as MouseEvent);\n      break;\n    case 'keydown':\n      this._evtKeyDown(event as KeyboardEvent);\n      break;\n    case 'contextmenu':\n      event.preventDefault();\n      event.stopPropagation();\n      break;\n    }\n  }\n\n  /**\n   * A method invoked on a 'before-attach' message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('mousedown', this);\n    this.update();\n  }\n\n  /**\n   * A method invoked on an 'after-detach' message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('mousedown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A method invoked on an 'update-request' message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    // Convert the value and page into percentages.\n    let value = this._value * 100 / this._maximum;\n    let page = this._page * 100 / (this._page + this._maximum);\n\n    // Clamp the value and page to the relevant range.\n    value = Math.max(0, Math.min(value, 100));\n    page = Math.max(0, Math.min(page, 100));\n\n    // Fetch the thumb style.\n    let thumbStyle = this.thumbNode.style;\n\n    // Update the thumb style for the current orientation.\n    if (this._orientation === 'horizontal') {\n      thumbStyle.top = '';\n      thumbStyle.height = '';\n      thumbStyle.left = `${value}%`;\n      thumbStyle.width = `${page}%`;\n      thumbStyle.transform = `translate(${-value}%, 0%)`;\n    } else {\n      thumbStyle.left = '';\n      thumbStyle.width = '';\n      thumbStyle.top = `${value}%`;\n      thumbStyle.height = `${page}%`;\n      thumbStyle.transform = `translate(0%, ${-value}%)`;\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the scroll bar.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop all input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Ignore anything except the `Escape` key.\n    if (event.keyCode !== 27) {\n      return;\n    }\n\n    // Fetch the previous scroll value.\n    let value = this._pressData ? this._pressData.value : -1;\n\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Restore the old scroll value if possible.\n    if (value !== -1) {\n      this._moveThumb(value);\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the scroll bar.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse press.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Send an activate request to the scroll bar. This can be\n    // used by message hooks to activate something relevant.\n    this.activate();\n\n    // Do nothing if the mouse is already captured.\n    if (this._pressData) {\n      return;\n    }\n\n    // Find the pressed scroll bar part.\n    let part = Private.findPart(this, event.target as HTMLElement);\n\n    // Do nothing if the part is not of interest.\n    if (!part) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Override the mouse cursor.\n    let override = Drag.overrideCursor('default');\n\n    // Set up the press data.\n    this._pressData = {\n      part, override,\n      delta: -1, value: -1,\n      mouseX: event.clientX,\n      mouseY: event.clientY\n    };\n\n    // Add the extra event listeners.\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('mouseup', this, true);\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Handle a thumb press.\n    if (part === 'thumb') {\n      // Fetch the thumb node.\n      let thumbNode = this.thumbNode;\n\n      // Fetch the client rect for the thumb.\n      let thumbRect = thumbNode.getBoundingClientRect();\n\n      // Update the press data delta for the current orientation.\n      if (this._orientation === 'horizontal') {\n        this._pressData.delta = event.clientX - thumbRect.left;\n      } else {\n        this._pressData.delta = event.clientY - thumbRect.top;\n      }\n\n      // Add the active class to the thumb node.\n      thumbNode.classList.add('lm-mod-active');\n      /* <DEPRECATED> */\n      thumbNode.classList.add('p-mod-active');\n      /* </DEPRECATED> */\n\n      // Store the current value in the press data.\n      this._pressData.value = this._value;\n\n      // Finished.\n      return;\n    }\n\n    // Handle a track press.\n    if (part === 'track') {\n      // Fetch the client rect for the thumb.\n      let thumbRect = this.thumbNode.getBoundingClientRect();\n\n      // Determine the direction for the page request.\n      let dir: 'decrement' | 'increment';\n      if (this._orientation === 'horizontal') {\n        dir = event.clientX < thumbRect.left ? 'decrement' : 'increment';\n      } else {\n        dir = event.clientY < thumbRect.top ? 'decrement' : 'increment';\n      }\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the page requested signal.\n      this._pageRequested.emit(dir);\n\n      // Finished.\n      return;\n    }\n\n    // Handle a decrement button press.\n    if (part === 'decrement') {\n      // Add the active class to the decrement node.\n      this.decrementNode.classList.add('lm-mod-active');\n      /* <DEPRECATED> */\n      this.decrementNode.classList.add('p-mod-active');\n      /* </DEPRECATED> */\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('decrement');\n\n      // Finished.\n      return;\n    }\n\n    // Handle an increment button press.\n    if (part === 'increment') {\n\n      // Add the active class to the increment node.\n      this.incrementNode.classList.add('lm-mod-active');\n      /* <DEPRECATED> */\n      this.incrementNode.classList.add('p-mod-active');\n      /* </DEPRECATED> */\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('increment');\n\n      // Finished.\n      return;\n    }\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the scroll bar.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Do nothing if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Update the mouse position.\n    this._pressData.mouseX = event.clientX;\n    this._pressData.mouseY = event.clientY;\n\n    // Bail if the thumb is not being dragged.\n    if (this._pressData.part !== 'thumb') {\n      return;\n    }\n\n    // Get the client rect for the thumb and track.\n    let thumbRect = this.thumbNode.getBoundingClientRect();\n    let trackRect = this.trackNode.getBoundingClientRect();\n\n    // Fetch the scroll geometry based on the orientation.\n    let trackPos: number;\n    let trackSpan: number;\n    if (this._orientation === 'horizontal') {\n      trackPos = event.clientX - trackRect.left - this._pressData.delta;\n      trackSpan = trackRect.width - thumbRect.width;\n    } else {\n      trackPos = event.clientY - trackRect.top - this._pressData.delta;\n      trackSpan = trackRect.height - thumbRect.height;\n    }\n\n    // Compute the desired value from the scroll geometry.\n    let value = trackSpan === 0 ? 0 : trackPos * this._maximum / trackSpan;\n\n    // Move the thumb to the computed value.\n    this._moveThumb(value);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the scroll bar.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse release.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse.\n    this._releaseMouse();\n  }\n\n  /**\n   * Release the mouse and restore the node states.\n   */\n  private _releaseMouse(): void {\n    // Bail if there is no press data.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the repeat timer.\n    clearTimeout(this._repeatTimer);\n    this._repeatTimer = -1;\n\n    // Clear the press data.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Remove the extra event listeners.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('contextmenu', this, true);\n\n    // Remove the active classes from the nodes.\n    this.thumbNode.classList.remove('lm-mod-active');\n    this.decrementNode.classList.remove('lm-mod-active');\n    this.incrementNode.classList.remove('lm-mod-active');\n    /* <DEPRECATED> */\n    this.thumbNode.classList.remove('p-mod-active');\n    this.decrementNode.classList.remove('p-mod-active');\n    this.incrementNode.classList.remove('p-mod-active');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * Move the thumb to the specified position.\n   */\n  private _moveThumb(value: number): void {\n    // Clamp the value to the allowed range.\n    value = Math.max(0, Math.min(value, this._maximum));\n\n    // Bail if the value does not change.\n    if (this._value === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._value = value;\n\n    // Schedule an update of the scroll bar.\n    this.update();\n\n    // Emit the thumb moved signal.\n    this._thumbMoved.emit(value);\n  }\n\n  /**\n   * A timeout callback for repeating the mouse press.\n   */\n  private _onRepeat = () => {\n    // Clear the repeat timer id.\n    this._repeatTimer = -1;\n\n    // Bail if the mouse has been released.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Look up the part that was pressed.\n    let part = this._pressData.part;\n\n    // Bail if the thumb was pressed.\n    if (part === 'thumb') {\n      return;\n    }\n\n    // Schedule the timer for another repeat.\n    this._repeatTimer = window.setTimeout(this._onRepeat, 20);\n\n    // Get the current mouse position.\n    let mouseX = this._pressData.mouseX;\n    let mouseY = this._pressData.mouseY;\n\n    // Handle a decrement button repeat.\n    if (part === 'decrement') {\n      // Bail if the mouse is not over the button.\n      if (!ElementExt.hitTest(this.decrementNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('decrement');\n\n      // Finished.\n      return;\n    }\n\n    // Handle an increment button repeat.\n    if (part === 'increment') {\n      // Bail if the mouse is not over the button.\n      if (!ElementExt.hitTest(this.incrementNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('increment');\n\n      // Finished.\n      return;\n    }\n\n    // Handle a track repeat.\n    if (part === 'track') {\n      // Bail if the mouse is not over the track.\n      if (!ElementExt.hitTest(this.trackNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Fetch the thumb node.\n      let thumbNode = this.thumbNode;\n\n      // Bail if the mouse is over the thumb.\n      if (ElementExt.hitTest(thumbNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Fetch the client rect for the thumb.\n      let thumbRect = thumbNode.getBoundingClientRect();\n\n      // Determine the direction for the page request.\n      let dir: 'decrement' | 'increment';\n      if (this._orientation === 'horizontal') {\n        dir = mouseX < thumbRect.left ? 'decrement' : 'increment';\n      } else {\n        dir = mouseY < thumbRect.top ? 'decrement' : 'increment';\n      }\n\n      // Emit the page requested signal.\n      this._pageRequested.emit(dir);\n\n      // Finished.\n      return;\n    }\n  };\n\n  private _value = 0;\n  private _page = 10;\n  private _maximum = 100;\n  private _repeatTimer = -1;\n  private _orientation: ScrollBar.Orientation;\n  private _pressData: Private.IPressData | null = null;\n  private _thumbMoved = new Signal<this, number>(this);\n  private _stepRequested = new Signal<this, 'decrement' | 'increment'>(this);\n  private _pageRequested = new Signal<this, 'decrement' | 'increment'>(this);\n}\n\n\n/**\n * The namespace for the `ScrollBar` class statics.\n */\nexport\nnamespace ScrollBar {\n  /**\n   * A type alias for a scroll bar orientation.\n   */\n  export\n  type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * An options object for creating a scroll bar.\n   */\n  export\n  interface IOptions {\n    /**\n     * The orientation of the scroll bar.\n     *\n     * The default is `'vertical'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The value for the scroll bar.\n     *\n     * The default is `0`.\n     */\n    value?: number;\n\n    /**\n     * The page size for the scroll bar.\n     *\n     * The default is `10`.\n     */\n    page?: number;\n\n    /**\n     * The maximum value for the scroll bar.\n     *\n     * The default is `100`.\n     */\n    maximum?: number;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for the parts of a scroll bar.\n   */\n  export\n  type ScrollBarPart = 'thumb' | 'track' | 'decrement' | 'increment';\n\n  /**\n   * An object which holds mouse press data.\n   */\n  export\n  interface IPressData {\n    /**\n     * The scroll bar part which was pressed.\n     */\n    part: ScrollBarPart;\n\n    /**\n     * The offset of the press in thumb coordinates, or -1.\n     */\n    delta: number;\n\n    /**\n     * The scroll value at the time the thumb was pressed, or -1.\n     */\n    value: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n\n    /**\n     * The current X position of the mouse.\n     */\n    mouseX: number;\n\n    /**\n     * The current Y position of the mouse.\n     */\n    mouseY: number;\n  }\n\n  /**\n   * Create the DOM node for a scroll bar.\n   */\n  export\n  function createNode(): HTMLElement {\n    let node = document.createElement('div');\n    let decrement = document.createElement('div');\n    let increment = document.createElement('div');\n    let track = document.createElement('div');\n    let thumb = document.createElement('div');\n    decrement.className = 'lm-ScrollBar-button';\n    increment.className = 'lm-ScrollBar-button';\n    decrement.dataset['action'] = 'decrement';\n    increment.dataset['action'] = 'increment';\n    track.className = 'lm-ScrollBar-track';\n    thumb.className = 'lm-ScrollBar-thumb';\n    /* <DEPRECATED> */\n    decrement.classList.add('p-ScrollBar-button');\n    increment.classList.add('p-ScrollBar-button');\n    track.classList.add('p-ScrollBar-track');\n    thumb.classList.add('p-ScrollBar-thumb');\n    /* </DEPRECATED> */\n    track.appendChild(thumb);\n    node.appendChild(decrement);\n    node.appendChild(track);\n    node.appendChild(increment);\n    return node;\n  }\n\n  /**\n   * Find the scroll bar part which contains the given target.\n   */\n  export\n  function findPart(scrollBar: ScrollBar, target: HTMLElement): ScrollBarPart | null {\n    // Test the thumb.\n    if (scrollBar.thumbNode.contains(target)) {\n      return 'thumb';\n    }\n\n    // Test the track.\n    if (scrollBar.trackNode.contains(target)) {\n      return 'track';\n    }\n\n    // Test the decrement button.\n    if (scrollBar.decrementNode.contains(target)) {\n      return 'decrement';\n    }\n\n    // Test the increment button.\n    if (scrollBar.incrementNode.contains(target)) {\n      return 'increment';\n    }\n\n    // Indicate no match.\n    return null;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  IIterator, each, empty, once\n} from '@lumino/algorithm';\n\nimport {\n  MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  Layout\n} from './layout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A concrete layout implementation which holds a single widget.\n *\n * #### Notes\n * This class is useful for creating simple container widgets which\n * hold a single child. The child should be positioned with CSS.\n */\nexport\nclass SingletonLayout extends Layout {\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    if (this._widget) {\n      let widget = this._widget;\n      this._widget = null;\n      widget.dispose();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Get the child widget for the layout.\n   */\n  get widget(): Widget | null {\n    return this._widget;\n  }\n\n  /**\n   * Set the child widget for the layout.\n   *\n   * #### Notes\n   * Setting the child widget will cause the old child widget to be\n   * automatically disposed. If that is not desired, set the parent\n   * of the old child to `null` before assigning a new child.\n   */\n  set widget(widget: Widget | null) {\n    // Remove the widget from its current parent. This is a no-op\n    // if the widget's parent is already the layout parent widget.\n    if (widget) {\n      widget.parent = this.parent;\n    }\n\n    // Bail early if the widget does not change.\n    if (this._widget === widget) {\n      return;\n    }\n\n    // Dispose of the old child widget.\n    if (this._widget) {\n      this._widget.dispose();\n    }\n\n    // Update the internal widget.\n    this._widget = widget;\n\n    // Attach the new child widget if needed.\n    if (this.parent && widget) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  iter(): IIterator<Widget> {\n    return this._widget ? once(this._widget) : empty<Widget>();\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Bail early if the widget does not exist in the layout.\n    if (this._widget !== widget) {\n      return;\n    }\n\n    // Clear the internal widget.\n    this._widget = null;\n\n    // If the layout is parented, detach the widget from the DOM.\n    if (this.parent) {\n      this.detachWidget(widget);\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    each(this, widget => { this.attachWidget(widget); });\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the single layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation adds the widgets's node to the parent's\n   * node at the proper location, and sends the appropriate attach\n   * messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is added to the parent's node.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the single layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation removes the widget's node from the\n   * parent's node, and sends the appropriate detach messages to the\n   * widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is removed from the parent's node.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n  }\n\n  private _widget: Widget | null = null;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ArrayExt, each\n} from '@lumino/algorithm';\n\nimport {\n  ElementExt\n} from '@lumino/domutils';\n\nimport {\n  Message, MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  LayoutItem\n} from './layout';\n\nimport {\n  PanelLayout\n} from './panellayout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A layout where visible widgets are stacked atop one another.\n *\n * #### Notes\n * The Z-order of the visible widgets follows their layout order.\n */\nexport\nclass StackedLayout extends PanelLayout {\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    each(this._items, item => { item.dispose(); });\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Create and add a new layout item for the widget.\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(fromIndex: number, toIndex: number, widget: Widget): void {\n    // Move the layout item for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n\n    // Post an update request for the parent widget.\n    this.parent!.update();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the layout item for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Reset the z-index for the widget.\n    item!.widget.node.style.zIndex = '';\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Set up the computed minimum size.\n    let minW = 0;\n    let minH = 0;\n\n    // Update the computed minimum size.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the computed minimum size.\n      minW = Math.max(minW, item.minWidth);\n      minH = Math.max(minH, item.minHeight);\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = this._box = ElementExt.boxSizing(this.parent!.node);\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Update the widget stacking order and layout geometry.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Set the z-index for the widget.\n      item.widget.node.style.zIndex = `${i}`;\n\n      // Update the item geometry.\n      item.update(left, top, width, height);\n    }\n  }\n\n  private _dirty = false;\n  private _items: LayoutItem[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  Panel\n} from './panel';\n\nimport {\n  StackedLayout\n} from './stackedlayout';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A panel where visible widgets are stacked atop one another.\n *\n * #### Notes\n * This class provides a convenience wrapper around a [[StackedLayout]].\n */\nexport\nclass StackedPanel extends Panel {\n  /**\n   * Construct a new stacked panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: StackedPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-StackedPanel');\n    /* <DEPRECATED> */\n    this.addClass('p-StackedPanel');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * A signal emitted when a widget is removed from a stacked panel.\n   */\n  get widgetRemoved(): ISignal<this, Widget> {\n    return this._widgetRemoved;\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-StackedPanel-child');\n    /* <DEPRECATED> */\n    msg.child.addClass('p-StackedPanel-child');\n    /* </DEPRECATED> */\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-StackedPanel-child');\n    /* <DEPRECATED> */\n    msg.child.removeClass('p-StackedPanel-child');\n    /* </DEPRECATED> */\n    this._widgetRemoved.emit(msg.child);\n  }\n\n  private _widgetRemoved = new Signal<this, Widget>(this);\n}\n\n\n/**\n * The namespace for the `StackedPanel` class statics.\n */\nexport\nnamespace StackedPanel {\n  /**\n   * An options object for creating a stacked panel.\n   */\n  export\n  interface IOptions {\n    /**\n     * The stacked layout to use for the stacked panel.\n     *\n     * The default is a new `StackedLayout`.\n     */\n    layout?: StackedLayout;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a stacked layout for the given panel options.\n   */\n  export\n  function createLayout(options: StackedPanel.IOptions): StackedLayout {\n    return options.layout || new StackedLayout();\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport {\n  Platform\n} from '@lumino/domutils';\n\nimport {\n  MessageLoop\n} from '@lumino/messaging';\n\nimport {\n  ISignal, Signal\n} from '@lumino/signaling';\n\nimport {\n  BoxLayout\n} from './boxlayout';\n\nimport {\n  StackedPanel\n} from './stackedpanel';\n\nimport {\n  TabBar\n} from './tabbar';\n\nimport {\n  Widget\n} from './widget';\n\n\n/**\n * A widget which combines a `TabBar` and a `StackedPanel`.\n *\n * #### Notes\n * This is a simple panel which handles the common case of a tab bar\n * placed next to a content area. The selected tab controls the widget\n * which is shown in the content area.\n *\n * For use cases which require more control than is provided by this\n * panel, the `TabBar` widget may be used independently.\n */\nexport\nclass TabPanel extends Widget {\n  /**\n   * Construct a new tab panel.\n   *\n   * @param options - The options for initializing the tab panel.\n   */\n  constructor(options: TabPanel.IOptions = {}) {\n    super();\n    this.addClass('lm-TabPanel');\n    /* <DEPRECATED> */\n    this.addClass('p-TabPanel');\n    /* </DEPRECATED> */\n\n    // Create the tab bar and stacked panel.\n    this.tabBar = new TabBar<Widget>(options);\n    this.tabBar.addClass('lm-TabPanel-tabBar');\n    this.stackedPanel = new StackedPanel();\n    this.stackedPanel.addClass('lm-TabPanel-stackedPanel');\n    /* <DEPRECATED> */\n    this.tabBar.addClass('p-TabPanel-tabBar');\n    this.stackedPanel.addClass('p-TabPanel-stackedPanel');\n    /* </DEPRECATED> */\n\n    // Connect the tab bar signal handlers.\n    this.tabBar.tabMoved.connect(this._onTabMoved, this);\n    this.tabBar.currentChanged.connect(this._onCurrentChanged, this);\n    this.tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\n    this.tabBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\n    this.tabBar.addRequested.connect(this._onTabAddRequested, this);\n\n    // Connect the stacked panel signal handlers.\n    this.stackedPanel.widgetRemoved.connect(this._onWidgetRemoved, this);\n\n    // Get the data related to the placement.\n    this._tabPlacement = options.tabPlacement || 'top';\n    let direction = Private.directionFromPlacement(this._tabPlacement);\n    let orientation = Private.orientationFromPlacement(this._tabPlacement);\n\n    // Configure the tab bar for the placement.\n    this.tabBar.orientation = orientation;\n    this.tabBar.dataset['placement'] = this._tabPlacement;\n\n    // Create the box layout.\n    let layout = new BoxLayout({ direction, spacing: 0 });\n\n    // Set the stretch factors for the child widgets.\n    BoxLayout.setStretch(this.tabBar, 0);\n    BoxLayout.setStretch(this.stackedPanel, 1);\n\n    // Add the child widgets to the layout.\n    layout.addWidget(this.tabBar);\n    layout.addWidget(this.stackedPanel);\n\n    // Install the layout on the tab panel.\n    this.layout = layout;\n  }\n\n  /**\n   * A signal emitted when the current tab is changed.\n   *\n   * #### Notes\n   * This signal is emitted when the currently selected tab is changed\n   * either through user or programmatic interaction.\n   *\n   * Notably, this signal is not emitted when the index of the current\n   * tab changes due to tabs being inserted, removed, or moved. It is\n   * only emitted when the actual current tab node is changed.\n   */\n  get currentChanged(): ISignal<this, TabPanel.ICurrentChangedArgs> {\n    return this._currentChanged;\n  }\n\n  /**\n   * Get the index of the currently selected tab.\n   *\n   * #### Notes\n   * This will be `-1` if no tab is selected.\n   */\n  get currentIndex(): number {\n    return this.tabBar.currentIndex;\n  }\n\n  /**\n   * Set the index of the currently selected tab.\n   *\n   * #### Notes\n   * If the index is out of range, it will be set to `-1`.\n   */\n  set currentIndex(value: number) {\n    this.tabBar.currentIndex = value;\n  }\n\n  /**\n   * Get the currently selected widget.\n   *\n   * #### Notes\n   * This will be `null` if there is no selected tab.\n   */\n  get currentWidget(): Widget | null {\n    let title = this.tabBar.currentTitle;\n    return title ? title.owner : null;\n  }\n\n  /**\n   * Set the currently selected widget.\n   *\n   * #### Notes\n   * If the widget is not in the panel, it will be set to `null`.\n   */\n  set currentWidget(value: Widget | null) {\n    this.tabBar.currentTitle = value ? value.title : null;\n  }\n\n  /**\n   * Get the whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  get tabsMovable(): boolean {\n    return this.tabBar.tabsMovable;\n  }\n\n  /**\n   * Set the whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  set tabsMovable(value: boolean) {\n    this.tabBar.tabsMovable = value;\n  }\n\n  /**\n   * Get the whether the add button is enabled.\n   *\n   */\n  get addButtonEnabled(): boolean {\n    return this.tabBar.addButtonEnabled;\n  }\n\n  /**\n   * Set the whether the add button is enabled.\n   *\n   */\n  set addButtonEnabled(value: boolean) {\n    this.tabBar.addButtonEnabled = value;\n  }\n\n  /**\n   * Get the tab placement for the tab panel.\n   *\n   * #### Notes\n   * This controls the position of the tab bar relative to the content.\n   */\n  get tabPlacement(): TabPanel.TabPlacement {\n    return this._tabPlacement;\n  }\n\n  /**\n   * Set the tab placement for the tab panel.\n   *\n   * #### Notes\n   * This controls the position of the tab bar relative to the content.\n   */\n  set tabPlacement(value: TabPanel.TabPlacement) {\n    // Bail if the placement does not change.\n    if (this._tabPlacement === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._tabPlacement = value;\n\n    // Get the values related to the placement.\n    let direction = Private.directionFromPlacement(value);\n    let orientation = Private.orientationFromPlacement(value);\n\n    // Configure the tab bar for the placement.\n    this.tabBar.orientation = orientation;\n    this.tabBar.dataset['placement'] = value;\n\n    // Update the layout direction.\n    (this.layout as BoxLayout).direction = direction;\n  }\n\n  /**\n   * A signal emitted when the add button on a tab bar is clicked.\n   *\n   */\n  get addRequested(): ISignal<this, TabBar<Widget>> {\n    return this._addRequested;\n  }\n\n  /**\n   * The tab bar used by the tab panel.\n   *\n   * #### Notes\n   * Modifying the tab bar directly can lead to undefined behavior.\n   */\n  readonly tabBar: TabBar<Widget>;\n\n  /**\n   * The stacked panel used by the tab panel.\n   *\n   * #### Notes\n   * Modifying the panel directly can lead to undefined behavior.\n   */\n  readonly stackedPanel: StackedPanel;\n\n  /**\n   * A read-only array of the widgets in the panel.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return this.stackedPanel.widgets;\n  }\n\n  /**\n   * Add a widget to the end of the tab panel.\n   *\n   * @param widget - The widget to add to the tab panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   *\n   * The widget's `title` is used to populate the tab.\n   */\n  addWidget(widget: Widget): void {\n    this.insertWidget(this.widgets.length, widget);\n  }\n\n  /**\n   * Insert a widget into the tab panel at a specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into to the tab panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   *\n   * The widget's `title` is used to populate the tab.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    if (widget !== this.currentWidget) {\n      widget.hide();\n    }\n    this.stackedPanel.insertWidget(index, widget);\n    this.tabBar.insertTab(index, widget.title);\n\n    widget.node.setAttribute('role', 'tabpanel');\n\n    let renderer = this.tabBar.renderer\n    if (renderer instanceof TabBar.Renderer) {\n      let tabId = renderer.createTabKey({title: widget.title, current: false, zIndex: 0});\n      widget.node.setAttribute('aria-labelledby', tabId);\n    }\n  }\n\n  /**\n   * Handle the `currentChanged` signal from the tab bar.\n   */\n  private _onCurrentChanged(sender: TabBar<Widget>, args: TabBar.ICurrentChangedArgs<Widget>): void {\n    // Extract the previous and current title from the args.\n    let { previousIndex, previousTitle, currentIndex, currentTitle } = args;\n\n    // Extract the widgets from the titles.\n    let previousWidget = previousTitle ? previousTitle.owner : null;\n    let currentWidget = currentTitle ? currentTitle.owner : null;\n\n    // Hide the previous widget.\n    if (previousWidget) {\n      previousWidget.hide();\n    }\n\n    // Show the current widget.\n    if (currentWidget) {\n      currentWidget.show();\n    }\n\n    // Emit the `currentChanged` signal for the tab panel.\n    this._currentChanged.emit({\n      previousIndex, previousWidget, currentIndex, currentWidget\n    });\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n  }\n\n  /**\n   * Handle the `tabAddRequested` signal from the tab bar.\n   */\n  private _onTabAddRequested(sender: TabBar<Widget>, args: void): void {\n    this._addRequested.emit(sender);\n  }\n\n  /**\n   * Handle the `tabActivateRequested` signal from the tab bar.\n   */\n  private _onTabActivateRequested(sender: TabBar<Widget>, args: TabBar.ITabActivateRequestedArgs<Widget>): void {\n    args.title.owner.activate();\n  }\n\n  /**\n   * Handle the `tabCloseRequested` signal from the tab bar.\n   */\n  private _onTabCloseRequested(sender: TabBar<Widget>, args: TabBar.ITabCloseRequestedArgs<Widget>): void {\n    args.title.owner.close();\n  }\n\n  /**\n   * Handle the `tabMoved` signal from the tab bar.\n   */\n  private _onTabMoved(sender: TabBar<Widget>, args: TabBar.ITabMovedArgs<Widget>): void {\n    this.stackedPanel.insertWidget(args.toIndex, args.title.owner);\n  }\n\n  /**\n   * Handle the `widgetRemoved` signal from the stacked panel.\n   */\n  private _onWidgetRemoved(sender: StackedPanel, widget: Widget): void {\n    widget.node.removeAttribute('role');\n    widget.node.removeAttribute('aria-labelledby');\n    this.tabBar.removeTab(widget.title);\n  }\n\n  private _tabPlacement: TabPanel.TabPlacement;\n  private _currentChanged = new Signal<this, TabPanel.ICurrentChangedArgs>(this);\n\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\n\n}\n\n\n/**\n * The namespace for the `TabPanel` class statics.\n */\nexport\nnamespace TabPanel {\n  /**\n   * A type alias for tab placement in a tab bar.\n   */\n  export\n  type TabPlacement = (\n    /**\n     * The tabs are placed as a row above the content.\n     */\n    'top' |\n\n    /**\n     * The tabs are placed as a column to the left of the content.\n     */\n    'left' |\n\n    /**\n     * The tabs are placed as a column to the right of the content.\n     */\n    'right' |\n\n    /**\n     * The tabs are placed as a row below the content.\n     */\n    'bottom'\n  );\n\n  /**\n   * An options object for initializing a tab panel.\n   */\n  export\n  interface IOptions {\n    /**\n     * Whether the tabs are movable by the user.\n     *\n     * The default is `false`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Whether the button to add new tabs is enabled.\n     *\n     * The default is `false`.\n     */\n    addButtonEnabled?: boolean;\n\n    /**\n     * The placement of the tab bar relative to the content.\n     *\n     * The default is `'top'`.\n     */\n    tabPlacement?: TabPlacement;\n\n    /**\n     * The renderer for the panel's tab bar.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: TabBar.IRenderer<Widget>;\n  }\n\n  /**\n   * The arguments object for the `currentChanged` signal.\n   */\n  export\n  interface ICurrentChangedArgs {\n    /**\n     * The previously selected index.\n     */\n    previousIndex: number;\n\n    /**\n     * The previously selected widget.\n     */\n    previousWidget: Widget | null;\n\n    /**\n     * The currently selected index.\n     */\n    currentIndex: number;\n\n    /**\n     * The currently selected widget.\n     */\n    currentWidget: Widget | null;\n  }\n}\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Convert a tab placement to tab bar orientation.\n   */\n  export\n  function orientationFromPlacement(plc: TabPanel.TabPlacement): TabBar.Orientation {\n    return placementToOrientationMap[plc];\n  }\n\n  /**\n   * Convert a tab placement to a box layout direction.\n   */\n  export\n  function directionFromPlacement(plc: TabPanel.TabPlacement): BoxLayout.Direction {\n    return placementToDirectionMap[plc];\n  }\n\n  /**\n   * A mapping of tab placement to tab bar orientation.\n   */\n  const placementToOrientationMap: { [key: string]: TabBar.Orientation } = {\n    'top': 'horizontal',\n    'left': 'vertical',\n    'right': 'vertical',\n    'bottom': 'horizontal'\n  };\n\n  /**\n   * A mapping of tab placement to box layout direction.\n   */\n  const placementToDirectionMap: { [key: string]: BoxLayout.Direction } = {\n    'top': 'top-to-bottom',\n    'left': 'left-to-right',\n    'right': 'right-to-left',\n    'bottom': 'bottom-to-top'\n  };\n}\n"],"names":["BoxEngine","Signal","MessageLoop","AttachedProperty","empty","Message","ConflatableMessage","Widget","each","Private","Layout","ElementExt","iter","ArrayExt","SplitLayout","Utils","Drag","SplitPanel","AccordionPanel","BoxLayout","BoxPanel","VirtualDOM","h","StringExt","CommandRegistry","CommandPalette","JSONExt","getKeyboardLayout","Menu","DisposableDelegate","Selector","TabBar","chain","once","map","ChainIterator","reduce","find","Platform","MimeData","DockPanel","toArray","filter","max","GridLayout","MenuBar"],"mappings":"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"}