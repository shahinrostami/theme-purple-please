import { FakeFS } from './FakeFS';
import { PortablePath } from './path';
export declare class NoFS extends FakeFS<PortablePath> {
    static readonly instance: NoFS;
    constructor();
    getExtractHint(): never;
    getRealPath(): never;
    resolve(): never;
    openPromise(): Promise<never>;
    openSync(): never;
    opendirPromise(): Promise<never>;
    opendirSync(): never;
    readPromise(): Promise<never>;
    readSync(): never;
    writePromise(): Promise<never>;
    writeSync(): never;
    closePromise(): Promise<never>;
    closeSync(): never;
    createWriteStream(): never;
    createReadStream(): never;
    realpathPromise(): Promise<never>;
    realpathSync(): never;
    readdirPromise(): Promise<never>;
    readdirSync(): never;
    existsPromise(p: PortablePath): Promise<never>;
    existsSync(p: PortablePath): never;
    accessPromise(): Promise<never>;
    accessSync(): never;
    statPromise(): Promise<never>;
    statSync(): never;
    fstatPromise(fd: number): Promise<never>;
    fstatSync(fd: number): never;
    lstatPromise(p: PortablePath): Promise<never>;
    lstatSync(p: PortablePath): never;
    chmodPromise(): Promise<never>;
    chmodSync(): never;
    chownPromise(): Promise<never>;
    chownSync(): never;
    mkdirPromise(): Promise<never>;
    mkdirSync(): never;
    rmdirPromise(): Promise<never>;
    rmdirSync(): never;
    linkPromise(): Promise<never>;
    linkSync(): never;
    symlinkPromise(): Promise<never>;
    symlinkSync(): never;
    renamePromise(): Promise<never>;
    renameSync(): never;
    copyFilePromise(): Promise<never>;
    copyFileSync(): never;
    appendFilePromise(): Promise<never>;
    appendFileSync(): never;
    writeFilePromise(): Promise<never>;
    writeFileSync(): never;
    unlinkPromise(): Promise<never>;
    unlinkSync(): never;
    utimesPromise(): Promise<never>;
    utimesSync(): never;
    readFilePromise(): Promise<never>;
    readFileSync(): never;
    readlinkPromise(): Promise<never>;
    readlinkSync(): never;
    truncatePromise(): Promise<never>;
    truncateSync(): never;
    watch(): never;
    watchFile(): never;
    unwatchFile(): never;
}
