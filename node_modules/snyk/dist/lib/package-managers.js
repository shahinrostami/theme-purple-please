"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.REACHABLE_VULNS_SUPPORTED_PACKAGE_MANAGERS = exports.PINNING_SUPPORTED_PACKAGE_MANAGERS = exports.GRAPH_SUPPORTED_PACKAGE_MANAGERS = exports.PROTECT_SUPPORTED_PACKAGE_MANAGERS = exports.WIZARD_SUPPORTED_PACKAGE_MANAGERS = exports.SUPPORTED_PACKAGE_MANAGER_NAME = exports.SUPPORTED_MANIFEST_FILES = void 0;
var SUPPORTED_MANIFEST_FILES;
(function (SUPPORTED_MANIFEST_FILES) {
    SUPPORTED_MANIFEST_FILES["GEMFILE"] = "Gemfile";
    SUPPORTED_MANIFEST_FILES["GEMFILE_LOCK"] = "Gemfile.lock";
    SUPPORTED_MANIFEST_FILES["GEMSPEC"] = ".gemspec";
    SUPPORTED_MANIFEST_FILES["PACKAGE_LOCK_JSON"] = "package-lock.json";
    SUPPORTED_MANIFEST_FILES["POM_XML"] = "pom.xml";
    SUPPORTED_MANIFEST_FILES["JAR"] = ".jar";
    SUPPORTED_MANIFEST_FILES["WAR"] = ".war";
    SUPPORTED_MANIFEST_FILES["BUILD_GRADLE"] = "build.gradle";
    SUPPORTED_MANIFEST_FILES["BUILD_GRADLE_KTS"] = "build.gradle.kts";
    SUPPORTED_MANIFEST_FILES["BUILD_SBT"] = "build.sbt";
    SUPPORTED_MANIFEST_FILES["YARN_LOCK"] = "yarn.lock";
    SUPPORTED_MANIFEST_FILES["PACKAGE_JSON"] = "package.json";
    SUPPORTED_MANIFEST_FILES["PIPFILE"] = "Pipfile";
    SUPPORTED_MANIFEST_FILES["SETUP_PY"] = "setup.py";
    SUPPORTED_MANIFEST_FILES["REQUIREMENTS_TXT"] = "requirements.txt";
    SUPPORTED_MANIFEST_FILES["GOPKG_LOCK"] = "Gopkg.lock";
    SUPPORTED_MANIFEST_FILES["GO_MOD"] = "go.mod";
    SUPPORTED_MANIFEST_FILES["VENDOR_JSON"] = "vendor.json";
    SUPPORTED_MANIFEST_FILES["PROJECT_ASSETS_JSON"] = "project.assets.json";
    SUPPORTED_MANIFEST_FILES["PACKAGES_CONFIG"] = "packages.config";
    SUPPORTED_MANIFEST_FILES["PROJECT_JSON"] = "project.json";
    SUPPORTED_MANIFEST_FILES["PAKET_DEPENDENCIES"] = "paket.dependencies";
    SUPPORTED_MANIFEST_FILES["COMPOSER_LOCK"] = "composer.lock";
    SUPPORTED_MANIFEST_FILES["PODFILE_LOCK"] = "Podfile.lock";
    SUPPORTED_MANIFEST_FILES["COCOAPODS_PODFILE_YAML"] = "CocoaPods.podfile.yaml";
    SUPPORTED_MANIFEST_FILES["COCOAPODS_PODFILE"] = "CocoaPods.podfile";
    SUPPORTED_MANIFEST_FILES["PODFILE"] = "Podfile";
    SUPPORTED_MANIFEST_FILES["POETRY_LOCK"] = "poetry.lock";
    SUPPORTED_MANIFEST_FILES["MIX_EXS"] = "mix.exs";
})(SUPPORTED_MANIFEST_FILES = exports.SUPPORTED_MANIFEST_FILES || (exports.SUPPORTED_MANIFEST_FILES = {}));
exports.SUPPORTED_PACKAGE_MANAGER_NAME = {
    rubygems: 'RubyGems',
    npm: 'npm',
    yarn: 'Yarn',
    maven: 'Maven',
    pip: 'pip',
    sbt: 'SBT',
    gradle: 'Gradle',
    golangdep: 'dep (Go)',
    gomodules: 'Go Modules',
    govendor: 'govendor',
    nuget: 'NuGet',
    paket: 'Paket',
    composer: 'Composer',
    cocoapods: 'CocoaPods',
    poetry: 'Poetry',
    hex: 'Hex',
};
exports.WIZARD_SUPPORTED_PACKAGE_MANAGERS = [
    'yarn',
    'npm',
];
exports.PROTECT_SUPPORTED_PACKAGE_MANAGERS = [
    'yarn',
    'npm',
];
exports.GRAPH_SUPPORTED_PACKAGE_MANAGERS = [
    'npm',
    'sbt',
    'yarn',
    'rubygems',
    'poetry',
];
// For ecosystems with a flat set of libraries (e.g. Python, JVM), one can
// "pin" a transitive dependency
exports.PINNING_SUPPORTED_PACKAGE_MANAGERS = [
    'pip',
];
exports.REACHABLE_VULNS_SUPPORTED_PACKAGE_MANAGERS = [
    'maven',
    'gradle',
];
//# sourceMappingURL=package-managers.js.map