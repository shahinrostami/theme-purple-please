{"version":3,"file":"y-websocket.cjs","sources":["../src/y-websocket.js"],"sourcesContent":["/*\nUnlike stated in the LICENSE file, it is not necessary to include the copyright notice and permission notice when you copy code from this file.\n*/\n\n/**\n * @module provider/websocket\n */\n\n/* eslint-env browser */\n\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as bc from 'lib0/broadcastchannel'\nimport * as time from 'lib0/time'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport * as authProtocol from 'y-protocols/auth'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport * as mutex from 'lib0/mutex'\nimport { Observable } from 'lib0/observable'\nimport * as math from 'lib0/math'\nimport * as url from 'lib0/url'\n\nconst messageSync = 0\nconst messageQueryAwareness = 3\nconst messageAwareness = 1\nconst messageAuth = 2\n\n/**\n *                       encoder,          decoder,          provider,          emitSynced, messageType\n * @type {Array<function(encoding.Encoder, decoding.Decoder, WebsocketProvider, boolean,    number):void>}\n */\nconst messageHandlers = []\n\nmessageHandlers[messageSync] = (encoder, decoder, provider, emitSynced, messageType) => {\n  encoding.writeVarUint(encoder, messageSync)\n  const syncMessageType = syncProtocol.readSyncMessage(decoder, encoder, provider.doc, provider)\n  if (emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 && !provider.synced) {\n    provider.synced = true\n  }\n}\n\nmessageHandlers[messageQueryAwareness] = (encoder, decoder, provider, emitSynced, messageType) => {\n  encoding.writeVarUint(encoder, messageAwareness)\n  encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())))\n}\n\nmessageHandlers[messageAwareness] = (encoder, decoder, provider, emitSynced, messageType) => {\n  awarenessProtocol.applyAwarenessUpdate(provider.awareness, decoding.readVarUint8Array(decoder), provider)\n}\n\nmessageHandlers[messageAuth] = (encoder, decoder, provider, emitSynced, messageType) => {\n  authProtocol.readAuthMessage(decoder, provider.doc, permissionDeniedHandler)\n}\n\nconst reconnectTimeoutBase = 1200\nconst maxReconnectTimeout = 2500\n// @todo - this should depend on awareness.outdatedTime\nconst messageReconnectTimeout = 30000\n\n/**\n * @param {WebsocketProvider} provider\n * @param {string} reason\n */\nconst permissionDeniedHandler = (provider, reason) => console.warn(`Permission denied to access ${provider.url}.\\n${reason}`)\n\n/**\n * @param {WebsocketProvider} provider\n * @param {Uint8Array} buf\n * @param {boolean} emitSynced\n * @return {encoding.Encoder}\n */\nconst readMessage = (provider, buf, emitSynced) => {\n  const decoder = decoding.createDecoder(buf)\n  const encoder = encoding.createEncoder()\n  const messageType = decoding.readVarUint(decoder)\n  const messageHandler = provider.messageHandlers[messageType]\n  if (/** @type {any} */ (messageHandler)) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType)\n  } else {\n    console.error('Unable to compute message')\n  }\n  return encoder\n}\n\n/**\n * @param {WebsocketProvider} provider\n */\nconst setupWS = provider => {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url)\n    websocket.binaryType = 'arraybuffer'\n    provider.ws = websocket\n    provider.wsconnecting = true\n    provider.wsconnected = false\n    provider.synced = false\n\n    websocket.onmessage = event => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      const encoder = readMessage(provider, new Uint8Array(event.data), true)\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder))\n      }\n    }\n    websocket.onclose = () => {\n      provider.ws = null\n      provider.wsconnecting = false\n      if (provider.wsconnected) {\n        provider.wsconnected = false\n        provider.synced = false\n        // update awareness (all users except local left)\n        awarenessProtocol.removeAwarenessStates(provider.awareness, Array.from(provider.awareness.getStates().keys()).filter(client => client !== provider.doc.clientID), provider)\n        provider.emit('status', [{\n          status: 'disconnected'\n        }])\n      } else {\n        provider.wsUnsuccessfulReconnects++\n      }\n      // Start with no reconnect timeout and increase timeout by\n      // log10(wsUnsuccessfulReconnects).\n      // The idea is to increase reconnect timeout slowly and have no reconnect\n      // timeout at the beginning (log(1) = 0)\n      setTimeout(setupWS, math.min(math.log10(provider.wsUnsuccessfulReconnects + 1) * reconnectTimeoutBase, maxReconnectTimeout), provider)\n    }\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime()\n      provider.wsconnecting = false\n      provider.wsconnected = true\n      provider.wsUnsuccessfulReconnects = 0\n      provider.emit('status', [{\n        status: 'connected'\n      }])\n      // always send sync step 1 when connected\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageSync)\n      syncProtocol.writeSyncStep1(encoder, provider.doc)\n      websocket.send(encoding.toUint8Array(encoder))\n      // broadcast local awareness state\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder()\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n        encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [provider.doc.clientID]))\n        websocket.send(encoding.toUint8Array(encoderAwarenessState))\n      }\n    }\n\n    provider.emit('status', [{\n      status: 'connecting'\n    }])\n  }\n}\n\n/**\n * @param {WebsocketProvider} provider\n * @param {ArrayBuffer} buf\n */\nconst broadcastMessage = (provider, buf) => {\n  if (provider.wsconnected) {\n    /** @type {WebSocket} */ (provider.ws).send(buf)\n  }\n  if (provider.bcconnected) {\n    provider.mux(() => {\n      bc.publish(provider.bcChannel, buf)\n    })\n  }\n}\n\n/**\n * Websocket Provider for Yjs. Creates a websocket connection to sync the shared document.\n * The document name is attached to the provided url. I.e. the following example\n * creates a websocket connection to http://localhost:1234/my-document-name\n *\n * @example\n *   import * as Y from 'yjs'\n *   import { WebsocketProvider } from 'y-websocket'\n *   const doc = new Y.Doc()\n *   const provider = new WebsocketProvider('http://localhost:1234', 'my-document-name', doc)\n *\n * @extends {Observable<string>}\n */\nexport class WebsocketProvider extends Observable {\n  /**\n   * @param {string} serverUrl\n   * @param {string} roomname\n   * @param {Y.Doc} doc\n   * @param {object} [opts]\n   * @param {boolean} [opts.connect]\n   * @param {awarenessProtocol.Awareness} [opts.awareness]\n   * @param {Object<string,string>} [opts.params]\n   * @param {typeof WebSocket} [opts.WebSocketPolyfill] Optionall provide a WebSocket polyfill\n   * @param {number} [opts.resyncInterval] Request server state every `resyncInterval` milliseconds\n   */\n  constructor (serverUrl, roomname, doc, { connect = true, awareness = new awarenessProtocol.Awareness(doc), params = {}, WebSocketPolyfill = WebSocket, resyncInterval = -1 } = {}) {\n    super()\n    // ensure that url is always ends with /\n    while (serverUrl[serverUrl.length - 1] === '/') {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1)\n    }\n    const encodedParams = url.encodeQueryParams(params)\n    this.bcChannel = serverUrl + '/' + roomname\n    this.url = serverUrl + '/' + roomname + (encodedParams.length === 0 ? '' : '?' + encodedParams)\n    this.roomname = roomname\n    this.doc = doc\n    this._WS = WebSocketPolyfill\n    this.awareness = awareness\n    this.wsconnected = false\n    this.wsconnecting = false\n    this.bcconnected = false\n    this.wsUnsuccessfulReconnects = 0\n    this.messageHandlers = messageHandlers.slice()\n    this.mux = mutex.createMutex()\n    /**\n     * @type {boolean}\n     */\n    this._synced = false\n    /**\n     * @type {WebSocket?}\n     */\n    this.ws = null\n    this.wsLastMessageReceived = 0\n    /**\n     * Whether to connect to other peers or not\n     * @type {boolean}\n     */\n    this.shouldConnect = connect\n\n    /**\n     * @type {number}\n     */\n    this._resyncInterval = 0\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */ (setInterval(() => {\n        if (this.ws) {\n          // resend sync step 1\n          const encoder = encoding.createEncoder()\n          encoding.writeVarUint(encoder, messageSync)\n          syncProtocol.writeSyncStep1(encoder, doc)\n          this.ws.send(encoding.toUint8Array(encoder))\n        }\n      }, resyncInterval))\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     */\n    this._bcSubscriber = data => {\n      this.mux(() => {\n        const encoder = readMessage(this, new Uint8Array(data), false)\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder))\n        }\n      })\n    }\n    /**\n     * Listens to Yjs updates and sends them to remote peers (ws and broadcastchannel)\n     * @param {Uint8Array} update\n     * @param {any} origin\n     */\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder()\n        encoding.writeVarUint(encoder, messageSync)\n        syncProtocol.writeUpdate(encoder, update)\n        broadcastMessage(this, encoding.toUint8Array(encoder))\n      }\n    }\n    this.doc.on('update', this._updateHandler)\n    /**\n     * @param {any} changed\n     * @param {any} origin\n     */\n    this._awarenessUpdateHandler = ({ added, updated, removed }, origin) => {\n      const changedClients = added.concat(updated).concat(removed)\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, messageAwareness)\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients))\n      broadcastMessage(this, encoding.toUint8Array(encoder))\n    }\n    this._beforeUnloadHandler = () => {\n      awarenessProtocol.removeAwarenessStates(this.awareness, [doc.clientID], 'window unload')\n    }\n    if (typeof window !== 'undefined') {\n      window.addEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.on('exit', () => this._beforeUnloadHandler)\n    }\n    awareness.on('update', this._awarenessUpdateHandler)\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      if (this.wsconnected && messageReconnectTimeout < time.getUnixTime() - this.wsLastMessageReceived) {\n        // no message received in a long time - not even your own awareness\n        // updates (which are updated every 15 seconds)\n        /** @type {WebSocket} */ (this.ws).close()\n      }\n    }, messageReconnectTimeout / 10))\n    if (connect) {\n      this.connect()\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get synced () {\n    return this._synced\n  }\n\n  set synced (state) {\n    if (this._synced !== state) {\n      this._synced = state\n      this.emit('synced', [state])\n      this.emit('sync', [state])\n    }\n  }\n\n  destroy () {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval)\n    }\n    clearInterval(this._checkInterval)\n    this.disconnect()\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('beforeunload', this._beforeUnloadHandler)\n    } else if (typeof process !== 'undefined') {\n      process.off('exit', () => this._beforeUnloadHandler)\n    }\n    this.awareness.off('update', this._awarenessUpdateHandler)\n    this.doc.off('update', this._updateHandler)\n    super.destroy()\n  }\n\n  connectBc () {\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = true\n    }\n    // send sync step1 to bc\n    this.mux(() => {\n      // write sync step 1\n      const encoderSync = encoding.createEncoder()\n      encoding.writeVarUint(encoderSync, messageSync)\n      syncProtocol.writeSyncStep1(encoderSync, this.doc)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync))\n      // broadcast local state\n      const encoderState = encoding.createEncoder()\n      encoding.writeVarUint(encoderState, messageSync)\n      syncProtocol.writeSyncStep2(encoderState, this.doc)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderState))\n      // write queryAwareness\n      const encoderAwarenessQuery = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness)\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessQuery))\n      // broadcast local awareness state\n      const encoderAwarenessState = encoding.createEncoder()\n      encoding.writeVarUint(encoderAwarenessState, messageAwareness)\n      encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID]))\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessState))\n    })\n  }\n\n  disconnectBc () {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, messageAwareness)\n    encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID], new Map()))\n    broadcastMessage(this, encoding.toUint8Array(encoder))\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber)\n      this.bcconnected = false\n    }\n  }\n\n  disconnect () {\n    this.shouldConnect = false\n    this.disconnectBc()\n    if (this.ws !== null) {\n      this.ws.close()\n    }\n  }\n\n  connect () {\n    this.shouldConnect = true\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this)\n      this.connectBc()\n    }\n  }\n}\n"],"names":["encoding.writeVarUint","syncProtocol.readSyncMessage","syncProtocol.messageYjsSyncStep2","encoding.writeVarUint8Array","awarenessProtocol.encodeAwarenessUpdate","awarenessProtocol.applyAwarenessUpdate","decoding.readVarUint8Array","authProtocol.readAuthMessage","decoding.createDecoder","encoding.createEncoder","decoding.readVarUint","time.getUnixTime","encoding.length","encoding.toUint8Array","awarenessProtocol.removeAwarenessStates","math.min","math.log10","syncProtocol.writeSyncStep1","bc.publish","Observable","awarenessProtocol.Awareness","url.encodeQueryParams","mutex.createMutex","syncProtocol.writeUpdate","bc.subscribe","syncProtocol.writeSyncStep2","bc.unsubscribe"],"mappings":"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"}