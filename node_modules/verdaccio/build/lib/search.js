"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lunrMutableIndexes = _interopRequireDefault(require("lunr-mutable-indexes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Handle the search Indexer.
 */
class Search {
  // @ts-ignore

  /**
   * Constructor.
   */
  constructor() {
    _defineProperty(this, "index", void 0);

    _defineProperty(this, "storage", void 0);

    this.index = (0, _lunrMutableIndexes.default)(function () {
      // FIXME: there is no types for this library

      /* eslint no-invalid-this:off */
      // @ts-ignore
      this.field('name', {
        boost: 10
      }); // @ts-ignore

      this.field('description', {
        boost: 4
      }); // @ts-ignore

      this.field('author', {
        boost: 6
      }); // @ts-ignore

      this.field('keywords', {
        boost: 7
      }); // @ts-ignore

      this.field('version'); // @ts-ignore

      this.field('readme');
    });
  }
  /**
   * Performs a query to the indexer.
   * If the keyword is a * it returns all local elements
   * otherwise performs a search
   * @param {*} q the keyword
   * @return {Array} list of results.
   */


  query(query) {
    const localStorage = this.storage.localStorage;
    const hasScope = query.startsWith('@'); // FIXME: lunr-mutable-indexes ignored '@' during indexing

    if (hasScope) {
      query = query.replace('@', '');
    }

    const results = query === '*' ? localStorage.storagePlugin.get(items => {
      items.map(function (pkg) {
        return {
          ref: pkg,
          score: 1
        };
      });
    }) : this.index.search(`*${query}*`);
    return hasScope ? results.filter(({
      ref
    }) => ref.startsWith('@')) : results;
  }
  /**
   * Add a new element to index
   * @param {*} pkg the package
   */


  add(pkg) {
    this.index.add({
      id: pkg.name,
      name: pkg.name,
      description: pkg.description,
      version: `v${pkg.version}`,
      keywords: pkg.keywords,
      author: pkg._npmUser ? pkg._npmUser.name : '???'
    });
  }
  /**
   * Remove an element from the index.
   * @param {*} name the id element
   */


  remove(name) {
    this.index.remove({
      id: name
    });
  }
  /**
   * Force a re-index.
   */


  reindex() {
    this.storage.getLocalDatabase((error, packages) => {
      if (error) {
        // that function shouldn't produce any
        throw error;
      }

      let i = packages.length;

      while (i--) {
        this.add(packages[i]);
      }
    });
  }
  /**
   * Set up the {Storage}
   * @param {*} storage An storage reference.
   */


  configureStorage(storage) {
    this.storage = storage;
    this.reindex();
  }

}

var _default = new Search();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvc2VhcmNoLnRzIl0sIm5hbWVzIjpbIlNlYXJjaCIsImNvbnN0cnVjdG9yIiwiaW5kZXgiLCJmaWVsZCIsImJvb3N0IiwicXVlcnkiLCJsb2NhbFN0b3JhZ2UiLCJzdG9yYWdlIiwiaGFzU2NvcGUiLCJzdGFydHNXaXRoIiwicmVwbGFjZSIsInJlc3VsdHMiLCJzdG9yYWdlUGx1Z2luIiwiZ2V0IiwiaXRlbXMiLCJtYXAiLCJwa2ciLCJyZWYiLCJzY29yZSIsInNlYXJjaCIsImZpbHRlciIsImFkZCIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwidmVyc2lvbiIsImtleXdvcmRzIiwiYXV0aG9yIiwiX25wbVVzZXIiLCJyZW1vdmUiLCJyZWluZGV4IiwiZ2V0TG9jYWxEYXRhYmFzZSIsImVycm9yIiwicGFja2FnZXMiLCJpIiwibGVuZ3RoIiwiY29uZmlndXJlU3RvcmFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOzs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQSxNQUFOLENBQW1DO0FBRWpDOztBQUdBO0FBQ0Y7QUFDQTtBQUNTQyxFQUFBQSxXQUFXLEdBQUc7QUFBQTs7QUFBQTs7QUFDbkIsU0FBS0MsS0FBTCxHQUFhLGlDQUFZLFlBQWtCO0FBQ3pDOztBQUNBO0FBQ0E7QUFDQSxXQUFLQyxLQUFMLENBQVcsTUFBWCxFQUFtQjtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFuQixFQUp5QyxDQUt6Qzs7QUFDQSxXQUFLRCxLQUFMLENBQVcsYUFBWCxFQUEwQjtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUExQixFQU55QyxDQU96Qzs7QUFDQSxXQUFLRCxLQUFMLENBQVcsUUFBWCxFQUFxQjtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFyQixFQVJ5QyxDQVN6Qzs7QUFDQSxXQUFLRCxLQUFMLENBQVcsVUFBWCxFQUF1QjtBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUF2QixFQVZ5QyxD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IGx1bnJNdXRhYmxlIGZyb20gJ2x1bnItbXV0YWJsZS1pbmRleGVzJztcbmltcG9ydCB7IFZlcnNpb24gfSBmcm9tICdAdmVyZGFjY2lvL3R5cGVzJztcbmltcG9ydCB7IElTdG9yYWdlSGFuZGxlciwgSVdlYlNlYXJjaCwgSVN0b3JhZ2UgfSBmcm9tICcuLi8uLi90eXBlcyc7XG4vKipcbiAqIEhhbmRsZSB0aGUgc2VhcmNoIEluZGV4ZXIuXG4gKi9cbmNsYXNzIFNlYXJjaCBpbXBsZW1lbnRzIElXZWJTZWFyY2gge1xuICBwdWJsaWMgaW5kZXg6IGx1bnJNdXRhYmxlLmluZGV4O1xuICAvLyBAdHMtaWdub3JlXG4gIHB1YmxpYyBzdG9yYWdlOiBJU3RvcmFnZUhhbmRsZXI7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yLlxuICAgKi9cbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaW5kZXggPSBsdW5yTXV0YWJsZShmdW5jdGlvbiAoKTogdm9pZCB7XG4gICAgICAvLyBGSVhNRTogdGhlcmUgaXMgbm8gdHlwZXMgZm9yIHRoaXMgbGlicmFyeVxuICAgICAgLyogZXNsaW50IG5vLWludmFsaWQtdGhpczpvZmYgKi9cbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRoaXMuZmllbGQoJ25hbWUnLCB7IGJvb3N0OiAxMCB9KTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRoaXMuZmllbGQoJ2Rlc2NyaXB0aW9uJywgeyBib29zdDogNCB9KTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHRoaXMuZmllbGQoJ2F1dGhvcicsIHsgYm9vc3Q6IDYgfSk7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICB0aGlzLmZpZWxkKCdrZXl3b3JkcycsIHsgYm9vc3Q6IDcgfSk7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICB0aGlzLmZpZWxkKCd2ZXJzaW9uJyk7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICB0aGlzLmZpZWxkKCdyZWFkbWUnKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQZXJmb3JtcyBhIHF1ZXJ5IHRvIHRoZSBpbmRleGVyLlxuICAgKiBJZiB0aGUga2V5d29yZCBpcyBhICogaXQgcmV0dXJucyBhbGwgbG9jYWwgZWxlbWVudHNcbiAgICogb3RoZXJ3aXNlIHBlcmZvcm1zIGEgc2VhcmNoXG4gICAqIEBwYXJhbSB7Kn0gcSB0aGUga2V5d29yZFxuICAgKiBAcmV0dXJuIHtBcnJheX0gbGlzdCBvZiByZXN1bHRzLlxuICAgKi9cbiAgcHVibGljIHF1ZXJ5KHF1ZXJ5OiBzdHJpbmcpOiBhbnlbXSB7XG4gICAgY29uc3QgbG9jYWxTdG9yYWdlID0gdGhpcy5zdG9yYWdlLmxvY2FsU3RvcmFnZSBhcyBJU3RvcmFnZTtcblxuICAgIGNvbnN0IGhhc1Njb3BlID0gcXVlcnkuc3RhcnRzV2l0aCgnQCcpO1xuICAgIC8vIEZJWE1FOiBsdW5yLW11dGFibGUtaW5kZXhlcyBpZ25vcmVkICdAJyBkdXJpbmcgaW5kZXhpbmdcbiAgICBpZiAoaGFzU2NvcGUpIHtcbiAgICAgIHF1ZXJ5ID0gcXVlcnkucmVwbGFjZSgnQCcsICcnKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHRzID0gcXVlcnkgPT09ICcqJ1xuICAgICAgPyBsb2NhbFN0b3JhZ2Uuc3RvcmFnZVBsdWdpbi5nZXQoKGl0ZW1zKTogYW55ID0+IHtcbiAgICAgICAgICBpdGVtcy5tYXAoZnVuY3Rpb24gKHBrZyk6IGFueSB7XG4gICAgICAgICAgICByZXR1cm4geyByZWY6IHBrZywgc2NvcmU6IDEgfTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgIDogdGhpcy5pbmRleC5zZWFyY2goYCoke3F1ZXJ5fSpgKTtcblxuICAgIHJldHVybiBoYXNTY29wZVxuICAgICAgPyByZXN1bHRzLmZpbHRlcigoeyByZWYgfSkgPT4gcmVmLnN0YXJ0c1dpdGgoJ0AnKSlcbiAgICAgIDogcmVzdWx0cztcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgYSBuZXcgZWxlbWVudCB0byBpbmRleFxuICAgKiBAcGFyYW0geyp9IHBrZyB0aGUgcGFja2FnZVxuICAgKi9cbiAgcHVibGljIGFkZChwa2c6IFZlcnNpb24pOiB2b2lkIHtcbiAgICB0aGlzLmluZGV4LmFkZCh7XG4gICAgICBpZDogcGtnLm5hbWUsXG4gICAgICBuYW1lOiBwa2cubmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBwa2cuZGVzY3JpcHRpb24sXG4gICAgICB2ZXJzaW9uOiBgdiR7cGtnLnZlcnNpb259YCxcbiAgICAgIGtleXdvcmRzOiBwa2cua2V5d29yZHMsXG4gICAgICBhdXRob3I6IHBrZy5fbnBtVXNlciA/IHBrZy5fbnBtVXNlci5uYW1lIDogJz8/PydcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYW4gZWxlbWVudCBmcm9tIHRoZSBpbmRleC5cbiAgICogQHBhcmFtIHsqfSBuYW1lIHRoZSBpZCBlbGVtZW50XG4gICAqL1xuICBwdWJsaWMgcmVtb3ZlKG5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuaW5kZXgucmVtb3ZlKHsgaWQ6IG5hbWUgfSk7XG4gIH1cblxuICAvKipcbiAgICogRm9yY2UgYSByZS1pbmRleC5cbiAgICovXG4gIHB1YmxpYyByZWluZGV4KCk6IHZvaWQge1xuICAgIHRoaXMuc3RvcmFnZS5nZXRMb2NhbERhdGFiYXNlKChlcnJvciwgcGFja2FnZXMpOiB2b2lkID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAvLyB0aGF0IGZ1bmN0aW9uIHNob3VsZG4ndCBwcm9kdWNlIGFueVxuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICAgIGxldCBpID0gcGFja2FnZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICB0aGlzLmFkZChwYWNrYWdlc1tpXSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHVwIHRoZSB7U3RvcmFnZX1cbiAgICogQHBhcmFtIHsqfSBzdG9yYWdlIEFuIHN0b3JhZ2UgcmVmZXJlbmNlLlxuICAgKi9cbiAgcHVibGljIGNvbmZpZ3VyZVN0b3JhZ2Uoc3RvcmFnZTogSVN0b3JhZ2VIYW5kbGVyKTogdm9pZCB7XG4gICAgdGhpcy5zdG9yYWdlID0gc3RvcmFnZTtcbiAgICB0aGlzLnJlaW5kZXgoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgU2VhcmNoKCk7XG4iXX0=