"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validatePrimaryColor = validatePrimaryColor;
exports.resolveLogo = resolveLogo;
exports.default = renderHTML;

var _url = require("url");

var _path = _interopRequireDefault(require("path"));

var _debug = _interopRequireDefault(require("debug"));

var _lruCache = _interopRequireDefault(require("lru-cache"));

var _commonsApi = require("@verdaccio/commons-api");

var _utils = require("../../../lib/utils");

var _constants = require("../../../lib/constants");

var _template = _interopRequireDefault(require("./template"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pkgJSON = require('../../../../package.json');

const DEFAULT_LANGUAGE = 'es-US';
const cache = new _lruCache.default({
  max: 500,
  maxAge: 1000 * 60 * 60
});
const debug = (0, _debug.default)('verdaccio');
const defaultManifestFiles = {
  js: ['runtime.js', 'vendors.js', 'main.js'],
  ico: 'favicon.ico'
};

function validatePrimaryColor(primaryColor) {
  const isHex = /^#+([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/i.test(primaryColor);

  if (!isHex) {
    debug('invalid primary color %o', primaryColor);
    return;
  }

  return primaryColor;
}

function resolveLogo(config, req) {
  var _config$web, _config$web2, _config$web4;

  const isLocalFile = (config === null || config === void 0 ? void 0 : (_config$web = config.web) === null || _config$web === void 0 ? void 0 : _config$web.logo) && !(0, _utils.isHTTPProtocol)(config === null || config === void 0 ? void 0 : (_config$web2 = config.web) === null || _config$web2 === void 0 ? void 0 : _config$web2.logo);

  if (isLocalFile) {
    var _config$web3;

    return `${(0, _utils.getPublicUrl)(config === null || config === void 0 ? void 0 : config.url_prefix, req)}-/static/${_path.default.basename(config === null || config === void 0 ? void 0 : (_config$web3 = config.web) === null || _config$web3 === void 0 ? void 0 : _config$web3.logo)}`;
  } else if ((0, _utils.isHTTPProtocol)(config === null || config === void 0 ? void 0 : (_config$web4 = config.web) === null || _config$web4 === void 0 ? void 0 : _config$web4.logo)) {
    var _config$web5;

    return config === null || config === void 0 ? void 0 : (_config$web5 = config.web) === null || _config$web5 === void 0 ? void 0 : _config$web5.logo;
  } else {
    return '';
  }
}

function renderHTML(config, manifest, manifestFiles, req, res) {
  var _config$i18n$web, _config$i18n, _config$web$darkMode, _config$web6, _config$web$title, _config$web7, _config$web$scope, _config$web8, _validatePrimaryColor, _config$web9;

  const {
    url_prefix
  } = config;
  const base = (0, _utils.getPublicUrl)(config === null || config === void 0 ? void 0 : config.url_prefix, req);
  const basename = new _url.URL(base).pathname;
  const language = (_config$i18n$web = config === null || config === void 0 ? void 0 : (_config$i18n = config.i18n) === null || _config$i18n === void 0 ? void 0 : _config$i18n.web) !== null && _config$i18n$web !== void 0 ? _config$i18n$web : DEFAULT_LANGUAGE;
  const darkMode = (_config$web$darkMode = config === null || config === void 0 ? void 0 : (_config$web6 = config.web) === null || _config$web6 === void 0 ? void 0 : _config$web6.darkMode) !== null && _config$web$darkMode !== void 0 ? _config$web$darkMode : false;
  const title = (_config$web$title = config === null || config === void 0 ? void 0 : (_config$web7 = config.web) === null || _config$web7 === void 0 ? void 0 : _config$web7.title) !== null && _config$web$title !== void 0 ? _config$web$title : _constants.WEB_TITLE;
  const scope = (_config$web$scope = config === null || config === void 0 ? void 0 : (_config$web8 = config.web) === null || _config$web8 === void 0 ? void 0 : _config$web8.scope) !== null && _config$web$scope !== void 0 ? _config$web$scope : '';
  const logoURI = resolveLogo(config, req);
  const version = pkgJSON.version;
  const primaryColor = (_validatePrimaryColor = validatePrimaryColor(config === null || config === void 0 ? void 0 : (_config$web9 = config.web) === null || _config$web9 === void 0 ? void 0 : _config$web9.primary_color)) !== null && _validatePrimaryColor !== void 0 ? _validatePrimaryColor : '#4b5e40';
  const {
    scriptsBodyAfter,
    metaScripts,
    scriptsbodyBefore
  } = Object.assign({}, {
    scriptsBodyAfter: [],
    bodyBefore: [],
    metaScripts: []
  }, config === null || config === void 0 ? void 0 : config.web);
  const options = {
    darkMode,
    url_prefix,
    basename,
    base,
    primaryColor,
    version,
    logo: logoURI,
    title,
    scope,
    language
  };
  let webPage;

  try {
    webPage = cache.get('template');

    if (!webPage) {
      debug('web options %o', options);
      debug('web manifestFiles %o', manifestFiles);
      webPage = (0, _template.default)({
        manifest: manifestFiles !== null && manifestFiles !== void 0 ? manifestFiles : defaultManifestFiles,
        options,
        scriptsBodyAfter,
        metaScripts,
        scriptsbodyBefore
      }, manifest);
      debug('template :: %o', webPage);
      cache.set('template', webPage);
      debug('set template cache');
    } else {
      debug('reuse template cache');
    }
  } catch (error) {
    throw new Error(`theme could not be load, stack ${error.stack}`);
  }

  res.setHeader('Content-Type', _commonsApi.HEADERS.TEXT_HTML);
  res.send(webPage);
  debug('render web');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,